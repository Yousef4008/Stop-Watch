
Mini_Project2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000029d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000029d8  00002a6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800068  00800068  00002a74  2**0
                  ALLOC
  3 .stab         000014e8  00000000  00000000  00002a74  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000895  00000000  00000000  00003f5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  000047f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00004931  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00004aa1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  000066ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  000075d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00008384  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  000084e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00008771  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00008f3f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 d2 05 	jmp	0xba4	; 0xba4 <__vector_1>
       8:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__vector_2>
       c:	0c 94 17 06 	jmp	0xc2e	; 0xc2e <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a0 37       	cpi	r26, 0x70	; 112
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e8 ed       	ldi	r30, 0xD8	; 216
      78:	f9 e2       	ldi	r31, 0x29	; 41
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 c6 06 	call	0xd8c	; 0xd8c <main>
      8a:	0c 94 ea 14 	jmp	0x29d4	; 0x29d4 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 b3 14 	jmp	0x2966	; 0x2966 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 cf 14 	jmp	0x299e	; 0x299e <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 bf 14 	jmp	0x297e	; 0x297e <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 db 14 	jmp	0x29b6	; 0x29b6 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 bf 14 	jmp	0x297e	; 0x297e <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 db 14 	jmp	0x29b6	; 0x29b6 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 b3 14 	jmp	0x2966	; 0x2966 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 cf 14 	jmp	0x299e	; 0x299e <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 bf 14 	jmp	0x297e	; 0x297e <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 db 14 	jmp	0x29b6	; 0x29b6 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 bf 14 	jmp	0x297e	; 0x297e <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 db 14 	jmp	0x29b6	; 0x29b6 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 bf 14 	jmp	0x297e	; 0x297e <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 db 14 	jmp	0x29b6	; 0x29b6 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 c3 14 	jmp	0x2986	; 0x2986 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 df 14 	jmp	0x29be	; 0x29be <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <__vector_7>:
#include <util/delay.h>
#include <avr/interrupt.h>
int seconds = 0 , minutes = 0 , hours = 0 ;
unsigned char change_alarm_mode = 0 ;	// flag for changing alarm time mode
unsigned char alarm_mode = 0;			// flag for alarm mode
ISR (TIMER1_COMPA_vect){
     b46:	1f 92       	push	r1
     b48:	0f 92       	push	r0
     b4a:	0f b6       	in	r0, 0x3f	; 63
     b4c:	0f 92       	push	r0
     b4e:	11 24       	eor	r1, r1
     b50:	8f 93       	push	r24
     b52:	9f 93       	push	r25
     b54:	df 93       	push	r29
     b56:	cf 93       	push	r28
     b58:	cd b7       	in	r28, 0x3d	; 61
     b5a:	de b7       	in	r29, 0x3e	; 62
	if(!change_alarm_mode){		// only change time when device is not in change alarm time mode
     b5c:	80 91 6e 00 	lds	r24, 0x006E
     b60:	88 23       	and	r24, r24
     b62:	b9 f4       	brne	.+46     	; 0xb92 <__vector_7+0x4c>
		if(alarm_mode)			// alarm mode case : decrement the time
     b64:	80 91 6f 00 	lds	r24, 0x006F
     b68:	88 23       	and	r24, r24
     b6a:	51 f0       	breq	.+20     	; 0xb80 <__vector_7+0x3a>
			seconds--;
     b6c:	80 91 68 00 	lds	r24, 0x0068
     b70:	90 91 69 00 	lds	r25, 0x0069
     b74:	01 97       	sbiw	r24, 0x01	; 1
     b76:	90 93 69 00 	sts	0x0069, r25
     b7a:	80 93 68 00 	sts	0x0068, r24
     b7e:	09 c0       	rjmp	.+18     	; 0xb92 <__vector_7+0x4c>
		else
			seconds++;			// normal mode : increment the time
     b80:	80 91 68 00 	lds	r24, 0x0068
     b84:	90 91 69 00 	lds	r25, 0x0069
     b88:	01 96       	adiw	r24, 0x01	; 1
     b8a:	90 93 69 00 	sts	0x0069, r25
     b8e:	80 93 68 00 	sts	0x0068, r24
	}
}
     b92:	cf 91       	pop	r28
     b94:	df 91       	pop	r29
     b96:	9f 91       	pop	r25
     b98:	8f 91       	pop	r24
     b9a:	0f 90       	pop	r0
     b9c:	0f be       	out	0x3f, r0	; 63
     b9e:	0f 90       	pop	r0
     ba0:	1f 90       	pop	r1
     ba2:	18 95       	reti

00000ba4 <__vector_1>:
ISR (INT0_vect){
     ba4:	1f 92       	push	r1
     ba6:	0f 92       	push	r0
     ba8:	0f b6       	in	r0, 0x3f	; 63
     baa:	0f 92       	push	r0
     bac:	11 24       	eor	r1, r1
     bae:	ef 93       	push	r30
     bb0:	ff 93       	push	r31
     bb2:	df 93       	push	r29
     bb4:	cf 93       	push	r28
     bb6:	cd b7       	in	r28, 0x3d	; 61
     bb8:	de b7       	in	r29, 0x3e	; 62
	seconds = 0; minutes = 0; hours = 0;	// Reseting the stop watch
     bba:	10 92 69 00 	sts	0x0069, r1
     bbe:	10 92 68 00 	sts	0x0068, r1
     bc2:	10 92 6b 00 	sts	0x006B, r1
     bc6:	10 92 6a 00 	sts	0x006A, r1
     bca:	10 92 6d 00 	sts	0x006D, r1
     bce:	10 92 6c 00 	sts	0x006C, r1
	TCNT1 = 0 ;								// Start counting from zero.
     bd2:	ec e4       	ldi	r30, 0x4C	; 76
     bd4:	f0 e0       	ldi	r31, 0x00	; 0
     bd6:	11 82       	std	Z+1, r1	; 0x01
     bd8:	10 82       	st	Z, r1
}
     bda:	cf 91       	pop	r28
     bdc:	df 91       	pop	r29
     bde:	ff 91       	pop	r31
     be0:	ef 91       	pop	r30
     be2:	0f 90       	pop	r0
     be4:	0f be       	out	0x3f, r0	; 63
     be6:	0f 90       	pop	r0
     be8:	1f 90       	pop	r1
     bea:	18 95       	reti

00000bec <__vector_2>:
ISR (INT1_vect){
     bec:	1f 92       	push	r1
     bee:	0f 92       	push	r0
     bf0:	0f b6       	in	r0, 0x3f	; 63
     bf2:	0f 92       	push	r0
     bf4:	11 24       	eor	r1, r1
     bf6:	8f 93       	push	r24
     bf8:	af 93       	push	r26
     bfa:	bf 93       	push	r27
     bfc:	ef 93       	push	r30
     bfe:	ff 93       	push	r31
     c00:	df 93       	push	r29
     c02:	cf 93       	push	r28
     c04:	cd b7       	in	r28, 0x3d	; 61
     c06:	de b7       	in	r29, 0x3e	; 62
	TCCR1B &=~ (1<<CS10 | 1<<CS11 | 1<<CS12);	// Stop the stop watch
     c08:	ae e4       	ldi	r26, 0x4E	; 78
     c0a:	b0 e0       	ldi	r27, 0x00	; 0
     c0c:	ee e4       	ldi	r30, 0x4E	; 78
     c0e:	f0 e0       	ldi	r31, 0x00	; 0
     c10:	80 81       	ld	r24, Z
     c12:	88 7f       	andi	r24, 0xF8	; 248
     c14:	8c 93       	st	X, r24
}
     c16:	cf 91       	pop	r28
     c18:	df 91       	pop	r29
     c1a:	ff 91       	pop	r31
     c1c:	ef 91       	pop	r30
     c1e:	bf 91       	pop	r27
     c20:	af 91       	pop	r26
     c22:	8f 91       	pop	r24
     c24:	0f 90       	pop	r0
     c26:	0f be       	out	0x3f, r0	; 63
     c28:	0f 90       	pop	r0
     c2a:	1f 90       	pop	r1
     c2c:	18 95       	reti

00000c2e <__vector_3>:
ISR (INT2_vect){
     c2e:	1f 92       	push	r1
     c30:	0f 92       	push	r0
     c32:	0f b6       	in	r0, 0x3f	; 63
     c34:	0f 92       	push	r0
     c36:	11 24       	eor	r1, r1
     c38:	8f 93       	push	r24
     c3a:	ef 93       	push	r30
     c3c:	ff 93       	push	r31
     c3e:	df 93       	push	r29
     c40:	cf 93       	push	r28
     c42:	cd b7       	in	r28, 0x3d	; 61
     c44:	de b7       	in	r29, 0x3e	; 62
	TCCR1B = 1<<WGM12 | 1<< CS10 | 1<<CS11 ;	// turn on the stop watch
     c46:	ee e4       	ldi	r30, 0x4E	; 78
     c48:	f0 e0       	ldi	r31, 0x00	; 0
     c4a:	8b e0       	ldi	r24, 0x0B	; 11
     c4c:	80 83       	st	Z, r24
}
     c4e:	cf 91       	pop	r28
     c50:	df 91       	pop	r29
     c52:	ff 91       	pop	r31
     c54:	ef 91       	pop	r30
     c56:	8f 91       	pop	r24
     c58:	0f 90       	pop	r0
     c5a:	0f be       	out	0x3f, r0	; 63
     c5c:	0f 90       	pop	r0
     c5e:	1f 90       	pop	r1
     c60:	18 95       	reti

00000c62 <TIMER1_CTC_INIT>:
void TIMER1_CTC_INIT(unsigned short compare_value){
     c62:	df 93       	push	r29
     c64:	cf 93       	push	r28
     c66:	00 d0       	rcall	.+0      	; 0xc68 <TIMER1_CTC_INIT+0x6>
     c68:	cd b7       	in	r28, 0x3d	; 61
     c6a:	de b7       	in	r29, 0x3e	; 62
     c6c:	9a 83       	std	Y+2, r25	; 0x02
     c6e:	89 83       	std	Y+1, r24	; 0x01
	SREG |= (1<<7); 		// Enable global interrupts in MC
     c70:	af e5       	ldi	r26, 0x5F	; 95
     c72:	b0 e0       	ldi	r27, 0x00	; 0
     c74:	ef e5       	ldi	r30, 0x5F	; 95
     c76:	f0 e0       	ldi	r31, 0x00	; 0
     c78:	80 81       	ld	r24, Z
     c7a:	80 68       	ori	r24, 0x80	; 128
     c7c:	8c 93       	st	X, r24
	TCCR1A = 1<<FOC1A ;		// non-PWM mode.
     c7e:	ef e4       	ldi	r30, 0x4F	; 79
     c80:	f0 e0       	ldi	r31, 0x00	; 0
     c82:	88 e0       	ldi	r24, 0x08	; 8
     c84:	80 83       	st	Z, r24
	TCCR1B = 1<<WGM12 | 1<< CS10 | 1<<CS11 ;
     c86:	ee e4       	ldi	r30, 0x4E	; 78
     c88:	f0 e0       	ldi	r31, 0x00	; 0
     c8a:	8b e0       	ldi	r24, 0x0B	; 11
     c8c:	80 83       	st	Z, r24
	/* --> CTC mode.
	 * --> clk/64 (From prescaler).
	 * --> T(timer) = 64us
	 * --> compare value = 1 ms / 64 us = 15625
	 */
	TCNT1 = 0 ;					// Start counting from zero.
     c8e:	ec e4       	ldi	r30, 0x4C	; 76
     c90:	f0 e0       	ldi	r31, 0x00	; 0
     c92:	11 82       	std	Z+1, r1	; 0x01
     c94:	10 82       	st	Z, r1
	OCR1A = compare_value ; 	// Compare value = 15625
     c96:	ea e4       	ldi	r30, 0x4A	; 74
     c98:	f0 e0       	ldi	r31, 0x00	; 0
     c9a:	89 81       	ldd	r24, Y+1	; 0x01
     c9c:	9a 81       	ldd	r25, Y+2	; 0x02
     c9e:	91 83       	std	Z+1, r25	; 0x01
     ca0:	80 83       	st	Z, r24
	TIMSK |= 1<<OCIE1A ;		// Output Compare A Match Interrupt Enable
     ca2:	a9 e5       	ldi	r26, 0x59	; 89
     ca4:	b0 e0       	ldi	r27, 0x00	; 0
     ca6:	e9 e5       	ldi	r30, 0x59	; 89
     ca8:	f0 e0       	ldi	r31, 0x00	; 0
     caa:	80 81       	ld	r24, Z
     cac:	80 61       	ori	r24, 0x10	; 16
     cae:	8c 93       	st	X, r24

}
     cb0:	0f 90       	pop	r0
     cb2:	0f 90       	pop	r0
     cb4:	cf 91       	pop	r28
     cb6:	df 91       	pop	r29
     cb8:	08 95       	ret

00000cba <INT0_INIT>:
void INT0_INIT(void){
     cba:	df 93       	push	r29
     cbc:	cf 93       	push	r28
     cbe:	cd b7       	in	r28, 0x3d	; 61
     cc0:	de b7       	in	r29, 0x3e	; 62
	SREG |= (1<<7); 		// Enable global interrupts in MC
     cc2:	af e5       	ldi	r26, 0x5F	; 95
     cc4:	b0 e0       	ldi	r27, 0x00	; 0
     cc6:	ef e5       	ldi	r30, 0x5F	; 95
     cc8:	f0 e0       	ldi	r31, 0x00	; 0
     cca:	80 81       	ld	r24, Z
     ccc:	80 68       	ori	r24, 0x80	; 128
     cce:	8c 93       	st	X, r24
	MCUCR |= 1<<ISC01;		// The falling edge of INT0 generates an interrupt request
     cd0:	a5 e5       	ldi	r26, 0x55	; 85
     cd2:	b0 e0       	ldi	r27, 0x00	; 0
     cd4:	e5 e5       	ldi	r30, 0x55	; 85
     cd6:	f0 e0       	ldi	r31, 0x00	; 0
     cd8:	80 81       	ld	r24, Z
     cda:	82 60       	ori	r24, 0x02	; 2
     cdc:	8c 93       	st	X, r24
	GICR  |= 1<<INT0;		// External Interrupt Request 0 Enable
     cde:	ab e5       	ldi	r26, 0x5B	; 91
     ce0:	b0 e0       	ldi	r27, 0x00	; 0
     ce2:	eb e5       	ldi	r30, 0x5B	; 91
     ce4:	f0 e0       	ldi	r31, 0x00	; 0
     ce6:	80 81       	ld	r24, Z
     ce8:	80 64       	ori	r24, 0x40	; 64
     cea:	8c 93       	st	X, r24
	DDRD &=~ 1<<PD2;		// Set INT0 as input pin
     cec:	a1 e3       	ldi	r26, 0x31	; 49
     cee:	b0 e0       	ldi	r27, 0x00	; 0
     cf0:	e1 e3       	ldi	r30, 0x31	; 49
     cf2:	f0 e0       	ldi	r31, 0x00	; 0
     cf4:	80 81       	ld	r24, Z
     cf6:	88 7f       	andi	r24, 0xF8	; 248
     cf8:	8c 93       	st	X, r24
}
     cfa:	cf 91       	pop	r28
     cfc:	df 91       	pop	r29
     cfe:	08 95       	ret

00000d00 <INT1_INIT>:
void INT1_INIT(void){
     d00:	df 93       	push	r29
     d02:	cf 93       	push	r28
     d04:	cd b7       	in	r28, 0x3d	; 61
     d06:	de b7       	in	r29, 0x3e	; 62
	SREG |= (1<<7); 					// Enable global interrupts in MC
     d08:	af e5       	ldi	r26, 0x5F	; 95
     d0a:	b0 e0       	ldi	r27, 0x00	; 0
     d0c:	ef e5       	ldi	r30, 0x5F	; 95
     d0e:	f0 e0       	ldi	r31, 0x00	; 0
     d10:	80 81       	ld	r24, Z
     d12:	80 68       	ori	r24, 0x80	; 128
     d14:	8c 93       	st	X, r24
	MCUCR |= 1<<ISC11 | 1<<ISC11;		// The rising edge of INT1 generates an interrupt request
     d16:	a5 e5       	ldi	r26, 0x55	; 85
     d18:	b0 e0       	ldi	r27, 0x00	; 0
     d1a:	e5 e5       	ldi	r30, 0x55	; 85
     d1c:	f0 e0       	ldi	r31, 0x00	; 0
     d1e:	80 81       	ld	r24, Z
     d20:	88 60       	ori	r24, 0x08	; 8
     d22:	8c 93       	st	X, r24
	GICR  |= 1<<INT1;					// External Interrupt Request 1 Enable
     d24:	ab e5       	ldi	r26, 0x5B	; 91
     d26:	b0 e0       	ldi	r27, 0x00	; 0
     d28:	eb e5       	ldi	r30, 0x5B	; 91
     d2a:	f0 e0       	ldi	r31, 0x00	; 0
     d2c:	80 81       	ld	r24, Z
     d2e:	80 68       	ori	r24, 0x80	; 128
     d30:	8c 93       	st	X, r24
	DDRD &=~ 1<<PD3;					// Set INT1 as input pin
     d32:	a1 e3       	ldi	r26, 0x31	; 49
     d34:	b0 e0       	ldi	r27, 0x00	; 0
     d36:	e1 e3       	ldi	r30, 0x31	; 49
     d38:	f0 e0       	ldi	r31, 0x00	; 0
     d3a:	80 81       	ld	r24, Z
     d3c:	80 7f       	andi	r24, 0xF0	; 240
     d3e:	8c 93       	st	X, r24
}
     d40:	cf 91       	pop	r28
     d42:	df 91       	pop	r29
     d44:	08 95       	ret

00000d46 <INT2_INIT>:
void INT2_INIT(void){
     d46:	df 93       	push	r29
     d48:	cf 93       	push	r28
     d4a:	cd b7       	in	r28, 0x3d	; 61
     d4c:	de b7       	in	r29, 0x3e	; 62
	SREG |= (1<<7); 					// Enable global interrupts in MC
     d4e:	af e5       	ldi	r26, 0x5F	; 95
     d50:	b0 e0       	ldi	r27, 0x00	; 0
     d52:	ef e5       	ldi	r30, 0x5F	; 95
     d54:	f0 e0       	ldi	r31, 0x00	; 0
     d56:	80 81       	ld	r24, Z
     d58:	80 68       	ori	r24, 0x80	; 128
     d5a:	8c 93       	st	X, r24
	MCUCSR	&=~ 1<<ISC2;				// The falling edge of INT2 generates an interrupt request
     d5c:	a4 e5       	ldi	r26, 0x54	; 84
     d5e:	b0 e0       	ldi	r27, 0x00	; 0
     d60:	e4 e5       	ldi	r30, 0x54	; 84
     d62:	f0 e0       	ldi	r31, 0x00	; 0
     d64:	80 81       	ld	r24, Z
     d66:	80 78       	andi	r24, 0x80	; 128
     d68:	8c 93       	st	X, r24
	GICR  |= 1<<INT2;					// External Interrupt Request 1 Enable
     d6a:	ab e5       	ldi	r26, 0x5B	; 91
     d6c:	b0 e0       	ldi	r27, 0x00	; 0
     d6e:	eb e5       	ldi	r30, 0x5B	; 91
     d70:	f0 e0       	ldi	r31, 0x00	; 0
     d72:	80 81       	ld	r24, Z
     d74:	80 62       	ori	r24, 0x20	; 32
     d76:	8c 93       	st	X, r24
	DDRB &=~ 1<<PB2;					// Set INT2 as input pin
     d78:	a7 e3       	ldi	r26, 0x37	; 55
     d7a:	b0 e0       	ldi	r27, 0x00	; 0
     d7c:	e7 e3       	ldi	r30, 0x37	; 55
     d7e:	f0 e0       	ldi	r31, 0x00	; 0
     d80:	80 81       	ld	r24, Z
     d82:	88 7f       	andi	r24, 0xF8	; 248
     d84:	8c 93       	st	X, r24
}
     d86:	cf 91       	pop	r28
     d88:	df 91       	pop	r29
     d8a:	08 95       	ret

00000d8c <main>:
int main (void){
     d8c:	0f 93       	push	r16
     d8e:	1f 93       	push	r17
     d90:	df 93       	push	r29
     d92:	cf 93       	push	r28
     d94:	cd b7       	in	r28, 0x3d	; 61
     d96:	de b7       	in	r29, 0x3e	; 62
     d98:	cc 5d       	subi	r28, 0xDC	; 220
     d9a:	d0 40       	sbci	r29, 0x00	; 0
     d9c:	0f b6       	in	r0, 0x3f	; 63
     d9e:	f8 94       	cli
     da0:	de bf       	out	0x3e, r29	; 62
     da2:	0f be       	out	0x3f, r0	; 63
     da4:	cd bf       	out	0x3d, r28	; 61
	unsigned char common_selector = 0;	// for selecting the 7-segment using the Multiplexing method.
     da6:	fe 01       	movw	r30, r28
     da8:	e1 54       	subi	r30, 0x41	; 65
     daa:	ff 4f       	sbci	r31, 0xFF	; 255
     dac:	10 82       	st	Z, r1
	unsigned char dp_selector = 7;		// for selecting the 7-segment that will show the dp
     dae:	fe 01       	movw	r30, r28
     db0:	e2 54       	subi	r30, 0x42	; 66
     db2:	ff 4f       	sbci	r31, 0xFF	; 255
     db4:	87 e0       	ldi	r24, 0x07	; 7
     db6:	80 83       	st	Z, r24
	unsigned char set_flag = 0 , plus_flag = 0 , minus_flag = 0 , go_flag = 0 , arrow_flag = 0;
     db8:	fe 01       	movw	r30, r28
     dba:	e3 54       	subi	r30, 0x43	; 67
     dbc:	ff 4f       	sbci	r31, 0xFF	; 255
     dbe:	10 82       	st	Z, r1
     dc0:	fe 01       	movw	r30, r28
     dc2:	e4 54       	subi	r30, 0x44	; 68
     dc4:	ff 4f       	sbci	r31, 0xFF	; 255
     dc6:	10 82       	st	Z, r1
     dc8:	fe 01       	movw	r30, r28
     dca:	e5 54       	subi	r30, 0x45	; 69
     dcc:	ff 4f       	sbci	r31, 0xFF	; 255
     dce:	10 82       	st	Z, r1
     dd0:	fe 01       	movw	r30, r28
     dd2:	e6 54       	subi	r30, 0x46	; 70
     dd4:	ff 4f       	sbci	r31, 0xFF	; 255
     dd6:	10 82       	st	Z, r1
     dd8:	fe 01       	movw	r30, r28
     dda:	e7 54       	subi	r30, 0x47	; 71
     ddc:	ff 4f       	sbci	r31, 0xFF	; 255
     dde:	10 82       	st	Z, r1
	// flag for the bush buttons
	DDRC |= 0x0F;			// decoder 4-pins to the first 4-pins in PORTC.
     de0:	a4 e3       	ldi	r26, 0x34	; 52
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	e4 e3       	ldi	r30, 0x34	; 52
     de6:	f0 e0       	ldi	r31, 0x00	; 0
     de8:	80 81       	ld	r24, Z
     dea:	8f 60       	ori	r24, 0x0F	; 15
     dec:	8c 93       	st	X, r24
	DDRC |= 1<<PC4;			// dp pin as output pin
     dee:	a4 e3       	ldi	r26, 0x34	; 52
     df0:	b0 e0       	ldi	r27, 0x00	; 0
     df2:	e4 e3       	ldi	r30, 0x34	; 52
     df4:	f0 e0       	ldi	r31, 0x00	; 0
     df6:	80 81       	ld	r24, Z
     df8:	80 61       	ori	r24, 0x10	; 16
     dfa:	8c 93       	st	X, r24
	DDRA |= 0x3F;			// first 6-pins in PORTA as the enable/disable pins for the six 7-segments
     dfc:	aa e3       	ldi	r26, 0x3A	; 58
     dfe:	b0 e0       	ldi	r27, 0x00	; 0
     e00:	ea e3       	ldi	r30, 0x3A	; 58
     e02:	f0 e0       	ldi	r31, 0x00	; 0
     e04:	80 81       	ld	r24, Z
     e06:	8f 63       	ori	r24, 0x3F	; 63
     e08:	8c 93       	st	X, r24
	DDRD &=~ 1<<PD4;		// Set button as input pin
     e0a:	a1 e3       	ldi	r26, 0x31	; 49
     e0c:	b0 e0       	ldi	r27, 0x00	; 0
     e0e:	e1 e3       	ldi	r30, 0x31	; 49
     e10:	f0 e0       	ldi	r31, 0x00	; 0
     e12:	80 81       	ld	r24, Z
     e14:	80 7e       	andi	r24, 0xE0	; 224
     e16:	8c 93       	st	X, r24
	DDRD &=~ 1<<PD5;		// + button as input pin
     e18:	a1 e3       	ldi	r26, 0x31	; 49
     e1a:	b0 e0       	ldi	r27, 0x00	; 0
     e1c:	e1 e3       	ldi	r30, 0x31	; 49
     e1e:	f0 e0       	ldi	r31, 0x00	; 0
     e20:	80 81       	ld	r24, Z
     e22:	80 7c       	andi	r24, 0xC0	; 192
     e24:	8c 93       	st	X, r24
	DDRD &=~ 1<<PD6;		// - button as input pin
     e26:	a1 e3       	ldi	r26, 0x31	; 49
     e28:	b0 e0       	ldi	r27, 0x00	; 0
     e2a:	e1 e3       	ldi	r30, 0x31	; 49
     e2c:	f0 e0       	ldi	r31, 0x00	; 0
     e2e:	80 81       	ld	r24, Z
     e30:	80 78       	andi	r24, 0x80	; 128
     e32:	8c 93       	st	X, r24
	DDRD &=~ 1<<PD7;		// start button as input pin
     e34:	e1 e3       	ldi	r30, 0x31	; 49
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	20 81       	ld	r18, Z
     e3a:	e1 e3       	ldi	r30, 0x31	; 49
     e3c:	f0 e0       	ldi	r31, 0x00	; 0
     e3e:	10 82       	st	Z, r1
	DDRD &=~ 1<<PD0;		// <-- button as input pin
     e40:	a1 e3       	ldi	r26, 0x31	; 49
     e42:	b0 e0       	ldi	r27, 0x00	; 0
     e44:	e1 e3       	ldi	r30, 0x31	; 49
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	80 81       	ld	r24, Z
     e4a:	8e 7f       	andi	r24, 0xFE	; 254
     e4c:	8c 93       	st	X, r24
	DDRA |= 1<<PA6;			// buzzer pin as output pin
     e4e:	aa e3       	ldi	r26, 0x3A	; 58
     e50:	b0 e0       	ldi	r27, 0x00	; 0
     e52:	ea e3       	ldi	r30, 0x3A	; 58
     e54:	f0 e0       	ldi	r31, 0x00	; 0
     e56:	80 81       	ld	r24, Z
     e58:	80 64       	ori	r24, 0x40	; 64
     e5a:	8c 93       	st	X, r24
	PORTD |= 0b11110001;	// internal pull activation
     e5c:	a2 e3       	ldi	r26, 0x32	; 50
     e5e:	b0 e0       	ldi	r27, 0x00	; 0
     e60:	e2 e3       	ldi	r30, 0x32	; 50
     e62:	f0 e0       	ldi	r31, 0x00	; 0
     e64:	80 81       	ld	r24, Z
     e66:	81 6f       	ori	r24, 0xF1	; 241
     e68:	8c 93       	st	X, r24
	PORTC &=~ 0x0F;			// number zero initially
     e6a:	a5 e3       	ldi	r26, 0x35	; 53
     e6c:	b0 e0       	ldi	r27, 0x00	; 0
     e6e:	e5 e3       	ldi	r30, 0x35	; 53
     e70:	f0 e0       	ldi	r31, 0x00	; 0
     e72:	80 81       	ld	r24, Z
     e74:	80 7f       	andi	r24, 0xF0	; 240
     e76:	8c 93       	st	X, r24
	PORTC |= 1<<PC4;		// turn off dp led initially
     e78:	a5 e3       	ldi	r26, 0x35	; 53
     e7a:	b0 e0       	ldi	r27, 0x00	; 0
     e7c:	e5 e3       	ldi	r30, 0x35	; 53
     e7e:	f0 e0       	ldi	r31, 0x00	; 0
     e80:	80 81       	ld	r24, Z
     e82:	80 61       	ori	r24, 0x10	; 16
     e84:	8c 93       	st	X, r24
	PORTA &=~ 0<<PA6;		// turn off the buzzer initially
     e86:	ab e3       	ldi	r26, 0x3B	; 59
     e88:	b0 e0       	ldi	r27, 0x00	; 0
     e8a:	eb e3       	ldi	r30, 0x3B	; 59
     e8c:	f0 e0       	ldi	r31, 0x00	; 0
     e8e:	80 81       	ld	r24, Z
     e90:	80 7c       	andi	r24, 0xC0	; 192
     e92:	8c 93       	st	X, r24
	PORTA &=~ 0x3F;			// all 7-segment are off initially
     e94:	ab e3       	ldi	r26, 0x3B	; 59
     e96:	b0 e0       	ldi	r27, 0x00	; 0
     e98:	eb e3       	ldi	r30, 0x3B	; 59
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	80 81       	ld	r24, Z
     e9e:	80 7c       	andi	r24, 0xC0	; 192
     ea0:	8c 93       	st	X, r24
	PORTD |= 1<<PD2;		// Internal pull-up resistor on INT0
     ea2:	a2 e3       	ldi	r26, 0x32	; 50
     ea4:	b0 e0       	ldi	r27, 0x00	; 0
     ea6:	e2 e3       	ldi	r30, 0x32	; 50
     ea8:	f0 e0       	ldi	r31, 0x00	; 0
     eaa:	80 81       	ld	r24, Z
     eac:	84 60       	ori	r24, 0x04	; 4
     eae:	8c 93       	st	X, r24
	PORTB |= 1<<PB2;		// Internal pull-up resistor on INT2
     eb0:	a8 e3       	ldi	r26, 0x38	; 56
     eb2:	b0 e0       	ldi	r27, 0x00	; 0
     eb4:	e8 e3       	ldi	r30, 0x38	; 56
     eb6:	f0 e0       	ldi	r31, 0x00	; 0
     eb8:	80 81       	ld	r24, Z
     eba:	84 60       	ori	r24, 0x04	; 4
     ebc:	8c 93       	st	X, r24
	INT0_INIT();			// Interrupt 0 initialization
     ebe:	0e 94 5d 06 	call	0xcba	; 0xcba <INT0_INIT>
	INT1_INIT();			// Interrupt 1 initialization
     ec2:	0e 94 80 06 	call	0xd00	; 0xd00 <INT1_INIT>
	INT2_INIT();			// Interrupt 2 initialization
     ec6:	0e 94 a3 06 	call	0xd46	; 0xd46 <INT2_INIT>
	TIMER1_CTC_INIT(15625);
     eca:	89 e0       	ldi	r24, 0x09	; 9
     ecc:	9d e3       	ldi	r25, 0x3D	; 61
     ece:	0e 94 31 06 	call	0xc62	; 0xc62 <TIMER1_CTC_INIT>
	while(1){
		if(seconds > 59){
     ed2:	80 91 68 00 	lds	r24, 0x0068
     ed6:	90 91 69 00 	lds	r25, 0x0069
     eda:	8c 33       	cpi	r24, 0x3C	; 60
     edc:	91 05       	cpc	r25, r1
     ede:	6c f0       	brlt	.+26     	; 0xefa <main+0x16e>
			minutes++;
     ee0:	80 91 6a 00 	lds	r24, 0x006A
     ee4:	90 91 6b 00 	lds	r25, 0x006B
     ee8:	01 96       	adiw	r24, 0x01	; 1
     eea:	90 93 6b 00 	sts	0x006B, r25
     eee:	80 93 6a 00 	sts	0x006A, r24
			seconds = 0;
     ef2:	10 92 69 00 	sts	0x0069, r1
     ef6:	10 92 68 00 	sts	0x0068, r1
		}
		if(minutes > 59){
     efa:	80 91 6a 00 	lds	r24, 0x006A
     efe:	90 91 6b 00 	lds	r25, 0x006B
     f02:	8c 33       	cpi	r24, 0x3C	; 60
     f04:	91 05       	cpc	r25, r1
     f06:	6c f0       	brlt	.+26     	; 0xf22 <main+0x196>
			hours++;
     f08:	80 91 6c 00 	lds	r24, 0x006C
     f0c:	90 91 6d 00 	lds	r25, 0x006D
     f10:	01 96       	adiw	r24, 0x01	; 1
     f12:	90 93 6d 00 	sts	0x006D, r25
     f16:	80 93 6c 00 	sts	0x006C, r24
			minutes = 0;
     f1a:	10 92 6b 00 	sts	0x006B, r1
     f1e:	10 92 6a 00 	sts	0x006A, r1
		}
		if(hours > 23){
     f22:	80 91 6c 00 	lds	r24, 0x006C
     f26:	90 91 6d 00 	lds	r25, 0x006D
     f2a:	88 31       	cpi	r24, 0x18	; 24
     f2c:	91 05       	cpc	r25, r1
     f2e:	64 f0       	brlt	.+24     	; 0xf48 <main+0x1bc>
			seconds = 0 ; minutes = 0 ; hours = 0;
     f30:	10 92 69 00 	sts	0x0069, r1
     f34:	10 92 68 00 	sts	0x0068, r1
     f38:	10 92 6b 00 	sts	0x006B, r1
     f3c:	10 92 6a 00 	sts	0x006A, r1
     f40:	10 92 6d 00 	sts	0x006D, r1
     f44:	10 92 6c 00 	sts	0x006C, r1
		}

		common_selector = 1;	// selecting the first 7-segment
     f48:	fe 01       	movw	r30, r28
     f4a:	e1 54       	subi	r30, 0x41	; 65
     f4c:	ff 4f       	sbci	r31, 0xFF	; 255
     f4e:	81 e0       	ldi	r24, 0x01	; 1
     f50:	80 83       	st	Z, r24

		PORTA = (PORTA & 0xC0) | (common_selector & 0x3F);	// lighting up the 1st 7-segment
     f52:	ab e3       	ldi	r26, 0x3B	; 59
     f54:	b0 e0       	ldi	r27, 0x00	; 0
     f56:	eb e3       	ldi	r30, 0x3B	; 59
     f58:	f0 e0       	ldi	r31, 0x00	; 0
     f5a:	80 81       	ld	r24, Z
     f5c:	98 2f       	mov	r25, r24
     f5e:	90 7c       	andi	r25, 0xC0	; 192
     f60:	fe 01       	movw	r30, r28
     f62:	e1 54       	subi	r30, 0x41	; 65
     f64:	ff 4f       	sbci	r31, 0xFF	; 255
     f66:	80 81       	ld	r24, Z
     f68:	8f 73       	andi	r24, 0x3F	; 63
     f6a:	89 2b       	or	r24, r25
     f6c:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | (seconds%10 & 0x0F);		// showing the one's of seconds
     f6e:	05 e3       	ldi	r16, 0x35	; 53
     f70:	10 e0       	ldi	r17, 0x00	; 0
     f72:	e5 e3       	ldi	r30, 0x35	; 53
     f74:	f0 e0       	ldi	r31, 0x00	; 0
     f76:	80 81       	ld	r24, Z
     f78:	48 2f       	mov	r20, r24
     f7a:	40 7f       	andi	r20, 0xF0	; 240
     f7c:	80 91 68 00 	lds	r24, 0x0068
     f80:	90 91 69 00 	lds	r25, 0x0069
     f84:	2a e0       	ldi	r18, 0x0A	; 10
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	b9 01       	movw	r22, r18
     f8a:	0e 94 8c 14 	call	0x2918	; 0x2918 <__divmodhi4>
     f8e:	8f 70       	andi	r24, 0x0F	; 15
     f90:	84 2b       	or	r24, r20
     f92:	f8 01       	movw	r30, r16
     f94:	80 83       	st	Z, r24
		if(change_alarm_mode)		// if the system in changing time mode
     f96:	80 91 6e 00 	lds	r24, 0x006E
     f9a:	88 23       	and	r24, r24
     f9c:	b1 f1       	breq	.+108    	; 0x100a <main+0x27e>
			PORTC = (PORTC | 0x10) & ~((dp_selector==0) << PC4);	// light up the dp
     f9e:	25 e3       	ldi	r18, 0x35	; 53
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	c6 52       	subi	r28, 0x26	; 38
     fa4:	df 4f       	sbci	r29, 0xFF	; 255
     fa6:	39 83       	std	Y+1, r19	; 0x01
     fa8:	28 83       	st	Y, r18
     faa:	ca 5d       	subi	r28, 0xDA	; 218
     fac:	d0 40       	sbci	r29, 0x00	; 0
     fae:	e5 e3       	ldi	r30, 0x35	; 53
     fb0:	f0 e0       	ldi	r31, 0x00	; 0
     fb2:	80 81       	ld	r24, Z
     fb4:	80 61       	ori	r24, 0x10	; 16
     fb6:	c7 52       	subi	r28, 0x27	; 39
     fb8:	df 4f       	sbci	r29, 0xFF	; 255
     fba:	88 83       	st	Y, r24
     fbc:	c9 5d       	subi	r28, 0xD9	; 217
     fbe:	d0 40       	sbci	r29, 0x00	; 0
     fc0:	fe 01       	movw	r30, r28
     fc2:	e2 54       	subi	r30, 0x42	; 66
     fc4:	ff 4f       	sbci	r31, 0xFF	; 255
     fc6:	80 81       	ld	r24, Z
     fc8:	88 23       	and	r24, r24
     fca:	39 f4       	brne	.+14     	; 0xfda <main+0x24e>
     fcc:	3f ee       	ldi	r19, 0xEF	; 239
     fce:	c8 52       	subi	r28, 0x28	; 40
     fd0:	df 4f       	sbci	r29, 0xFF	; 255
     fd2:	38 83       	st	Y, r19
     fd4:	c8 5d       	subi	r28, 0xD8	; 216
     fd6:	d0 40       	sbci	r29, 0x00	; 0
     fd8:	06 c0       	rjmp	.+12     	; 0xfe6 <main+0x25a>
     fda:	8f ef       	ldi	r24, 0xFF	; 255
     fdc:	c8 52       	subi	r28, 0x28	; 40
     fde:	df 4f       	sbci	r29, 0xFF	; 255
     fe0:	88 83       	st	Y, r24
     fe2:	c8 5d       	subi	r28, 0xD8	; 216
     fe4:	d0 40       	sbci	r29, 0x00	; 0
     fe6:	c7 52       	subi	r28, 0x27	; 39
     fe8:	df 4f       	sbci	r29, 0xFF	; 255
     fea:	88 81       	ld	r24, Y
     fec:	c9 5d       	subi	r28, 0xD9	; 217
     fee:	d0 40       	sbci	r29, 0x00	; 0
     ff0:	c8 52       	subi	r28, 0x28	; 40
     ff2:	df 4f       	sbci	r29, 0xFF	; 255
     ff4:	98 81       	ld	r25, Y
     ff6:	c8 5d       	subi	r28, 0xD8	; 216
     ff8:	d0 40       	sbci	r29, 0x00	; 0
     ffa:	89 23       	and	r24, r25
     ffc:	c6 52       	subi	r28, 0x26	; 38
     ffe:	df 4f       	sbci	r29, 0xFF	; 255
    1000:	e8 81       	ld	r30, Y
    1002:	f9 81       	ldd	r31, Y+1	; 0x01
    1004:	ca 5d       	subi	r28, 0xDA	; 218
    1006:	d0 40       	sbci	r29, 0x00	; 0
    1008:	80 83       	st	Z, r24
		common_selector <<= 1;		// select the next 7-segment
    100a:	de 01       	movw	r26, r28
    100c:	a1 54       	subi	r26, 0x41	; 65
    100e:	bf 4f       	sbci	r27, 0xFF	; 255
    1010:	fe 01       	movw	r30, r28
    1012:	e1 54       	subi	r30, 0x41	; 65
    1014:	ff 4f       	sbci	r31, 0xFF	; 255
    1016:	80 81       	ld	r24, Z
    1018:	88 0f       	add	r24, r24
    101a:	8c 93       	st	X, r24
    101c:	fe 01       	movw	r30, r28
    101e:	ed 54       	subi	r30, 0x4D	; 77
    1020:	ff 4f       	sbci	r31, 0xFF	; 255
    1022:	80 e0       	ldi	r24, 0x00	; 0
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	a0 ec       	ldi	r26, 0xC0	; 192
    1028:	b0 e4       	ldi	r27, 0x40	; 64
    102a:	80 83       	st	Z, r24
    102c:	91 83       	std	Z+1, r25	; 0x01
    102e:	a2 83       	std	Z+2, r26	; 0x02
    1030:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1032:	8e 01       	movw	r16, r28
    1034:	01 55       	subi	r16, 0x51	; 81
    1036:	1f 4f       	sbci	r17, 0xFF	; 255
    1038:	fe 01       	movw	r30, r28
    103a:	ed 54       	subi	r30, 0x4D	; 77
    103c:	ff 4f       	sbci	r31, 0xFF	; 255
    103e:	60 81       	ld	r22, Z
    1040:	71 81       	ldd	r23, Z+1	; 0x01
    1042:	82 81       	ldd	r24, Z+2	; 0x02
    1044:	93 81       	ldd	r25, Z+3	; 0x03
    1046:	20 e0       	ldi	r18, 0x00	; 0
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	4a e7       	ldi	r20, 0x7A	; 122
    104c:	53 e4       	ldi	r21, 0x43	; 67
    104e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1052:	dc 01       	movw	r26, r24
    1054:	cb 01       	movw	r24, r22
    1056:	f8 01       	movw	r30, r16
    1058:	80 83       	st	Z, r24
    105a:	91 83       	std	Z+1, r25	; 0x01
    105c:	a2 83       	std	Z+2, r26	; 0x02
    105e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1060:	fe 01       	movw	r30, r28
    1062:	e1 55       	subi	r30, 0x51	; 81
    1064:	ff 4f       	sbci	r31, 0xFF	; 255
    1066:	60 81       	ld	r22, Z
    1068:	71 81       	ldd	r23, Z+1	; 0x01
    106a:	82 81       	ldd	r24, Z+2	; 0x02
    106c:	93 81       	ldd	r25, Z+3	; 0x03
    106e:	20 e0       	ldi	r18, 0x00	; 0
    1070:	30 e0       	ldi	r19, 0x00	; 0
    1072:	40 e8       	ldi	r20, 0x80	; 128
    1074:	5f e3       	ldi	r21, 0x3F	; 63
    1076:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    107a:	88 23       	and	r24, r24
    107c:	44 f4       	brge	.+16     	; 0x108e <main+0x302>
		__ticks = 1;
    107e:	fe 01       	movw	r30, r28
    1080:	e3 55       	subi	r30, 0x53	; 83
    1082:	ff 4f       	sbci	r31, 0xFF	; 255
    1084:	81 e0       	ldi	r24, 0x01	; 1
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	91 83       	std	Z+1, r25	; 0x01
    108a:	80 83       	st	Z, r24
    108c:	64 c0       	rjmp	.+200    	; 0x1156 <main+0x3ca>
	else if (__tmp > 65535)
    108e:	fe 01       	movw	r30, r28
    1090:	e1 55       	subi	r30, 0x51	; 81
    1092:	ff 4f       	sbci	r31, 0xFF	; 255
    1094:	60 81       	ld	r22, Z
    1096:	71 81       	ldd	r23, Z+1	; 0x01
    1098:	82 81       	ldd	r24, Z+2	; 0x02
    109a:	93 81       	ldd	r25, Z+3	; 0x03
    109c:	20 e0       	ldi	r18, 0x00	; 0
    109e:	3f ef       	ldi	r19, 0xFF	; 255
    10a0:	4f e7       	ldi	r20, 0x7F	; 127
    10a2:	57 e4       	ldi	r21, 0x47	; 71
    10a4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    10a8:	18 16       	cp	r1, r24
    10aa:	0c f0       	brlt	.+2      	; 0x10ae <main+0x322>
    10ac:	43 c0       	rjmp	.+134    	; 0x1134 <main+0x3a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10ae:	fe 01       	movw	r30, r28
    10b0:	ed 54       	subi	r30, 0x4D	; 77
    10b2:	ff 4f       	sbci	r31, 0xFF	; 255
    10b4:	60 81       	ld	r22, Z
    10b6:	71 81       	ldd	r23, Z+1	; 0x01
    10b8:	82 81       	ldd	r24, Z+2	; 0x02
    10ba:	93 81       	ldd	r25, Z+3	; 0x03
    10bc:	20 e0       	ldi	r18, 0x00	; 0
    10be:	30 e0       	ldi	r19, 0x00	; 0
    10c0:	40 e2       	ldi	r20, 0x20	; 32
    10c2:	51 e4       	ldi	r21, 0x41	; 65
    10c4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10c8:	dc 01       	movw	r26, r24
    10ca:	cb 01       	movw	r24, r22
    10cc:	8e 01       	movw	r16, r28
    10ce:	03 55       	subi	r16, 0x53	; 83
    10d0:	1f 4f       	sbci	r17, 0xFF	; 255
    10d2:	bc 01       	movw	r22, r24
    10d4:	cd 01       	movw	r24, r26
    10d6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    10da:	dc 01       	movw	r26, r24
    10dc:	cb 01       	movw	r24, r22
    10de:	f8 01       	movw	r30, r16
    10e0:	91 83       	std	Z+1, r25	; 0x01
    10e2:	80 83       	st	Z, r24
    10e4:	1f c0       	rjmp	.+62     	; 0x1124 <main+0x398>
    10e6:	fe 01       	movw	r30, r28
    10e8:	e5 55       	subi	r30, 0x55	; 85
    10ea:	ff 4f       	sbci	r31, 0xFF	; 255
    10ec:	89 e1       	ldi	r24, 0x19	; 25
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	91 83       	std	Z+1, r25	; 0x01
    10f2:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    10f4:	fe 01       	movw	r30, r28
    10f6:	e5 55       	subi	r30, 0x55	; 85
    10f8:	ff 4f       	sbci	r31, 0xFF	; 255
    10fa:	80 81       	ld	r24, Z
    10fc:	91 81       	ldd	r25, Z+1	; 0x01
    10fe:	01 97       	sbiw	r24, 0x01	; 1
    1100:	f1 f7       	brne	.-4      	; 0x10fe <main+0x372>
    1102:	fe 01       	movw	r30, r28
    1104:	e5 55       	subi	r30, 0x55	; 85
    1106:	ff 4f       	sbci	r31, 0xFF	; 255
    1108:	91 83       	std	Z+1, r25	; 0x01
    110a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    110c:	de 01       	movw	r26, r28
    110e:	a3 55       	subi	r26, 0x53	; 83
    1110:	bf 4f       	sbci	r27, 0xFF	; 255
    1112:	fe 01       	movw	r30, r28
    1114:	e3 55       	subi	r30, 0x53	; 83
    1116:	ff 4f       	sbci	r31, 0xFF	; 255
    1118:	80 81       	ld	r24, Z
    111a:	91 81       	ldd	r25, Z+1	; 0x01
    111c:	01 97       	sbiw	r24, 0x01	; 1
    111e:	11 96       	adiw	r26, 0x01	; 1
    1120:	9c 93       	st	X, r25
    1122:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1124:	fe 01       	movw	r30, r28
    1126:	e3 55       	subi	r30, 0x53	; 83
    1128:	ff 4f       	sbci	r31, 0xFF	; 255
    112a:	80 81       	ld	r24, Z
    112c:	91 81       	ldd	r25, Z+1	; 0x01
    112e:	00 97       	sbiw	r24, 0x00	; 0
    1130:	d1 f6       	brne	.-76     	; 0x10e6 <main+0x35a>
    1132:	27 c0       	rjmp	.+78     	; 0x1182 <main+0x3f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1134:	8e 01       	movw	r16, r28
    1136:	03 55       	subi	r16, 0x53	; 83
    1138:	1f 4f       	sbci	r17, 0xFF	; 255
    113a:	fe 01       	movw	r30, r28
    113c:	e1 55       	subi	r30, 0x51	; 81
    113e:	ff 4f       	sbci	r31, 0xFF	; 255
    1140:	60 81       	ld	r22, Z
    1142:	71 81       	ldd	r23, Z+1	; 0x01
    1144:	82 81       	ldd	r24, Z+2	; 0x02
    1146:	93 81       	ldd	r25, Z+3	; 0x03
    1148:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    114c:	dc 01       	movw	r26, r24
    114e:	cb 01       	movw	r24, r22
    1150:	f8 01       	movw	r30, r16
    1152:	91 83       	std	Z+1, r25	; 0x01
    1154:	80 83       	st	Z, r24
    1156:	de 01       	movw	r26, r28
    1158:	a7 55       	subi	r26, 0x57	; 87
    115a:	bf 4f       	sbci	r27, 0xFF	; 255
    115c:	fe 01       	movw	r30, r28
    115e:	e3 55       	subi	r30, 0x53	; 83
    1160:	ff 4f       	sbci	r31, 0xFF	; 255
    1162:	80 81       	ld	r24, Z
    1164:	91 81       	ldd	r25, Z+1	; 0x01
    1166:	8d 93       	st	X+, r24
    1168:	9c 93       	st	X, r25
    116a:	fe 01       	movw	r30, r28
    116c:	e7 55       	subi	r30, 0x57	; 87
    116e:	ff 4f       	sbci	r31, 0xFF	; 255
    1170:	80 81       	ld	r24, Z
    1172:	91 81       	ldd	r25, Z+1	; 0x01
    1174:	01 97       	sbiw	r24, 0x01	; 1
    1176:	f1 f7       	brne	.-4      	; 0x1174 <main+0x3e8>
    1178:	fe 01       	movw	r30, r28
    117a:	e7 55       	subi	r30, 0x57	; 87
    117c:	ff 4f       	sbci	r31, 0xFF	; 255
    117e:	91 83       	std	Z+1, r25	; 0x01
    1180:	80 83       	st	Z, r24
		_delay_ms(6);

		PORTA = (PORTA & 0xC0) | (common_selector & 0x3F);	// lighting up the 2nd 7-segment
    1182:	ab e3       	ldi	r26, 0x3B	; 59
    1184:	b0 e0       	ldi	r27, 0x00	; 0
    1186:	eb e3       	ldi	r30, 0x3B	; 59
    1188:	f0 e0       	ldi	r31, 0x00	; 0
    118a:	80 81       	ld	r24, Z
    118c:	98 2f       	mov	r25, r24
    118e:	90 7c       	andi	r25, 0xC0	; 192
    1190:	fe 01       	movw	r30, r28
    1192:	e1 54       	subi	r30, 0x41	; 65
    1194:	ff 4f       	sbci	r31, 0xFF	; 255
    1196:	80 81       	ld	r24, Z
    1198:	8f 73       	andi	r24, 0x3F	; 63
    119a:	89 2b       	or	r24, r25
    119c:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | (seconds/10 & 0x0F);		// showing the ten's of seconds
    119e:	05 e3       	ldi	r16, 0x35	; 53
    11a0:	10 e0       	ldi	r17, 0x00	; 0
    11a2:	e5 e3       	ldi	r30, 0x35	; 53
    11a4:	f0 e0       	ldi	r31, 0x00	; 0
    11a6:	80 81       	ld	r24, Z
    11a8:	48 2f       	mov	r20, r24
    11aa:	40 7f       	andi	r20, 0xF0	; 240
    11ac:	80 91 68 00 	lds	r24, 0x0068
    11b0:	90 91 69 00 	lds	r25, 0x0069
    11b4:	2a e0       	ldi	r18, 0x0A	; 10
    11b6:	30 e0       	ldi	r19, 0x00	; 0
    11b8:	b9 01       	movw	r22, r18
    11ba:	0e 94 8c 14 	call	0x2918	; 0x2918 <__divmodhi4>
    11be:	cb 01       	movw	r24, r22
    11c0:	8f 70       	andi	r24, 0x0F	; 15
    11c2:	84 2b       	or	r24, r20
    11c4:	f8 01       	movw	r30, r16
    11c6:	80 83       	st	Z, r24
		if(change_alarm_mode)		// if the system in changing time mode
    11c8:	80 91 6e 00 	lds	r24, 0x006E
    11cc:	88 23       	and	r24, r24
    11ce:	b1 f1       	breq	.+108    	; 0x123c <main+0x4b0>
			PORTC = (PORTC | 0x10) & ~((dp_selector==1) << PC4);	// light up the dp
    11d0:	25 e3       	ldi	r18, 0x35	; 53
    11d2:	30 e0       	ldi	r19, 0x00	; 0
    11d4:	ca 52       	subi	r28, 0x2A	; 42
    11d6:	df 4f       	sbci	r29, 0xFF	; 255
    11d8:	39 83       	std	Y+1, r19	; 0x01
    11da:	28 83       	st	Y, r18
    11dc:	c6 5d       	subi	r28, 0xD6	; 214
    11de:	d0 40       	sbci	r29, 0x00	; 0
    11e0:	e5 e3       	ldi	r30, 0x35	; 53
    11e2:	f0 e0       	ldi	r31, 0x00	; 0
    11e4:	80 81       	ld	r24, Z
    11e6:	80 61       	ori	r24, 0x10	; 16
    11e8:	cb 52       	subi	r28, 0x2B	; 43
    11ea:	df 4f       	sbci	r29, 0xFF	; 255
    11ec:	88 83       	st	Y, r24
    11ee:	c5 5d       	subi	r28, 0xD5	; 213
    11f0:	d0 40       	sbci	r29, 0x00	; 0
    11f2:	fe 01       	movw	r30, r28
    11f4:	e2 54       	subi	r30, 0x42	; 66
    11f6:	ff 4f       	sbci	r31, 0xFF	; 255
    11f8:	80 81       	ld	r24, Z
    11fa:	81 30       	cpi	r24, 0x01	; 1
    11fc:	39 f4       	brne	.+14     	; 0x120c <main+0x480>
    11fe:	3f ee       	ldi	r19, 0xEF	; 239
    1200:	cc 52       	subi	r28, 0x2C	; 44
    1202:	df 4f       	sbci	r29, 0xFF	; 255
    1204:	38 83       	st	Y, r19
    1206:	c4 5d       	subi	r28, 0xD4	; 212
    1208:	d0 40       	sbci	r29, 0x00	; 0
    120a:	06 c0       	rjmp	.+12     	; 0x1218 <main+0x48c>
    120c:	8f ef       	ldi	r24, 0xFF	; 255
    120e:	cc 52       	subi	r28, 0x2C	; 44
    1210:	df 4f       	sbci	r29, 0xFF	; 255
    1212:	88 83       	st	Y, r24
    1214:	c4 5d       	subi	r28, 0xD4	; 212
    1216:	d0 40       	sbci	r29, 0x00	; 0
    1218:	cb 52       	subi	r28, 0x2B	; 43
    121a:	df 4f       	sbci	r29, 0xFF	; 255
    121c:	88 81       	ld	r24, Y
    121e:	c5 5d       	subi	r28, 0xD5	; 213
    1220:	d0 40       	sbci	r29, 0x00	; 0
    1222:	cc 52       	subi	r28, 0x2C	; 44
    1224:	df 4f       	sbci	r29, 0xFF	; 255
    1226:	98 81       	ld	r25, Y
    1228:	c4 5d       	subi	r28, 0xD4	; 212
    122a:	d0 40       	sbci	r29, 0x00	; 0
    122c:	89 23       	and	r24, r25
    122e:	ca 52       	subi	r28, 0x2A	; 42
    1230:	df 4f       	sbci	r29, 0xFF	; 255
    1232:	e8 81       	ld	r30, Y
    1234:	f9 81       	ldd	r31, Y+1	; 0x01
    1236:	c6 5d       	subi	r28, 0xD6	; 214
    1238:	d0 40       	sbci	r29, 0x00	; 0
    123a:	80 83       	st	Z, r24
		common_selector <<= 1;		// select the next 7-segment
    123c:	de 01       	movw	r26, r28
    123e:	a1 54       	subi	r26, 0x41	; 65
    1240:	bf 4f       	sbci	r27, 0xFF	; 255
    1242:	fe 01       	movw	r30, r28
    1244:	e1 54       	subi	r30, 0x41	; 65
    1246:	ff 4f       	sbci	r31, 0xFF	; 255
    1248:	80 81       	ld	r24, Z
    124a:	88 0f       	add	r24, r24
    124c:	8c 93       	st	X, r24
    124e:	fe 01       	movw	r30, r28
    1250:	eb 55       	subi	r30, 0x5B	; 91
    1252:	ff 4f       	sbci	r31, 0xFF	; 255
    1254:	80 e0       	ldi	r24, 0x00	; 0
    1256:	90 e0       	ldi	r25, 0x00	; 0
    1258:	a0 ec       	ldi	r26, 0xC0	; 192
    125a:	b0 e4       	ldi	r27, 0x40	; 64
    125c:	80 83       	st	Z, r24
    125e:	91 83       	std	Z+1, r25	; 0x01
    1260:	a2 83       	std	Z+2, r26	; 0x02
    1262:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1264:	8e 01       	movw	r16, r28
    1266:	0f 55       	subi	r16, 0x5F	; 95
    1268:	1f 4f       	sbci	r17, 0xFF	; 255
    126a:	fe 01       	movw	r30, r28
    126c:	eb 55       	subi	r30, 0x5B	; 91
    126e:	ff 4f       	sbci	r31, 0xFF	; 255
    1270:	60 81       	ld	r22, Z
    1272:	71 81       	ldd	r23, Z+1	; 0x01
    1274:	82 81       	ldd	r24, Z+2	; 0x02
    1276:	93 81       	ldd	r25, Z+3	; 0x03
    1278:	20 e0       	ldi	r18, 0x00	; 0
    127a:	30 e0       	ldi	r19, 0x00	; 0
    127c:	4a e7       	ldi	r20, 0x7A	; 122
    127e:	53 e4       	ldi	r21, 0x43	; 67
    1280:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1284:	dc 01       	movw	r26, r24
    1286:	cb 01       	movw	r24, r22
    1288:	f8 01       	movw	r30, r16
    128a:	80 83       	st	Z, r24
    128c:	91 83       	std	Z+1, r25	; 0x01
    128e:	a2 83       	std	Z+2, r26	; 0x02
    1290:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1292:	fe 01       	movw	r30, r28
    1294:	ef 55       	subi	r30, 0x5F	; 95
    1296:	ff 4f       	sbci	r31, 0xFF	; 255
    1298:	60 81       	ld	r22, Z
    129a:	71 81       	ldd	r23, Z+1	; 0x01
    129c:	82 81       	ldd	r24, Z+2	; 0x02
    129e:	93 81       	ldd	r25, Z+3	; 0x03
    12a0:	20 e0       	ldi	r18, 0x00	; 0
    12a2:	30 e0       	ldi	r19, 0x00	; 0
    12a4:	40 e8       	ldi	r20, 0x80	; 128
    12a6:	5f e3       	ldi	r21, 0x3F	; 63
    12a8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    12ac:	88 23       	and	r24, r24
    12ae:	44 f4       	brge	.+16     	; 0x12c0 <main+0x534>
		__ticks = 1;
    12b0:	fe 01       	movw	r30, r28
    12b2:	e1 56       	subi	r30, 0x61	; 97
    12b4:	ff 4f       	sbci	r31, 0xFF	; 255
    12b6:	81 e0       	ldi	r24, 0x01	; 1
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	91 83       	std	Z+1, r25	; 0x01
    12bc:	80 83       	st	Z, r24
    12be:	64 c0       	rjmp	.+200    	; 0x1388 <main+0x5fc>
	else if (__tmp > 65535)
    12c0:	fe 01       	movw	r30, r28
    12c2:	ef 55       	subi	r30, 0x5F	; 95
    12c4:	ff 4f       	sbci	r31, 0xFF	; 255
    12c6:	60 81       	ld	r22, Z
    12c8:	71 81       	ldd	r23, Z+1	; 0x01
    12ca:	82 81       	ldd	r24, Z+2	; 0x02
    12cc:	93 81       	ldd	r25, Z+3	; 0x03
    12ce:	20 e0       	ldi	r18, 0x00	; 0
    12d0:	3f ef       	ldi	r19, 0xFF	; 255
    12d2:	4f e7       	ldi	r20, 0x7F	; 127
    12d4:	57 e4       	ldi	r21, 0x47	; 71
    12d6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    12da:	18 16       	cp	r1, r24
    12dc:	0c f0       	brlt	.+2      	; 0x12e0 <main+0x554>
    12de:	43 c0       	rjmp	.+134    	; 0x1366 <main+0x5da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12e0:	fe 01       	movw	r30, r28
    12e2:	eb 55       	subi	r30, 0x5B	; 91
    12e4:	ff 4f       	sbci	r31, 0xFF	; 255
    12e6:	60 81       	ld	r22, Z
    12e8:	71 81       	ldd	r23, Z+1	; 0x01
    12ea:	82 81       	ldd	r24, Z+2	; 0x02
    12ec:	93 81       	ldd	r25, Z+3	; 0x03
    12ee:	20 e0       	ldi	r18, 0x00	; 0
    12f0:	30 e0       	ldi	r19, 0x00	; 0
    12f2:	40 e2       	ldi	r20, 0x20	; 32
    12f4:	51 e4       	ldi	r21, 0x41	; 65
    12f6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    12fa:	dc 01       	movw	r26, r24
    12fc:	cb 01       	movw	r24, r22
    12fe:	8e 01       	movw	r16, r28
    1300:	01 56       	subi	r16, 0x61	; 97
    1302:	1f 4f       	sbci	r17, 0xFF	; 255
    1304:	bc 01       	movw	r22, r24
    1306:	cd 01       	movw	r24, r26
    1308:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    130c:	dc 01       	movw	r26, r24
    130e:	cb 01       	movw	r24, r22
    1310:	f8 01       	movw	r30, r16
    1312:	91 83       	std	Z+1, r25	; 0x01
    1314:	80 83       	st	Z, r24
    1316:	1f c0       	rjmp	.+62     	; 0x1356 <main+0x5ca>
    1318:	fe 01       	movw	r30, r28
    131a:	e3 56       	subi	r30, 0x63	; 99
    131c:	ff 4f       	sbci	r31, 0xFF	; 255
    131e:	89 e1       	ldi	r24, 0x19	; 25
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	91 83       	std	Z+1, r25	; 0x01
    1324:	80 83       	st	Z, r24
    1326:	fe 01       	movw	r30, r28
    1328:	e3 56       	subi	r30, 0x63	; 99
    132a:	ff 4f       	sbci	r31, 0xFF	; 255
    132c:	80 81       	ld	r24, Z
    132e:	91 81       	ldd	r25, Z+1	; 0x01
    1330:	01 97       	sbiw	r24, 0x01	; 1
    1332:	f1 f7       	brne	.-4      	; 0x1330 <main+0x5a4>
    1334:	fe 01       	movw	r30, r28
    1336:	e3 56       	subi	r30, 0x63	; 99
    1338:	ff 4f       	sbci	r31, 0xFF	; 255
    133a:	91 83       	std	Z+1, r25	; 0x01
    133c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    133e:	de 01       	movw	r26, r28
    1340:	a1 56       	subi	r26, 0x61	; 97
    1342:	bf 4f       	sbci	r27, 0xFF	; 255
    1344:	fe 01       	movw	r30, r28
    1346:	e1 56       	subi	r30, 0x61	; 97
    1348:	ff 4f       	sbci	r31, 0xFF	; 255
    134a:	80 81       	ld	r24, Z
    134c:	91 81       	ldd	r25, Z+1	; 0x01
    134e:	01 97       	sbiw	r24, 0x01	; 1
    1350:	11 96       	adiw	r26, 0x01	; 1
    1352:	9c 93       	st	X, r25
    1354:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1356:	fe 01       	movw	r30, r28
    1358:	e1 56       	subi	r30, 0x61	; 97
    135a:	ff 4f       	sbci	r31, 0xFF	; 255
    135c:	80 81       	ld	r24, Z
    135e:	91 81       	ldd	r25, Z+1	; 0x01
    1360:	00 97       	sbiw	r24, 0x00	; 0
    1362:	d1 f6       	brne	.-76     	; 0x1318 <main+0x58c>
    1364:	27 c0       	rjmp	.+78     	; 0x13b4 <main+0x628>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1366:	8e 01       	movw	r16, r28
    1368:	01 56       	subi	r16, 0x61	; 97
    136a:	1f 4f       	sbci	r17, 0xFF	; 255
    136c:	fe 01       	movw	r30, r28
    136e:	ef 55       	subi	r30, 0x5F	; 95
    1370:	ff 4f       	sbci	r31, 0xFF	; 255
    1372:	60 81       	ld	r22, Z
    1374:	71 81       	ldd	r23, Z+1	; 0x01
    1376:	82 81       	ldd	r24, Z+2	; 0x02
    1378:	93 81       	ldd	r25, Z+3	; 0x03
    137a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    137e:	dc 01       	movw	r26, r24
    1380:	cb 01       	movw	r24, r22
    1382:	f8 01       	movw	r30, r16
    1384:	91 83       	std	Z+1, r25	; 0x01
    1386:	80 83       	st	Z, r24
    1388:	de 01       	movw	r26, r28
    138a:	a5 56       	subi	r26, 0x65	; 101
    138c:	bf 4f       	sbci	r27, 0xFF	; 255
    138e:	fe 01       	movw	r30, r28
    1390:	e1 56       	subi	r30, 0x61	; 97
    1392:	ff 4f       	sbci	r31, 0xFF	; 255
    1394:	80 81       	ld	r24, Z
    1396:	91 81       	ldd	r25, Z+1	; 0x01
    1398:	8d 93       	st	X+, r24
    139a:	9c 93       	st	X, r25
    139c:	fe 01       	movw	r30, r28
    139e:	e5 56       	subi	r30, 0x65	; 101
    13a0:	ff 4f       	sbci	r31, 0xFF	; 255
    13a2:	80 81       	ld	r24, Z
    13a4:	91 81       	ldd	r25, Z+1	; 0x01
    13a6:	01 97       	sbiw	r24, 0x01	; 1
    13a8:	f1 f7       	brne	.-4      	; 0x13a6 <main+0x61a>
    13aa:	fe 01       	movw	r30, r28
    13ac:	e5 56       	subi	r30, 0x65	; 101
    13ae:	ff 4f       	sbci	r31, 0xFF	; 255
    13b0:	91 83       	std	Z+1, r25	; 0x01
    13b2:	80 83       	st	Z, r24
		_delay_ms(6);

		PORTA = (PORTA & 0xC0) | (common_selector & 0x3F);	// lighting up the 3rd 7-segment
    13b4:	ab e3       	ldi	r26, 0x3B	; 59
    13b6:	b0 e0       	ldi	r27, 0x00	; 0
    13b8:	eb e3       	ldi	r30, 0x3B	; 59
    13ba:	f0 e0       	ldi	r31, 0x00	; 0
    13bc:	80 81       	ld	r24, Z
    13be:	98 2f       	mov	r25, r24
    13c0:	90 7c       	andi	r25, 0xC0	; 192
    13c2:	fe 01       	movw	r30, r28
    13c4:	e1 54       	subi	r30, 0x41	; 65
    13c6:	ff 4f       	sbci	r31, 0xFF	; 255
    13c8:	80 81       	ld	r24, Z
    13ca:	8f 73       	andi	r24, 0x3F	; 63
    13cc:	89 2b       	or	r24, r25
    13ce:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | (minutes%10 & 0x0F);		// showing the one's of minutes
    13d0:	05 e3       	ldi	r16, 0x35	; 53
    13d2:	10 e0       	ldi	r17, 0x00	; 0
    13d4:	e5 e3       	ldi	r30, 0x35	; 53
    13d6:	f0 e0       	ldi	r31, 0x00	; 0
    13d8:	80 81       	ld	r24, Z
    13da:	48 2f       	mov	r20, r24
    13dc:	40 7f       	andi	r20, 0xF0	; 240
    13de:	80 91 6a 00 	lds	r24, 0x006A
    13e2:	90 91 6b 00 	lds	r25, 0x006B
    13e6:	2a e0       	ldi	r18, 0x0A	; 10
    13e8:	30 e0       	ldi	r19, 0x00	; 0
    13ea:	b9 01       	movw	r22, r18
    13ec:	0e 94 8c 14 	call	0x2918	; 0x2918 <__divmodhi4>
    13f0:	8f 70       	andi	r24, 0x0F	; 15
    13f2:	84 2b       	or	r24, r20
    13f4:	f8 01       	movw	r30, r16
    13f6:	80 83       	st	Z, r24
		if(change_alarm_mode)		// if the system in changing time mode
    13f8:	80 91 6e 00 	lds	r24, 0x006E
    13fc:	88 23       	and	r24, r24
    13fe:	b1 f1       	breq	.+108    	; 0x146c <main+0x6e0>
			PORTC = (PORTC | 0x10) & ~((dp_selector==2) << PC4);	// light up the dp
    1400:	25 e3       	ldi	r18, 0x35	; 53
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	ce 52       	subi	r28, 0x2E	; 46
    1406:	df 4f       	sbci	r29, 0xFF	; 255
    1408:	39 83       	std	Y+1, r19	; 0x01
    140a:	28 83       	st	Y, r18
    140c:	c2 5d       	subi	r28, 0xD2	; 210
    140e:	d0 40       	sbci	r29, 0x00	; 0
    1410:	e5 e3       	ldi	r30, 0x35	; 53
    1412:	f0 e0       	ldi	r31, 0x00	; 0
    1414:	80 81       	ld	r24, Z
    1416:	80 61       	ori	r24, 0x10	; 16
    1418:	cf 52       	subi	r28, 0x2F	; 47
    141a:	df 4f       	sbci	r29, 0xFF	; 255
    141c:	88 83       	st	Y, r24
    141e:	c1 5d       	subi	r28, 0xD1	; 209
    1420:	d0 40       	sbci	r29, 0x00	; 0
    1422:	fe 01       	movw	r30, r28
    1424:	e2 54       	subi	r30, 0x42	; 66
    1426:	ff 4f       	sbci	r31, 0xFF	; 255
    1428:	80 81       	ld	r24, Z
    142a:	82 30       	cpi	r24, 0x02	; 2
    142c:	39 f4       	brne	.+14     	; 0x143c <main+0x6b0>
    142e:	3f ee       	ldi	r19, 0xEF	; 239
    1430:	c0 53       	subi	r28, 0x30	; 48
    1432:	df 4f       	sbci	r29, 0xFF	; 255
    1434:	38 83       	st	Y, r19
    1436:	c0 5d       	subi	r28, 0xD0	; 208
    1438:	d0 40       	sbci	r29, 0x00	; 0
    143a:	06 c0       	rjmp	.+12     	; 0x1448 <main+0x6bc>
    143c:	8f ef       	ldi	r24, 0xFF	; 255
    143e:	c0 53       	subi	r28, 0x30	; 48
    1440:	df 4f       	sbci	r29, 0xFF	; 255
    1442:	88 83       	st	Y, r24
    1444:	c0 5d       	subi	r28, 0xD0	; 208
    1446:	d0 40       	sbci	r29, 0x00	; 0
    1448:	cf 52       	subi	r28, 0x2F	; 47
    144a:	df 4f       	sbci	r29, 0xFF	; 255
    144c:	88 81       	ld	r24, Y
    144e:	c1 5d       	subi	r28, 0xD1	; 209
    1450:	d0 40       	sbci	r29, 0x00	; 0
    1452:	c0 53       	subi	r28, 0x30	; 48
    1454:	df 4f       	sbci	r29, 0xFF	; 255
    1456:	98 81       	ld	r25, Y
    1458:	c0 5d       	subi	r28, 0xD0	; 208
    145a:	d0 40       	sbci	r29, 0x00	; 0
    145c:	89 23       	and	r24, r25
    145e:	ce 52       	subi	r28, 0x2E	; 46
    1460:	df 4f       	sbci	r29, 0xFF	; 255
    1462:	e8 81       	ld	r30, Y
    1464:	f9 81       	ldd	r31, Y+1	; 0x01
    1466:	c2 5d       	subi	r28, 0xD2	; 210
    1468:	d0 40       	sbci	r29, 0x00	; 0
    146a:	80 83       	st	Z, r24
		common_selector <<= 1;		// select the next 7-segment
    146c:	de 01       	movw	r26, r28
    146e:	a1 54       	subi	r26, 0x41	; 65
    1470:	bf 4f       	sbci	r27, 0xFF	; 255
    1472:	fe 01       	movw	r30, r28
    1474:	e1 54       	subi	r30, 0x41	; 65
    1476:	ff 4f       	sbci	r31, 0xFF	; 255
    1478:	80 81       	ld	r24, Z
    147a:	88 0f       	add	r24, r24
    147c:	8c 93       	st	X, r24
    147e:	fe 01       	movw	r30, r28
    1480:	e9 56       	subi	r30, 0x69	; 105
    1482:	ff 4f       	sbci	r31, 0xFF	; 255
    1484:	80 e0       	ldi	r24, 0x00	; 0
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	a0 ec       	ldi	r26, 0xC0	; 192
    148a:	b0 e4       	ldi	r27, 0x40	; 64
    148c:	80 83       	st	Z, r24
    148e:	91 83       	std	Z+1, r25	; 0x01
    1490:	a2 83       	std	Z+2, r26	; 0x02
    1492:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1494:	8e 01       	movw	r16, r28
    1496:	0d 56       	subi	r16, 0x6D	; 109
    1498:	1f 4f       	sbci	r17, 0xFF	; 255
    149a:	fe 01       	movw	r30, r28
    149c:	e9 56       	subi	r30, 0x69	; 105
    149e:	ff 4f       	sbci	r31, 0xFF	; 255
    14a0:	60 81       	ld	r22, Z
    14a2:	71 81       	ldd	r23, Z+1	; 0x01
    14a4:	82 81       	ldd	r24, Z+2	; 0x02
    14a6:	93 81       	ldd	r25, Z+3	; 0x03
    14a8:	20 e0       	ldi	r18, 0x00	; 0
    14aa:	30 e0       	ldi	r19, 0x00	; 0
    14ac:	4a e7       	ldi	r20, 0x7A	; 122
    14ae:	53 e4       	ldi	r21, 0x43	; 67
    14b0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14b4:	dc 01       	movw	r26, r24
    14b6:	cb 01       	movw	r24, r22
    14b8:	f8 01       	movw	r30, r16
    14ba:	80 83       	st	Z, r24
    14bc:	91 83       	std	Z+1, r25	; 0x01
    14be:	a2 83       	std	Z+2, r26	; 0x02
    14c0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14c2:	fe 01       	movw	r30, r28
    14c4:	ed 56       	subi	r30, 0x6D	; 109
    14c6:	ff 4f       	sbci	r31, 0xFF	; 255
    14c8:	60 81       	ld	r22, Z
    14ca:	71 81       	ldd	r23, Z+1	; 0x01
    14cc:	82 81       	ldd	r24, Z+2	; 0x02
    14ce:	93 81       	ldd	r25, Z+3	; 0x03
    14d0:	20 e0       	ldi	r18, 0x00	; 0
    14d2:	30 e0       	ldi	r19, 0x00	; 0
    14d4:	40 e8       	ldi	r20, 0x80	; 128
    14d6:	5f e3       	ldi	r21, 0x3F	; 63
    14d8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    14dc:	88 23       	and	r24, r24
    14de:	44 f4       	brge	.+16     	; 0x14f0 <main+0x764>
		__ticks = 1;
    14e0:	fe 01       	movw	r30, r28
    14e2:	ef 56       	subi	r30, 0x6F	; 111
    14e4:	ff 4f       	sbci	r31, 0xFF	; 255
    14e6:	81 e0       	ldi	r24, 0x01	; 1
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	91 83       	std	Z+1, r25	; 0x01
    14ec:	80 83       	st	Z, r24
    14ee:	64 c0       	rjmp	.+200    	; 0x15b8 <main+0x82c>
	else if (__tmp > 65535)
    14f0:	fe 01       	movw	r30, r28
    14f2:	ed 56       	subi	r30, 0x6D	; 109
    14f4:	ff 4f       	sbci	r31, 0xFF	; 255
    14f6:	60 81       	ld	r22, Z
    14f8:	71 81       	ldd	r23, Z+1	; 0x01
    14fa:	82 81       	ldd	r24, Z+2	; 0x02
    14fc:	93 81       	ldd	r25, Z+3	; 0x03
    14fe:	20 e0       	ldi	r18, 0x00	; 0
    1500:	3f ef       	ldi	r19, 0xFF	; 255
    1502:	4f e7       	ldi	r20, 0x7F	; 127
    1504:	57 e4       	ldi	r21, 0x47	; 71
    1506:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    150a:	18 16       	cp	r1, r24
    150c:	0c f0       	brlt	.+2      	; 0x1510 <main+0x784>
    150e:	43 c0       	rjmp	.+134    	; 0x1596 <main+0x80a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1510:	fe 01       	movw	r30, r28
    1512:	e9 56       	subi	r30, 0x69	; 105
    1514:	ff 4f       	sbci	r31, 0xFF	; 255
    1516:	60 81       	ld	r22, Z
    1518:	71 81       	ldd	r23, Z+1	; 0x01
    151a:	82 81       	ldd	r24, Z+2	; 0x02
    151c:	93 81       	ldd	r25, Z+3	; 0x03
    151e:	20 e0       	ldi	r18, 0x00	; 0
    1520:	30 e0       	ldi	r19, 0x00	; 0
    1522:	40 e2       	ldi	r20, 0x20	; 32
    1524:	51 e4       	ldi	r21, 0x41	; 65
    1526:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    152a:	dc 01       	movw	r26, r24
    152c:	cb 01       	movw	r24, r22
    152e:	8e 01       	movw	r16, r28
    1530:	0f 56       	subi	r16, 0x6F	; 111
    1532:	1f 4f       	sbci	r17, 0xFF	; 255
    1534:	bc 01       	movw	r22, r24
    1536:	cd 01       	movw	r24, r26
    1538:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    153c:	dc 01       	movw	r26, r24
    153e:	cb 01       	movw	r24, r22
    1540:	f8 01       	movw	r30, r16
    1542:	91 83       	std	Z+1, r25	; 0x01
    1544:	80 83       	st	Z, r24
    1546:	1f c0       	rjmp	.+62     	; 0x1586 <main+0x7fa>
    1548:	fe 01       	movw	r30, r28
    154a:	e1 57       	subi	r30, 0x71	; 113
    154c:	ff 4f       	sbci	r31, 0xFF	; 255
    154e:	89 e1       	ldi	r24, 0x19	; 25
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	91 83       	std	Z+1, r25	; 0x01
    1554:	80 83       	st	Z, r24
    1556:	fe 01       	movw	r30, r28
    1558:	e1 57       	subi	r30, 0x71	; 113
    155a:	ff 4f       	sbci	r31, 0xFF	; 255
    155c:	80 81       	ld	r24, Z
    155e:	91 81       	ldd	r25, Z+1	; 0x01
    1560:	01 97       	sbiw	r24, 0x01	; 1
    1562:	f1 f7       	brne	.-4      	; 0x1560 <main+0x7d4>
    1564:	fe 01       	movw	r30, r28
    1566:	e1 57       	subi	r30, 0x71	; 113
    1568:	ff 4f       	sbci	r31, 0xFF	; 255
    156a:	91 83       	std	Z+1, r25	; 0x01
    156c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    156e:	de 01       	movw	r26, r28
    1570:	af 56       	subi	r26, 0x6F	; 111
    1572:	bf 4f       	sbci	r27, 0xFF	; 255
    1574:	fe 01       	movw	r30, r28
    1576:	ef 56       	subi	r30, 0x6F	; 111
    1578:	ff 4f       	sbci	r31, 0xFF	; 255
    157a:	80 81       	ld	r24, Z
    157c:	91 81       	ldd	r25, Z+1	; 0x01
    157e:	01 97       	sbiw	r24, 0x01	; 1
    1580:	11 96       	adiw	r26, 0x01	; 1
    1582:	9c 93       	st	X, r25
    1584:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1586:	fe 01       	movw	r30, r28
    1588:	ef 56       	subi	r30, 0x6F	; 111
    158a:	ff 4f       	sbci	r31, 0xFF	; 255
    158c:	80 81       	ld	r24, Z
    158e:	91 81       	ldd	r25, Z+1	; 0x01
    1590:	00 97       	sbiw	r24, 0x00	; 0
    1592:	d1 f6       	brne	.-76     	; 0x1548 <main+0x7bc>
    1594:	27 c0       	rjmp	.+78     	; 0x15e4 <main+0x858>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1596:	8e 01       	movw	r16, r28
    1598:	0f 56       	subi	r16, 0x6F	; 111
    159a:	1f 4f       	sbci	r17, 0xFF	; 255
    159c:	fe 01       	movw	r30, r28
    159e:	ed 56       	subi	r30, 0x6D	; 109
    15a0:	ff 4f       	sbci	r31, 0xFF	; 255
    15a2:	60 81       	ld	r22, Z
    15a4:	71 81       	ldd	r23, Z+1	; 0x01
    15a6:	82 81       	ldd	r24, Z+2	; 0x02
    15a8:	93 81       	ldd	r25, Z+3	; 0x03
    15aa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15ae:	dc 01       	movw	r26, r24
    15b0:	cb 01       	movw	r24, r22
    15b2:	f8 01       	movw	r30, r16
    15b4:	91 83       	std	Z+1, r25	; 0x01
    15b6:	80 83       	st	Z, r24
    15b8:	de 01       	movw	r26, r28
    15ba:	a3 57       	subi	r26, 0x73	; 115
    15bc:	bf 4f       	sbci	r27, 0xFF	; 255
    15be:	fe 01       	movw	r30, r28
    15c0:	ef 56       	subi	r30, 0x6F	; 111
    15c2:	ff 4f       	sbci	r31, 0xFF	; 255
    15c4:	80 81       	ld	r24, Z
    15c6:	91 81       	ldd	r25, Z+1	; 0x01
    15c8:	8d 93       	st	X+, r24
    15ca:	9c 93       	st	X, r25
    15cc:	fe 01       	movw	r30, r28
    15ce:	e3 57       	subi	r30, 0x73	; 115
    15d0:	ff 4f       	sbci	r31, 0xFF	; 255
    15d2:	80 81       	ld	r24, Z
    15d4:	91 81       	ldd	r25, Z+1	; 0x01
    15d6:	01 97       	sbiw	r24, 0x01	; 1
    15d8:	f1 f7       	brne	.-4      	; 0x15d6 <main+0x84a>
    15da:	fe 01       	movw	r30, r28
    15dc:	e3 57       	subi	r30, 0x73	; 115
    15de:	ff 4f       	sbci	r31, 0xFF	; 255
    15e0:	91 83       	std	Z+1, r25	; 0x01
    15e2:	80 83       	st	Z, r24
		_delay_ms(6);

		PORTA = (PORTA & 0xC0) | (common_selector & 0x3F);	// lighting up the 4th 7-segment
    15e4:	ab e3       	ldi	r26, 0x3B	; 59
    15e6:	b0 e0       	ldi	r27, 0x00	; 0
    15e8:	eb e3       	ldi	r30, 0x3B	; 59
    15ea:	f0 e0       	ldi	r31, 0x00	; 0
    15ec:	80 81       	ld	r24, Z
    15ee:	98 2f       	mov	r25, r24
    15f0:	90 7c       	andi	r25, 0xC0	; 192
    15f2:	fe 01       	movw	r30, r28
    15f4:	e1 54       	subi	r30, 0x41	; 65
    15f6:	ff 4f       	sbci	r31, 0xFF	; 255
    15f8:	80 81       	ld	r24, Z
    15fa:	8f 73       	andi	r24, 0x3F	; 63
    15fc:	89 2b       	or	r24, r25
    15fe:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | (minutes/10 & 0x0F);		// showing the ten's of minutes
    1600:	05 e3       	ldi	r16, 0x35	; 53
    1602:	10 e0       	ldi	r17, 0x00	; 0
    1604:	e5 e3       	ldi	r30, 0x35	; 53
    1606:	f0 e0       	ldi	r31, 0x00	; 0
    1608:	80 81       	ld	r24, Z
    160a:	48 2f       	mov	r20, r24
    160c:	40 7f       	andi	r20, 0xF0	; 240
    160e:	80 91 6a 00 	lds	r24, 0x006A
    1612:	90 91 6b 00 	lds	r25, 0x006B
    1616:	2a e0       	ldi	r18, 0x0A	; 10
    1618:	30 e0       	ldi	r19, 0x00	; 0
    161a:	b9 01       	movw	r22, r18
    161c:	0e 94 8c 14 	call	0x2918	; 0x2918 <__divmodhi4>
    1620:	cb 01       	movw	r24, r22
    1622:	8f 70       	andi	r24, 0x0F	; 15
    1624:	84 2b       	or	r24, r20
    1626:	f8 01       	movw	r30, r16
    1628:	80 83       	st	Z, r24
		if(change_alarm_mode)		// if the system in changing time mode
    162a:	80 91 6e 00 	lds	r24, 0x006E
    162e:	88 23       	and	r24, r24
    1630:	b1 f1       	breq	.+108    	; 0x169e <main+0x912>
			PORTC = (PORTC | 0x10) & ~((dp_selector==3) << PC4);	// light up the dp
    1632:	25 e3       	ldi	r18, 0x35	; 53
    1634:	30 e0       	ldi	r19, 0x00	; 0
    1636:	c2 53       	subi	r28, 0x32	; 50
    1638:	df 4f       	sbci	r29, 0xFF	; 255
    163a:	39 83       	std	Y+1, r19	; 0x01
    163c:	28 83       	st	Y, r18
    163e:	ce 5c       	subi	r28, 0xCE	; 206
    1640:	d0 40       	sbci	r29, 0x00	; 0
    1642:	e5 e3       	ldi	r30, 0x35	; 53
    1644:	f0 e0       	ldi	r31, 0x00	; 0
    1646:	80 81       	ld	r24, Z
    1648:	80 61       	ori	r24, 0x10	; 16
    164a:	c3 53       	subi	r28, 0x33	; 51
    164c:	df 4f       	sbci	r29, 0xFF	; 255
    164e:	88 83       	st	Y, r24
    1650:	cd 5c       	subi	r28, 0xCD	; 205
    1652:	d0 40       	sbci	r29, 0x00	; 0
    1654:	fe 01       	movw	r30, r28
    1656:	e2 54       	subi	r30, 0x42	; 66
    1658:	ff 4f       	sbci	r31, 0xFF	; 255
    165a:	80 81       	ld	r24, Z
    165c:	83 30       	cpi	r24, 0x03	; 3
    165e:	39 f4       	brne	.+14     	; 0x166e <main+0x8e2>
    1660:	3f ee       	ldi	r19, 0xEF	; 239
    1662:	c4 53       	subi	r28, 0x34	; 52
    1664:	df 4f       	sbci	r29, 0xFF	; 255
    1666:	38 83       	st	Y, r19
    1668:	cc 5c       	subi	r28, 0xCC	; 204
    166a:	d0 40       	sbci	r29, 0x00	; 0
    166c:	06 c0       	rjmp	.+12     	; 0x167a <main+0x8ee>
    166e:	8f ef       	ldi	r24, 0xFF	; 255
    1670:	c4 53       	subi	r28, 0x34	; 52
    1672:	df 4f       	sbci	r29, 0xFF	; 255
    1674:	88 83       	st	Y, r24
    1676:	cc 5c       	subi	r28, 0xCC	; 204
    1678:	d0 40       	sbci	r29, 0x00	; 0
    167a:	c3 53       	subi	r28, 0x33	; 51
    167c:	df 4f       	sbci	r29, 0xFF	; 255
    167e:	88 81       	ld	r24, Y
    1680:	cd 5c       	subi	r28, 0xCD	; 205
    1682:	d0 40       	sbci	r29, 0x00	; 0
    1684:	c4 53       	subi	r28, 0x34	; 52
    1686:	df 4f       	sbci	r29, 0xFF	; 255
    1688:	98 81       	ld	r25, Y
    168a:	cc 5c       	subi	r28, 0xCC	; 204
    168c:	d0 40       	sbci	r29, 0x00	; 0
    168e:	89 23       	and	r24, r25
    1690:	c2 53       	subi	r28, 0x32	; 50
    1692:	df 4f       	sbci	r29, 0xFF	; 255
    1694:	e8 81       	ld	r30, Y
    1696:	f9 81       	ldd	r31, Y+1	; 0x01
    1698:	ce 5c       	subi	r28, 0xCE	; 206
    169a:	d0 40       	sbci	r29, 0x00	; 0
    169c:	80 83       	st	Z, r24
		common_selector <<= 1;		// select the next 7-segment
    169e:	de 01       	movw	r26, r28
    16a0:	a1 54       	subi	r26, 0x41	; 65
    16a2:	bf 4f       	sbci	r27, 0xFF	; 255
    16a4:	fe 01       	movw	r30, r28
    16a6:	e1 54       	subi	r30, 0x41	; 65
    16a8:	ff 4f       	sbci	r31, 0xFF	; 255
    16aa:	80 81       	ld	r24, Z
    16ac:	88 0f       	add	r24, r24
    16ae:	8c 93       	st	X, r24
    16b0:	fe 01       	movw	r30, r28
    16b2:	e7 57       	subi	r30, 0x77	; 119
    16b4:	ff 4f       	sbci	r31, 0xFF	; 255
    16b6:	80 e0       	ldi	r24, 0x00	; 0
    16b8:	90 e0       	ldi	r25, 0x00	; 0
    16ba:	a0 ec       	ldi	r26, 0xC0	; 192
    16bc:	b0 e4       	ldi	r27, 0x40	; 64
    16be:	80 83       	st	Z, r24
    16c0:	91 83       	std	Z+1, r25	; 0x01
    16c2:	a2 83       	std	Z+2, r26	; 0x02
    16c4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16c6:	8e 01       	movw	r16, r28
    16c8:	0b 57       	subi	r16, 0x7B	; 123
    16ca:	1f 4f       	sbci	r17, 0xFF	; 255
    16cc:	fe 01       	movw	r30, r28
    16ce:	e7 57       	subi	r30, 0x77	; 119
    16d0:	ff 4f       	sbci	r31, 0xFF	; 255
    16d2:	60 81       	ld	r22, Z
    16d4:	71 81       	ldd	r23, Z+1	; 0x01
    16d6:	82 81       	ldd	r24, Z+2	; 0x02
    16d8:	93 81       	ldd	r25, Z+3	; 0x03
    16da:	20 e0       	ldi	r18, 0x00	; 0
    16dc:	30 e0       	ldi	r19, 0x00	; 0
    16de:	4a e7       	ldi	r20, 0x7A	; 122
    16e0:	53 e4       	ldi	r21, 0x43	; 67
    16e2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16e6:	dc 01       	movw	r26, r24
    16e8:	cb 01       	movw	r24, r22
    16ea:	f8 01       	movw	r30, r16
    16ec:	80 83       	st	Z, r24
    16ee:	91 83       	std	Z+1, r25	; 0x01
    16f0:	a2 83       	std	Z+2, r26	; 0x02
    16f2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    16f4:	fe 01       	movw	r30, r28
    16f6:	eb 57       	subi	r30, 0x7B	; 123
    16f8:	ff 4f       	sbci	r31, 0xFF	; 255
    16fa:	60 81       	ld	r22, Z
    16fc:	71 81       	ldd	r23, Z+1	; 0x01
    16fe:	82 81       	ldd	r24, Z+2	; 0x02
    1700:	93 81       	ldd	r25, Z+3	; 0x03
    1702:	20 e0       	ldi	r18, 0x00	; 0
    1704:	30 e0       	ldi	r19, 0x00	; 0
    1706:	40 e8       	ldi	r20, 0x80	; 128
    1708:	5f e3       	ldi	r21, 0x3F	; 63
    170a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    170e:	88 23       	and	r24, r24
    1710:	44 f4       	brge	.+16     	; 0x1722 <main+0x996>
		__ticks = 1;
    1712:	fe 01       	movw	r30, r28
    1714:	ed 57       	subi	r30, 0x7D	; 125
    1716:	ff 4f       	sbci	r31, 0xFF	; 255
    1718:	81 e0       	ldi	r24, 0x01	; 1
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	91 83       	std	Z+1, r25	; 0x01
    171e:	80 83       	st	Z, r24
    1720:	64 c0       	rjmp	.+200    	; 0x17ea <main+0xa5e>
	else if (__tmp > 65535)
    1722:	fe 01       	movw	r30, r28
    1724:	eb 57       	subi	r30, 0x7B	; 123
    1726:	ff 4f       	sbci	r31, 0xFF	; 255
    1728:	60 81       	ld	r22, Z
    172a:	71 81       	ldd	r23, Z+1	; 0x01
    172c:	82 81       	ldd	r24, Z+2	; 0x02
    172e:	93 81       	ldd	r25, Z+3	; 0x03
    1730:	20 e0       	ldi	r18, 0x00	; 0
    1732:	3f ef       	ldi	r19, 0xFF	; 255
    1734:	4f e7       	ldi	r20, 0x7F	; 127
    1736:	57 e4       	ldi	r21, 0x47	; 71
    1738:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    173c:	18 16       	cp	r1, r24
    173e:	0c f0       	brlt	.+2      	; 0x1742 <main+0x9b6>
    1740:	43 c0       	rjmp	.+134    	; 0x17c8 <main+0xa3c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1742:	fe 01       	movw	r30, r28
    1744:	e7 57       	subi	r30, 0x77	; 119
    1746:	ff 4f       	sbci	r31, 0xFF	; 255
    1748:	60 81       	ld	r22, Z
    174a:	71 81       	ldd	r23, Z+1	; 0x01
    174c:	82 81       	ldd	r24, Z+2	; 0x02
    174e:	93 81       	ldd	r25, Z+3	; 0x03
    1750:	20 e0       	ldi	r18, 0x00	; 0
    1752:	30 e0       	ldi	r19, 0x00	; 0
    1754:	40 e2       	ldi	r20, 0x20	; 32
    1756:	51 e4       	ldi	r21, 0x41	; 65
    1758:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    175c:	dc 01       	movw	r26, r24
    175e:	cb 01       	movw	r24, r22
    1760:	8e 01       	movw	r16, r28
    1762:	0d 57       	subi	r16, 0x7D	; 125
    1764:	1f 4f       	sbci	r17, 0xFF	; 255
    1766:	bc 01       	movw	r22, r24
    1768:	cd 01       	movw	r24, r26
    176a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    176e:	dc 01       	movw	r26, r24
    1770:	cb 01       	movw	r24, r22
    1772:	f8 01       	movw	r30, r16
    1774:	91 83       	std	Z+1, r25	; 0x01
    1776:	80 83       	st	Z, r24
    1778:	1f c0       	rjmp	.+62     	; 0x17b8 <main+0xa2c>
    177a:	fe 01       	movw	r30, r28
    177c:	ef 57       	subi	r30, 0x7F	; 127
    177e:	ff 4f       	sbci	r31, 0xFF	; 255
    1780:	89 e1       	ldi	r24, 0x19	; 25
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	91 83       	std	Z+1, r25	; 0x01
    1786:	80 83       	st	Z, r24
    1788:	fe 01       	movw	r30, r28
    178a:	ef 57       	subi	r30, 0x7F	; 127
    178c:	ff 4f       	sbci	r31, 0xFF	; 255
    178e:	80 81       	ld	r24, Z
    1790:	91 81       	ldd	r25, Z+1	; 0x01
    1792:	01 97       	sbiw	r24, 0x01	; 1
    1794:	f1 f7       	brne	.-4      	; 0x1792 <main+0xa06>
    1796:	fe 01       	movw	r30, r28
    1798:	ef 57       	subi	r30, 0x7F	; 127
    179a:	ff 4f       	sbci	r31, 0xFF	; 255
    179c:	91 83       	std	Z+1, r25	; 0x01
    179e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17a0:	de 01       	movw	r26, r28
    17a2:	ad 57       	subi	r26, 0x7D	; 125
    17a4:	bf 4f       	sbci	r27, 0xFF	; 255
    17a6:	fe 01       	movw	r30, r28
    17a8:	ed 57       	subi	r30, 0x7D	; 125
    17aa:	ff 4f       	sbci	r31, 0xFF	; 255
    17ac:	80 81       	ld	r24, Z
    17ae:	91 81       	ldd	r25, Z+1	; 0x01
    17b0:	01 97       	sbiw	r24, 0x01	; 1
    17b2:	11 96       	adiw	r26, 0x01	; 1
    17b4:	9c 93       	st	X, r25
    17b6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17b8:	fe 01       	movw	r30, r28
    17ba:	ed 57       	subi	r30, 0x7D	; 125
    17bc:	ff 4f       	sbci	r31, 0xFF	; 255
    17be:	80 81       	ld	r24, Z
    17c0:	91 81       	ldd	r25, Z+1	; 0x01
    17c2:	00 97       	sbiw	r24, 0x00	; 0
    17c4:	d1 f6       	brne	.-76     	; 0x177a <main+0x9ee>
    17c6:	27 c0       	rjmp	.+78     	; 0x1816 <main+0xa8a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17c8:	8e 01       	movw	r16, r28
    17ca:	0d 57       	subi	r16, 0x7D	; 125
    17cc:	1f 4f       	sbci	r17, 0xFF	; 255
    17ce:	fe 01       	movw	r30, r28
    17d0:	eb 57       	subi	r30, 0x7B	; 123
    17d2:	ff 4f       	sbci	r31, 0xFF	; 255
    17d4:	60 81       	ld	r22, Z
    17d6:	71 81       	ldd	r23, Z+1	; 0x01
    17d8:	82 81       	ldd	r24, Z+2	; 0x02
    17da:	93 81       	ldd	r25, Z+3	; 0x03
    17dc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17e0:	dc 01       	movw	r26, r24
    17e2:	cb 01       	movw	r24, r22
    17e4:	f8 01       	movw	r30, r16
    17e6:	91 83       	std	Z+1, r25	; 0x01
    17e8:	80 83       	st	Z, r24
    17ea:	de 01       	movw	r26, r28
    17ec:	a1 58       	subi	r26, 0x81	; 129
    17ee:	bf 4f       	sbci	r27, 0xFF	; 255
    17f0:	fe 01       	movw	r30, r28
    17f2:	ed 57       	subi	r30, 0x7D	; 125
    17f4:	ff 4f       	sbci	r31, 0xFF	; 255
    17f6:	80 81       	ld	r24, Z
    17f8:	91 81       	ldd	r25, Z+1	; 0x01
    17fa:	8d 93       	st	X+, r24
    17fc:	9c 93       	st	X, r25
    17fe:	fe 01       	movw	r30, r28
    1800:	e1 58       	subi	r30, 0x81	; 129
    1802:	ff 4f       	sbci	r31, 0xFF	; 255
    1804:	80 81       	ld	r24, Z
    1806:	91 81       	ldd	r25, Z+1	; 0x01
    1808:	01 97       	sbiw	r24, 0x01	; 1
    180a:	f1 f7       	brne	.-4      	; 0x1808 <main+0xa7c>
    180c:	fe 01       	movw	r30, r28
    180e:	e1 58       	subi	r30, 0x81	; 129
    1810:	ff 4f       	sbci	r31, 0xFF	; 255
    1812:	91 83       	std	Z+1, r25	; 0x01
    1814:	80 83       	st	Z, r24
		_delay_ms(6);

		PORTA = (PORTA & 0xC0) | (common_selector & 0x3F);	// lighting up the 5th 7-segment
    1816:	ab e3       	ldi	r26, 0x3B	; 59
    1818:	b0 e0       	ldi	r27, 0x00	; 0
    181a:	eb e3       	ldi	r30, 0x3B	; 59
    181c:	f0 e0       	ldi	r31, 0x00	; 0
    181e:	80 81       	ld	r24, Z
    1820:	98 2f       	mov	r25, r24
    1822:	90 7c       	andi	r25, 0xC0	; 192
    1824:	fe 01       	movw	r30, r28
    1826:	e1 54       	subi	r30, 0x41	; 65
    1828:	ff 4f       	sbci	r31, 0xFF	; 255
    182a:	80 81       	ld	r24, Z
    182c:	8f 73       	andi	r24, 0x3F	; 63
    182e:	89 2b       	or	r24, r25
    1830:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | (hours%10 & 0x0F);			// showing the one's of hours
    1832:	05 e3       	ldi	r16, 0x35	; 53
    1834:	10 e0       	ldi	r17, 0x00	; 0
    1836:	e5 e3       	ldi	r30, 0x35	; 53
    1838:	f0 e0       	ldi	r31, 0x00	; 0
    183a:	80 81       	ld	r24, Z
    183c:	48 2f       	mov	r20, r24
    183e:	40 7f       	andi	r20, 0xF0	; 240
    1840:	80 91 6c 00 	lds	r24, 0x006C
    1844:	90 91 6d 00 	lds	r25, 0x006D
    1848:	2a e0       	ldi	r18, 0x0A	; 10
    184a:	30 e0       	ldi	r19, 0x00	; 0
    184c:	b9 01       	movw	r22, r18
    184e:	0e 94 8c 14 	call	0x2918	; 0x2918 <__divmodhi4>
    1852:	8f 70       	andi	r24, 0x0F	; 15
    1854:	84 2b       	or	r24, r20
    1856:	f8 01       	movw	r30, r16
    1858:	80 83       	st	Z, r24
		if(change_alarm_mode)		// if the system in changing time mode
    185a:	80 91 6e 00 	lds	r24, 0x006E
    185e:	88 23       	and	r24, r24
    1860:	b1 f1       	breq	.+108    	; 0x18ce <main+0xb42>
			PORTC = (PORTC | 0x10) & ~((dp_selector==4) << PC4);	// light up the dp
    1862:	25 e3       	ldi	r18, 0x35	; 53
    1864:	30 e0       	ldi	r19, 0x00	; 0
    1866:	c6 53       	subi	r28, 0x36	; 54
    1868:	df 4f       	sbci	r29, 0xFF	; 255
    186a:	39 83       	std	Y+1, r19	; 0x01
    186c:	28 83       	st	Y, r18
    186e:	ca 5c       	subi	r28, 0xCA	; 202
    1870:	d0 40       	sbci	r29, 0x00	; 0
    1872:	e5 e3       	ldi	r30, 0x35	; 53
    1874:	f0 e0       	ldi	r31, 0x00	; 0
    1876:	80 81       	ld	r24, Z
    1878:	80 61       	ori	r24, 0x10	; 16
    187a:	c7 53       	subi	r28, 0x37	; 55
    187c:	df 4f       	sbci	r29, 0xFF	; 255
    187e:	88 83       	st	Y, r24
    1880:	c9 5c       	subi	r28, 0xC9	; 201
    1882:	d0 40       	sbci	r29, 0x00	; 0
    1884:	fe 01       	movw	r30, r28
    1886:	e2 54       	subi	r30, 0x42	; 66
    1888:	ff 4f       	sbci	r31, 0xFF	; 255
    188a:	80 81       	ld	r24, Z
    188c:	84 30       	cpi	r24, 0x04	; 4
    188e:	39 f4       	brne	.+14     	; 0x189e <main+0xb12>
    1890:	3f ee       	ldi	r19, 0xEF	; 239
    1892:	c8 53       	subi	r28, 0x38	; 56
    1894:	df 4f       	sbci	r29, 0xFF	; 255
    1896:	38 83       	st	Y, r19
    1898:	c8 5c       	subi	r28, 0xC8	; 200
    189a:	d0 40       	sbci	r29, 0x00	; 0
    189c:	06 c0       	rjmp	.+12     	; 0x18aa <main+0xb1e>
    189e:	8f ef       	ldi	r24, 0xFF	; 255
    18a0:	c8 53       	subi	r28, 0x38	; 56
    18a2:	df 4f       	sbci	r29, 0xFF	; 255
    18a4:	88 83       	st	Y, r24
    18a6:	c8 5c       	subi	r28, 0xC8	; 200
    18a8:	d0 40       	sbci	r29, 0x00	; 0
    18aa:	c7 53       	subi	r28, 0x37	; 55
    18ac:	df 4f       	sbci	r29, 0xFF	; 255
    18ae:	88 81       	ld	r24, Y
    18b0:	c9 5c       	subi	r28, 0xC9	; 201
    18b2:	d0 40       	sbci	r29, 0x00	; 0
    18b4:	c8 53       	subi	r28, 0x38	; 56
    18b6:	df 4f       	sbci	r29, 0xFF	; 255
    18b8:	98 81       	ld	r25, Y
    18ba:	c8 5c       	subi	r28, 0xC8	; 200
    18bc:	d0 40       	sbci	r29, 0x00	; 0
    18be:	89 23       	and	r24, r25
    18c0:	c6 53       	subi	r28, 0x36	; 54
    18c2:	df 4f       	sbci	r29, 0xFF	; 255
    18c4:	e8 81       	ld	r30, Y
    18c6:	f9 81       	ldd	r31, Y+1	; 0x01
    18c8:	ca 5c       	subi	r28, 0xCA	; 202
    18ca:	d0 40       	sbci	r29, 0x00	; 0
    18cc:	80 83       	st	Z, r24
		common_selector <<= 1;		// select the next 7-segment
    18ce:	de 01       	movw	r26, r28
    18d0:	a1 54       	subi	r26, 0x41	; 65
    18d2:	bf 4f       	sbci	r27, 0xFF	; 255
    18d4:	fe 01       	movw	r30, r28
    18d6:	e1 54       	subi	r30, 0x41	; 65
    18d8:	ff 4f       	sbci	r31, 0xFF	; 255
    18da:	80 81       	ld	r24, Z
    18dc:	88 0f       	add	r24, r24
    18de:	8c 93       	st	X, r24
    18e0:	fe 01       	movw	r30, r28
    18e2:	e5 58       	subi	r30, 0x85	; 133
    18e4:	ff 4f       	sbci	r31, 0xFF	; 255
    18e6:	80 e0       	ldi	r24, 0x00	; 0
    18e8:	90 e0       	ldi	r25, 0x00	; 0
    18ea:	a0 ec       	ldi	r26, 0xC0	; 192
    18ec:	b0 e4       	ldi	r27, 0x40	; 64
    18ee:	80 83       	st	Z, r24
    18f0:	91 83       	std	Z+1, r25	; 0x01
    18f2:	a2 83       	std	Z+2, r26	; 0x02
    18f4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18f6:	8e 01       	movw	r16, r28
    18f8:	09 58       	subi	r16, 0x89	; 137
    18fa:	1f 4f       	sbci	r17, 0xFF	; 255
    18fc:	fe 01       	movw	r30, r28
    18fe:	e5 58       	subi	r30, 0x85	; 133
    1900:	ff 4f       	sbci	r31, 0xFF	; 255
    1902:	60 81       	ld	r22, Z
    1904:	71 81       	ldd	r23, Z+1	; 0x01
    1906:	82 81       	ldd	r24, Z+2	; 0x02
    1908:	93 81       	ldd	r25, Z+3	; 0x03
    190a:	20 e0       	ldi	r18, 0x00	; 0
    190c:	30 e0       	ldi	r19, 0x00	; 0
    190e:	4a e7       	ldi	r20, 0x7A	; 122
    1910:	53 e4       	ldi	r21, 0x43	; 67
    1912:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1916:	dc 01       	movw	r26, r24
    1918:	cb 01       	movw	r24, r22
    191a:	f8 01       	movw	r30, r16
    191c:	80 83       	st	Z, r24
    191e:	91 83       	std	Z+1, r25	; 0x01
    1920:	a2 83       	std	Z+2, r26	; 0x02
    1922:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1924:	fe 01       	movw	r30, r28
    1926:	e9 58       	subi	r30, 0x89	; 137
    1928:	ff 4f       	sbci	r31, 0xFF	; 255
    192a:	60 81       	ld	r22, Z
    192c:	71 81       	ldd	r23, Z+1	; 0x01
    192e:	82 81       	ldd	r24, Z+2	; 0x02
    1930:	93 81       	ldd	r25, Z+3	; 0x03
    1932:	20 e0       	ldi	r18, 0x00	; 0
    1934:	30 e0       	ldi	r19, 0x00	; 0
    1936:	40 e8       	ldi	r20, 0x80	; 128
    1938:	5f e3       	ldi	r21, 0x3F	; 63
    193a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    193e:	88 23       	and	r24, r24
    1940:	44 f4       	brge	.+16     	; 0x1952 <main+0xbc6>
		__ticks = 1;
    1942:	fe 01       	movw	r30, r28
    1944:	eb 58       	subi	r30, 0x8B	; 139
    1946:	ff 4f       	sbci	r31, 0xFF	; 255
    1948:	81 e0       	ldi	r24, 0x01	; 1
    194a:	90 e0       	ldi	r25, 0x00	; 0
    194c:	91 83       	std	Z+1, r25	; 0x01
    194e:	80 83       	st	Z, r24
    1950:	64 c0       	rjmp	.+200    	; 0x1a1a <main+0xc8e>
	else if (__tmp > 65535)
    1952:	fe 01       	movw	r30, r28
    1954:	e9 58       	subi	r30, 0x89	; 137
    1956:	ff 4f       	sbci	r31, 0xFF	; 255
    1958:	60 81       	ld	r22, Z
    195a:	71 81       	ldd	r23, Z+1	; 0x01
    195c:	82 81       	ldd	r24, Z+2	; 0x02
    195e:	93 81       	ldd	r25, Z+3	; 0x03
    1960:	20 e0       	ldi	r18, 0x00	; 0
    1962:	3f ef       	ldi	r19, 0xFF	; 255
    1964:	4f e7       	ldi	r20, 0x7F	; 127
    1966:	57 e4       	ldi	r21, 0x47	; 71
    1968:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    196c:	18 16       	cp	r1, r24
    196e:	0c f0       	brlt	.+2      	; 0x1972 <main+0xbe6>
    1970:	43 c0       	rjmp	.+134    	; 0x19f8 <main+0xc6c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1972:	fe 01       	movw	r30, r28
    1974:	e5 58       	subi	r30, 0x85	; 133
    1976:	ff 4f       	sbci	r31, 0xFF	; 255
    1978:	60 81       	ld	r22, Z
    197a:	71 81       	ldd	r23, Z+1	; 0x01
    197c:	82 81       	ldd	r24, Z+2	; 0x02
    197e:	93 81       	ldd	r25, Z+3	; 0x03
    1980:	20 e0       	ldi	r18, 0x00	; 0
    1982:	30 e0       	ldi	r19, 0x00	; 0
    1984:	40 e2       	ldi	r20, 0x20	; 32
    1986:	51 e4       	ldi	r21, 0x41	; 65
    1988:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    198c:	dc 01       	movw	r26, r24
    198e:	cb 01       	movw	r24, r22
    1990:	8e 01       	movw	r16, r28
    1992:	0b 58       	subi	r16, 0x8B	; 139
    1994:	1f 4f       	sbci	r17, 0xFF	; 255
    1996:	bc 01       	movw	r22, r24
    1998:	cd 01       	movw	r24, r26
    199a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    199e:	dc 01       	movw	r26, r24
    19a0:	cb 01       	movw	r24, r22
    19a2:	f8 01       	movw	r30, r16
    19a4:	91 83       	std	Z+1, r25	; 0x01
    19a6:	80 83       	st	Z, r24
    19a8:	1f c0       	rjmp	.+62     	; 0x19e8 <main+0xc5c>
    19aa:	fe 01       	movw	r30, r28
    19ac:	ed 58       	subi	r30, 0x8D	; 141
    19ae:	ff 4f       	sbci	r31, 0xFF	; 255
    19b0:	89 e1       	ldi	r24, 0x19	; 25
    19b2:	90 e0       	ldi	r25, 0x00	; 0
    19b4:	91 83       	std	Z+1, r25	; 0x01
    19b6:	80 83       	st	Z, r24
    19b8:	fe 01       	movw	r30, r28
    19ba:	ed 58       	subi	r30, 0x8D	; 141
    19bc:	ff 4f       	sbci	r31, 0xFF	; 255
    19be:	80 81       	ld	r24, Z
    19c0:	91 81       	ldd	r25, Z+1	; 0x01
    19c2:	01 97       	sbiw	r24, 0x01	; 1
    19c4:	f1 f7       	brne	.-4      	; 0x19c2 <main+0xc36>
    19c6:	fe 01       	movw	r30, r28
    19c8:	ed 58       	subi	r30, 0x8D	; 141
    19ca:	ff 4f       	sbci	r31, 0xFF	; 255
    19cc:	91 83       	std	Z+1, r25	; 0x01
    19ce:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19d0:	de 01       	movw	r26, r28
    19d2:	ab 58       	subi	r26, 0x8B	; 139
    19d4:	bf 4f       	sbci	r27, 0xFF	; 255
    19d6:	fe 01       	movw	r30, r28
    19d8:	eb 58       	subi	r30, 0x8B	; 139
    19da:	ff 4f       	sbci	r31, 0xFF	; 255
    19dc:	80 81       	ld	r24, Z
    19de:	91 81       	ldd	r25, Z+1	; 0x01
    19e0:	01 97       	sbiw	r24, 0x01	; 1
    19e2:	11 96       	adiw	r26, 0x01	; 1
    19e4:	9c 93       	st	X, r25
    19e6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19e8:	fe 01       	movw	r30, r28
    19ea:	eb 58       	subi	r30, 0x8B	; 139
    19ec:	ff 4f       	sbci	r31, 0xFF	; 255
    19ee:	80 81       	ld	r24, Z
    19f0:	91 81       	ldd	r25, Z+1	; 0x01
    19f2:	00 97       	sbiw	r24, 0x00	; 0
    19f4:	d1 f6       	brne	.-76     	; 0x19aa <main+0xc1e>
    19f6:	27 c0       	rjmp	.+78     	; 0x1a46 <main+0xcba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19f8:	8e 01       	movw	r16, r28
    19fa:	0b 58       	subi	r16, 0x8B	; 139
    19fc:	1f 4f       	sbci	r17, 0xFF	; 255
    19fe:	fe 01       	movw	r30, r28
    1a00:	e9 58       	subi	r30, 0x89	; 137
    1a02:	ff 4f       	sbci	r31, 0xFF	; 255
    1a04:	60 81       	ld	r22, Z
    1a06:	71 81       	ldd	r23, Z+1	; 0x01
    1a08:	82 81       	ldd	r24, Z+2	; 0x02
    1a0a:	93 81       	ldd	r25, Z+3	; 0x03
    1a0c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a10:	dc 01       	movw	r26, r24
    1a12:	cb 01       	movw	r24, r22
    1a14:	f8 01       	movw	r30, r16
    1a16:	91 83       	std	Z+1, r25	; 0x01
    1a18:	80 83       	st	Z, r24
    1a1a:	de 01       	movw	r26, r28
    1a1c:	af 58       	subi	r26, 0x8F	; 143
    1a1e:	bf 4f       	sbci	r27, 0xFF	; 255
    1a20:	fe 01       	movw	r30, r28
    1a22:	eb 58       	subi	r30, 0x8B	; 139
    1a24:	ff 4f       	sbci	r31, 0xFF	; 255
    1a26:	80 81       	ld	r24, Z
    1a28:	91 81       	ldd	r25, Z+1	; 0x01
    1a2a:	8d 93       	st	X+, r24
    1a2c:	9c 93       	st	X, r25
    1a2e:	fe 01       	movw	r30, r28
    1a30:	ef 58       	subi	r30, 0x8F	; 143
    1a32:	ff 4f       	sbci	r31, 0xFF	; 255
    1a34:	80 81       	ld	r24, Z
    1a36:	91 81       	ldd	r25, Z+1	; 0x01
    1a38:	01 97       	sbiw	r24, 0x01	; 1
    1a3a:	f1 f7       	brne	.-4      	; 0x1a38 <main+0xcac>
    1a3c:	fe 01       	movw	r30, r28
    1a3e:	ef 58       	subi	r30, 0x8F	; 143
    1a40:	ff 4f       	sbci	r31, 0xFF	; 255
    1a42:	91 83       	std	Z+1, r25	; 0x01
    1a44:	80 83       	st	Z, r24
		_delay_ms(6);
		PORTA = (PORTA & 0xC0) | (common_selector & 0x3F);	// lighting up the 6th 7-segment
    1a46:	ab e3       	ldi	r26, 0x3B	; 59
    1a48:	b0 e0       	ldi	r27, 0x00	; 0
    1a4a:	eb e3       	ldi	r30, 0x3B	; 59
    1a4c:	f0 e0       	ldi	r31, 0x00	; 0
    1a4e:	80 81       	ld	r24, Z
    1a50:	98 2f       	mov	r25, r24
    1a52:	90 7c       	andi	r25, 0xC0	; 192
    1a54:	fe 01       	movw	r30, r28
    1a56:	e1 54       	subi	r30, 0x41	; 65
    1a58:	ff 4f       	sbci	r31, 0xFF	; 255
    1a5a:	80 81       	ld	r24, Z
    1a5c:	8f 73       	andi	r24, 0x3F	; 63
    1a5e:	89 2b       	or	r24, r25
    1a60:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | (hours/10 & 0x0F);			// showing the ten's of hours
    1a62:	05 e3       	ldi	r16, 0x35	; 53
    1a64:	10 e0       	ldi	r17, 0x00	; 0
    1a66:	e5 e3       	ldi	r30, 0x35	; 53
    1a68:	f0 e0       	ldi	r31, 0x00	; 0
    1a6a:	80 81       	ld	r24, Z
    1a6c:	48 2f       	mov	r20, r24
    1a6e:	40 7f       	andi	r20, 0xF0	; 240
    1a70:	80 91 6c 00 	lds	r24, 0x006C
    1a74:	90 91 6d 00 	lds	r25, 0x006D
    1a78:	2a e0       	ldi	r18, 0x0A	; 10
    1a7a:	30 e0       	ldi	r19, 0x00	; 0
    1a7c:	b9 01       	movw	r22, r18
    1a7e:	0e 94 8c 14 	call	0x2918	; 0x2918 <__divmodhi4>
    1a82:	cb 01       	movw	r24, r22
    1a84:	8f 70       	andi	r24, 0x0F	; 15
    1a86:	84 2b       	or	r24, r20
    1a88:	f8 01       	movw	r30, r16
    1a8a:	80 83       	st	Z, r24
		if(change_alarm_mode)		// if the system in changing time mode
    1a8c:	80 91 6e 00 	lds	r24, 0x006E
    1a90:	88 23       	and	r24, r24
    1a92:	b1 f1       	breq	.+108    	; 0x1b00 <main+0xd74>
			PORTC = (PORTC | 0x10) & ~((dp_selector==5) << PC4);	// light up the dp
    1a94:	25 e3       	ldi	r18, 0x35	; 53
    1a96:	30 e0       	ldi	r19, 0x00	; 0
    1a98:	ca 53       	subi	r28, 0x3A	; 58
    1a9a:	df 4f       	sbci	r29, 0xFF	; 255
    1a9c:	39 83       	std	Y+1, r19	; 0x01
    1a9e:	28 83       	st	Y, r18
    1aa0:	c6 5c       	subi	r28, 0xC6	; 198
    1aa2:	d0 40       	sbci	r29, 0x00	; 0
    1aa4:	e5 e3       	ldi	r30, 0x35	; 53
    1aa6:	f0 e0       	ldi	r31, 0x00	; 0
    1aa8:	80 81       	ld	r24, Z
    1aaa:	80 61       	ori	r24, 0x10	; 16
    1aac:	cb 53       	subi	r28, 0x3B	; 59
    1aae:	df 4f       	sbci	r29, 0xFF	; 255
    1ab0:	88 83       	st	Y, r24
    1ab2:	c5 5c       	subi	r28, 0xC5	; 197
    1ab4:	d0 40       	sbci	r29, 0x00	; 0
    1ab6:	fe 01       	movw	r30, r28
    1ab8:	e2 54       	subi	r30, 0x42	; 66
    1aba:	ff 4f       	sbci	r31, 0xFF	; 255
    1abc:	80 81       	ld	r24, Z
    1abe:	85 30       	cpi	r24, 0x05	; 5
    1ac0:	39 f4       	brne	.+14     	; 0x1ad0 <main+0xd44>
    1ac2:	3f ee       	ldi	r19, 0xEF	; 239
    1ac4:	cc 53       	subi	r28, 0x3C	; 60
    1ac6:	df 4f       	sbci	r29, 0xFF	; 255
    1ac8:	38 83       	st	Y, r19
    1aca:	c4 5c       	subi	r28, 0xC4	; 196
    1acc:	d0 40       	sbci	r29, 0x00	; 0
    1ace:	06 c0       	rjmp	.+12     	; 0x1adc <main+0xd50>
    1ad0:	8f ef       	ldi	r24, 0xFF	; 255
    1ad2:	cc 53       	subi	r28, 0x3C	; 60
    1ad4:	df 4f       	sbci	r29, 0xFF	; 255
    1ad6:	88 83       	st	Y, r24
    1ad8:	c4 5c       	subi	r28, 0xC4	; 196
    1ada:	d0 40       	sbci	r29, 0x00	; 0
    1adc:	cb 53       	subi	r28, 0x3B	; 59
    1ade:	df 4f       	sbci	r29, 0xFF	; 255
    1ae0:	88 81       	ld	r24, Y
    1ae2:	c5 5c       	subi	r28, 0xC5	; 197
    1ae4:	d0 40       	sbci	r29, 0x00	; 0
    1ae6:	cc 53       	subi	r28, 0x3C	; 60
    1ae8:	df 4f       	sbci	r29, 0xFF	; 255
    1aea:	98 81       	ld	r25, Y
    1aec:	c4 5c       	subi	r28, 0xC4	; 196
    1aee:	d0 40       	sbci	r29, 0x00	; 0
    1af0:	89 23       	and	r24, r25
    1af2:	ca 53       	subi	r28, 0x3A	; 58
    1af4:	df 4f       	sbci	r29, 0xFF	; 255
    1af6:	e8 81       	ld	r30, Y
    1af8:	f9 81       	ldd	r31, Y+1	; 0x01
    1afa:	c6 5c       	subi	r28, 0xC6	; 198
    1afc:	d0 40       	sbci	r29, 0x00	; 0
    1afe:	80 83       	st	Z, r24
		common_selector <<= 1;		// select the next 7-segment
    1b00:	de 01       	movw	r26, r28
    1b02:	a1 54       	subi	r26, 0x41	; 65
    1b04:	bf 4f       	sbci	r27, 0xFF	; 255
    1b06:	fe 01       	movw	r30, r28
    1b08:	e1 54       	subi	r30, 0x41	; 65
    1b0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b0c:	80 81       	ld	r24, Z
    1b0e:	88 0f       	add	r24, r24
    1b10:	8c 93       	st	X, r24
    1b12:	fe 01       	movw	r30, r28
    1b14:	e3 59       	subi	r30, 0x93	; 147
    1b16:	ff 4f       	sbci	r31, 0xFF	; 255
    1b18:	80 e0       	ldi	r24, 0x00	; 0
    1b1a:	90 e0       	ldi	r25, 0x00	; 0
    1b1c:	a0 ec       	ldi	r26, 0xC0	; 192
    1b1e:	b0 e4       	ldi	r27, 0x40	; 64
    1b20:	80 83       	st	Z, r24
    1b22:	91 83       	std	Z+1, r25	; 0x01
    1b24:	a2 83       	std	Z+2, r26	; 0x02
    1b26:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b28:	8e 01       	movw	r16, r28
    1b2a:	07 59       	subi	r16, 0x97	; 151
    1b2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b2e:	fe 01       	movw	r30, r28
    1b30:	e3 59       	subi	r30, 0x93	; 147
    1b32:	ff 4f       	sbci	r31, 0xFF	; 255
    1b34:	60 81       	ld	r22, Z
    1b36:	71 81       	ldd	r23, Z+1	; 0x01
    1b38:	82 81       	ldd	r24, Z+2	; 0x02
    1b3a:	93 81       	ldd	r25, Z+3	; 0x03
    1b3c:	20 e0       	ldi	r18, 0x00	; 0
    1b3e:	30 e0       	ldi	r19, 0x00	; 0
    1b40:	4a e7       	ldi	r20, 0x7A	; 122
    1b42:	53 e4       	ldi	r21, 0x43	; 67
    1b44:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b48:	dc 01       	movw	r26, r24
    1b4a:	cb 01       	movw	r24, r22
    1b4c:	f8 01       	movw	r30, r16
    1b4e:	80 83       	st	Z, r24
    1b50:	91 83       	std	Z+1, r25	; 0x01
    1b52:	a2 83       	std	Z+2, r26	; 0x02
    1b54:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b56:	fe 01       	movw	r30, r28
    1b58:	e7 59       	subi	r30, 0x97	; 151
    1b5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b5c:	60 81       	ld	r22, Z
    1b5e:	71 81       	ldd	r23, Z+1	; 0x01
    1b60:	82 81       	ldd	r24, Z+2	; 0x02
    1b62:	93 81       	ldd	r25, Z+3	; 0x03
    1b64:	20 e0       	ldi	r18, 0x00	; 0
    1b66:	30 e0       	ldi	r19, 0x00	; 0
    1b68:	40 e8       	ldi	r20, 0x80	; 128
    1b6a:	5f e3       	ldi	r21, 0x3F	; 63
    1b6c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1b70:	88 23       	and	r24, r24
    1b72:	44 f4       	brge	.+16     	; 0x1b84 <main+0xdf8>
		__ticks = 1;
    1b74:	fe 01       	movw	r30, r28
    1b76:	e9 59       	subi	r30, 0x99	; 153
    1b78:	ff 4f       	sbci	r31, 0xFF	; 255
    1b7a:	81 e0       	ldi	r24, 0x01	; 1
    1b7c:	90 e0       	ldi	r25, 0x00	; 0
    1b7e:	91 83       	std	Z+1, r25	; 0x01
    1b80:	80 83       	st	Z, r24
    1b82:	64 c0       	rjmp	.+200    	; 0x1c4c <main+0xec0>
	else if (__tmp > 65535)
    1b84:	fe 01       	movw	r30, r28
    1b86:	e7 59       	subi	r30, 0x97	; 151
    1b88:	ff 4f       	sbci	r31, 0xFF	; 255
    1b8a:	60 81       	ld	r22, Z
    1b8c:	71 81       	ldd	r23, Z+1	; 0x01
    1b8e:	82 81       	ldd	r24, Z+2	; 0x02
    1b90:	93 81       	ldd	r25, Z+3	; 0x03
    1b92:	20 e0       	ldi	r18, 0x00	; 0
    1b94:	3f ef       	ldi	r19, 0xFF	; 255
    1b96:	4f e7       	ldi	r20, 0x7F	; 127
    1b98:	57 e4       	ldi	r21, 0x47	; 71
    1b9a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1b9e:	18 16       	cp	r1, r24
    1ba0:	0c f0       	brlt	.+2      	; 0x1ba4 <main+0xe18>
    1ba2:	43 c0       	rjmp	.+134    	; 0x1c2a <main+0xe9e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ba4:	fe 01       	movw	r30, r28
    1ba6:	e3 59       	subi	r30, 0x93	; 147
    1ba8:	ff 4f       	sbci	r31, 0xFF	; 255
    1baa:	60 81       	ld	r22, Z
    1bac:	71 81       	ldd	r23, Z+1	; 0x01
    1bae:	82 81       	ldd	r24, Z+2	; 0x02
    1bb0:	93 81       	ldd	r25, Z+3	; 0x03
    1bb2:	20 e0       	ldi	r18, 0x00	; 0
    1bb4:	30 e0       	ldi	r19, 0x00	; 0
    1bb6:	40 e2       	ldi	r20, 0x20	; 32
    1bb8:	51 e4       	ldi	r21, 0x41	; 65
    1bba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1bbe:	dc 01       	movw	r26, r24
    1bc0:	cb 01       	movw	r24, r22
    1bc2:	8e 01       	movw	r16, r28
    1bc4:	09 59       	subi	r16, 0x99	; 153
    1bc6:	1f 4f       	sbci	r17, 0xFF	; 255
    1bc8:	bc 01       	movw	r22, r24
    1bca:	cd 01       	movw	r24, r26
    1bcc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bd0:	dc 01       	movw	r26, r24
    1bd2:	cb 01       	movw	r24, r22
    1bd4:	f8 01       	movw	r30, r16
    1bd6:	91 83       	std	Z+1, r25	; 0x01
    1bd8:	80 83       	st	Z, r24
    1bda:	1f c0       	rjmp	.+62     	; 0x1c1a <main+0xe8e>
    1bdc:	fe 01       	movw	r30, r28
    1bde:	eb 59       	subi	r30, 0x9B	; 155
    1be0:	ff 4f       	sbci	r31, 0xFF	; 255
    1be2:	89 e1       	ldi	r24, 0x19	; 25
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	91 83       	std	Z+1, r25	; 0x01
    1be8:	80 83       	st	Z, r24
    1bea:	fe 01       	movw	r30, r28
    1bec:	eb 59       	subi	r30, 0x9B	; 155
    1bee:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf0:	80 81       	ld	r24, Z
    1bf2:	91 81       	ldd	r25, Z+1	; 0x01
    1bf4:	01 97       	sbiw	r24, 0x01	; 1
    1bf6:	f1 f7       	brne	.-4      	; 0x1bf4 <main+0xe68>
    1bf8:	fe 01       	movw	r30, r28
    1bfa:	eb 59       	subi	r30, 0x9B	; 155
    1bfc:	ff 4f       	sbci	r31, 0xFF	; 255
    1bfe:	91 83       	std	Z+1, r25	; 0x01
    1c00:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c02:	de 01       	movw	r26, r28
    1c04:	a9 59       	subi	r26, 0x99	; 153
    1c06:	bf 4f       	sbci	r27, 0xFF	; 255
    1c08:	fe 01       	movw	r30, r28
    1c0a:	e9 59       	subi	r30, 0x99	; 153
    1c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c0e:	80 81       	ld	r24, Z
    1c10:	91 81       	ldd	r25, Z+1	; 0x01
    1c12:	01 97       	sbiw	r24, 0x01	; 1
    1c14:	11 96       	adiw	r26, 0x01	; 1
    1c16:	9c 93       	st	X, r25
    1c18:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c1a:	fe 01       	movw	r30, r28
    1c1c:	e9 59       	subi	r30, 0x99	; 153
    1c1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c20:	80 81       	ld	r24, Z
    1c22:	91 81       	ldd	r25, Z+1	; 0x01
    1c24:	00 97       	sbiw	r24, 0x00	; 0
    1c26:	d1 f6       	brne	.-76     	; 0x1bdc <main+0xe50>
    1c28:	28 c0       	rjmp	.+80     	; 0x1c7a <main+0xeee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c2a:	8e 01       	movw	r16, r28
    1c2c:	09 59       	subi	r16, 0x99	; 153
    1c2e:	1f 4f       	sbci	r17, 0xFF	; 255
    1c30:	fe 01       	movw	r30, r28
    1c32:	e7 59       	subi	r30, 0x97	; 151
    1c34:	ff 4f       	sbci	r31, 0xFF	; 255
    1c36:	60 81       	ld	r22, Z
    1c38:	71 81       	ldd	r23, Z+1	; 0x01
    1c3a:	82 81       	ldd	r24, Z+2	; 0x02
    1c3c:	93 81       	ldd	r25, Z+3	; 0x03
    1c3e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c42:	dc 01       	movw	r26, r24
    1c44:	cb 01       	movw	r24, r22
    1c46:	f8 01       	movw	r30, r16
    1c48:	91 83       	std	Z+1, r25	; 0x01
    1c4a:	80 83       	st	Z, r24
    1c4c:	de 01       	movw	r26, r28
    1c4e:	ad 59       	subi	r26, 0x9D	; 157
    1c50:	bf 4f       	sbci	r27, 0xFF	; 255
    1c52:	fe 01       	movw	r30, r28
    1c54:	e9 59       	subi	r30, 0x99	; 153
    1c56:	ff 4f       	sbci	r31, 0xFF	; 255
    1c58:	80 81       	ld	r24, Z
    1c5a:	91 81       	ldd	r25, Z+1	; 0x01
    1c5c:	11 96       	adiw	r26, 0x01	; 1
    1c5e:	9c 93       	st	X, r25
    1c60:	8e 93       	st	-X, r24
    1c62:	fe 01       	movw	r30, r28
    1c64:	ed 59       	subi	r30, 0x9D	; 157
    1c66:	ff 4f       	sbci	r31, 0xFF	; 255
    1c68:	80 81       	ld	r24, Z
    1c6a:	91 81       	ldd	r25, Z+1	; 0x01
    1c6c:	01 97       	sbiw	r24, 0x01	; 1
    1c6e:	f1 f7       	brne	.-4      	; 0x1c6c <main+0xee0>
    1c70:	fe 01       	movw	r30, r28
    1c72:	ed 59       	subi	r30, 0x9D	; 157
    1c74:	ff 4f       	sbci	r31, 0xFF	; 255
    1c76:	91 83       	std	Z+1, r25	; 0x01
    1c78:	80 83       	st	Z, r24
		_delay_ms(6);

		if(((seconds + minutes + hours) == 0)  && alarm_mode){	// if the time of alarm reach zero
    1c7a:	20 91 68 00 	lds	r18, 0x0068
    1c7e:	30 91 69 00 	lds	r19, 0x0069
    1c82:	80 91 6a 00 	lds	r24, 0x006A
    1c86:	90 91 6b 00 	lds	r25, 0x006B
    1c8a:	28 0f       	add	r18, r24
    1c8c:	39 1f       	adc	r19, r25
    1c8e:	80 91 6c 00 	lds	r24, 0x006C
    1c92:	90 91 6d 00 	lds	r25, 0x006D
    1c96:	82 0f       	add	r24, r18
    1c98:	93 1f       	adc	r25, r19
    1c9a:	00 97       	sbiw	r24, 0x00	; 0
    1c9c:	09 f0       	breq	.+2      	; 0x1ca0 <main+0xf14>
    1c9e:	b0 c1       	rjmp	.+864    	; 0x2000 <main+0x1274>
    1ca0:	80 91 6f 00 	lds	r24, 0x006F
    1ca4:	88 23       	and	r24, r24
    1ca6:	09 f4       	brne	.+2      	; 0x1caa <main+0xf1e>
    1ca8:	ab c1       	rjmp	.+854    	; 0x2000 <main+0x1274>
			for(int i = 0 ; i < 8 ; i++){	// flashing the 7-segments and the buzzer
    1caa:	fe 01       	movw	r30, r28
    1cac:	e9 54       	subi	r30, 0x49	; 73
    1cae:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb0:	11 82       	std	Z+1, r1	; 0x01
    1cb2:	10 82       	st	Z, r1
    1cb4:	8e c1       	rjmp	.+796    	; 0x1fd2 <main+0x1246>
				PORTA  |= 1<<PA6;
    1cb6:	ab e3       	ldi	r26, 0x3B	; 59
    1cb8:	b0 e0       	ldi	r27, 0x00	; 0
    1cba:	eb e3       	ldi	r30, 0x3B	; 59
    1cbc:	f0 e0       	ldi	r31, 0x00	; 0
    1cbe:	80 81       	ld	r24, Z
    1cc0:	80 64       	ori	r24, 0x40	; 64
    1cc2:	8c 93       	st	X, r24
				PORTA |= 0x3F;
    1cc4:	ab e3       	ldi	r26, 0x3B	; 59
    1cc6:	b0 e0       	ldi	r27, 0x00	; 0
    1cc8:	eb e3       	ldi	r30, 0x3B	; 59
    1cca:	f0 e0       	ldi	r31, 0x00	; 0
    1ccc:	80 81       	ld	r24, Z
    1cce:	8f 63       	ori	r24, 0x3F	; 63
    1cd0:	8c 93       	st	X, r24
    1cd2:	fe 01       	movw	r30, r28
    1cd4:	e1 5a       	subi	r30, 0xA1	; 161
    1cd6:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd8:	80 e0       	ldi	r24, 0x00	; 0
    1cda:	90 e0       	ldi	r25, 0x00	; 0
    1cdc:	a8 e4       	ldi	r26, 0x48	; 72
    1cde:	b3 e4       	ldi	r27, 0x43	; 67
    1ce0:	80 83       	st	Z, r24
    1ce2:	91 83       	std	Z+1, r25	; 0x01
    1ce4:	a2 83       	std	Z+2, r26	; 0x02
    1ce6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ce8:	8e 01       	movw	r16, r28
    1cea:	05 5a       	subi	r16, 0xA5	; 165
    1cec:	1f 4f       	sbci	r17, 0xFF	; 255
    1cee:	fe 01       	movw	r30, r28
    1cf0:	e1 5a       	subi	r30, 0xA1	; 161
    1cf2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf4:	60 81       	ld	r22, Z
    1cf6:	71 81       	ldd	r23, Z+1	; 0x01
    1cf8:	82 81       	ldd	r24, Z+2	; 0x02
    1cfa:	93 81       	ldd	r25, Z+3	; 0x03
    1cfc:	20 e0       	ldi	r18, 0x00	; 0
    1cfe:	30 e0       	ldi	r19, 0x00	; 0
    1d00:	4a e7       	ldi	r20, 0x7A	; 122
    1d02:	53 e4       	ldi	r21, 0x43	; 67
    1d04:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d08:	dc 01       	movw	r26, r24
    1d0a:	cb 01       	movw	r24, r22
    1d0c:	f8 01       	movw	r30, r16
    1d0e:	80 83       	st	Z, r24
    1d10:	91 83       	std	Z+1, r25	; 0x01
    1d12:	a2 83       	std	Z+2, r26	; 0x02
    1d14:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d16:	fe 01       	movw	r30, r28
    1d18:	e5 5a       	subi	r30, 0xA5	; 165
    1d1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d1c:	60 81       	ld	r22, Z
    1d1e:	71 81       	ldd	r23, Z+1	; 0x01
    1d20:	82 81       	ldd	r24, Z+2	; 0x02
    1d22:	93 81       	ldd	r25, Z+3	; 0x03
    1d24:	20 e0       	ldi	r18, 0x00	; 0
    1d26:	30 e0       	ldi	r19, 0x00	; 0
    1d28:	40 e8       	ldi	r20, 0x80	; 128
    1d2a:	5f e3       	ldi	r21, 0x3F	; 63
    1d2c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1d30:	88 23       	and	r24, r24
    1d32:	44 f4       	brge	.+16     	; 0x1d44 <main+0xfb8>
		__ticks = 1;
    1d34:	fe 01       	movw	r30, r28
    1d36:	e7 5a       	subi	r30, 0xA7	; 167
    1d38:	ff 4f       	sbci	r31, 0xFF	; 255
    1d3a:	81 e0       	ldi	r24, 0x01	; 1
    1d3c:	90 e0       	ldi	r25, 0x00	; 0
    1d3e:	91 83       	std	Z+1, r25	; 0x01
    1d40:	80 83       	st	Z, r24
    1d42:	64 c0       	rjmp	.+200    	; 0x1e0c <main+0x1080>
	else if (__tmp > 65535)
    1d44:	fe 01       	movw	r30, r28
    1d46:	e5 5a       	subi	r30, 0xA5	; 165
    1d48:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4a:	60 81       	ld	r22, Z
    1d4c:	71 81       	ldd	r23, Z+1	; 0x01
    1d4e:	82 81       	ldd	r24, Z+2	; 0x02
    1d50:	93 81       	ldd	r25, Z+3	; 0x03
    1d52:	20 e0       	ldi	r18, 0x00	; 0
    1d54:	3f ef       	ldi	r19, 0xFF	; 255
    1d56:	4f e7       	ldi	r20, 0x7F	; 127
    1d58:	57 e4       	ldi	r21, 0x47	; 71
    1d5a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1d5e:	18 16       	cp	r1, r24
    1d60:	0c f0       	brlt	.+2      	; 0x1d64 <main+0xfd8>
    1d62:	43 c0       	rjmp	.+134    	; 0x1dea <main+0x105e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d64:	fe 01       	movw	r30, r28
    1d66:	e1 5a       	subi	r30, 0xA1	; 161
    1d68:	ff 4f       	sbci	r31, 0xFF	; 255
    1d6a:	60 81       	ld	r22, Z
    1d6c:	71 81       	ldd	r23, Z+1	; 0x01
    1d6e:	82 81       	ldd	r24, Z+2	; 0x02
    1d70:	93 81       	ldd	r25, Z+3	; 0x03
    1d72:	20 e0       	ldi	r18, 0x00	; 0
    1d74:	30 e0       	ldi	r19, 0x00	; 0
    1d76:	40 e2       	ldi	r20, 0x20	; 32
    1d78:	51 e4       	ldi	r21, 0x41	; 65
    1d7a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d7e:	dc 01       	movw	r26, r24
    1d80:	cb 01       	movw	r24, r22
    1d82:	8e 01       	movw	r16, r28
    1d84:	07 5a       	subi	r16, 0xA7	; 167
    1d86:	1f 4f       	sbci	r17, 0xFF	; 255
    1d88:	bc 01       	movw	r22, r24
    1d8a:	cd 01       	movw	r24, r26
    1d8c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d90:	dc 01       	movw	r26, r24
    1d92:	cb 01       	movw	r24, r22
    1d94:	f8 01       	movw	r30, r16
    1d96:	91 83       	std	Z+1, r25	; 0x01
    1d98:	80 83       	st	Z, r24
    1d9a:	1f c0       	rjmp	.+62     	; 0x1dda <main+0x104e>
    1d9c:	fe 01       	movw	r30, r28
    1d9e:	e9 5a       	subi	r30, 0xA9	; 169
    1da0:	ff 4f       	sbci	r31, 0xFF	; 255
    1da2:	89 e1       	ldi	r24, 0x19	; 25
    1da4:	90 e0       	ldi	r25, 0x00	; 0
    1da6:	91 83       	std	Z+1, r25	; 0x01
    1da8:	80 83       	st	Z, r24
    1daa:	fe 01       	movw	r30, r28
    1dac:	e9 5a       	subi	r30, 0xA9	; 169
    1dae:	ff 4f       	sbci	r31, 0xFF	; 255
    1db0:	80 81       	ld	r24, Z
    1db2:	91 81       	ldd	r25, Z+1	; 0x01
    1db4:	01 97       	sbiw	r24, 0x01	; 1
    1db6:	f1 f7       	brne	.-4      	; 0x1db4 <main+0x1028>
    1db8:	fe 01       	movw	r30, r28
    1dba:	e9 5a       	subi	r30, 0xA9	; 169
    1dbc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dbe:	91 83       	std	Z+1, r25	; 0x01
    1dc0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dc2:	de 01       	movw	r26, r28
    1dc4:	a7 5a       	subi	r26, 0xA7	; 167
    1dc6:	bf 4f       	sbci	r27, 0xFF	; 255
    1dc8:	fe 01       	movw	r30, r28
    1dca:	e7 5a       	subi	r30, 0xA7	; 167
    1dcc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dce:	80 81       	ld	r24, Z
    1dd0:	91 81       	ldd	r25, Z+1	; 0x01
    1dd2:	01 97       	sbiw	r24, 0x01	; 1
    1dd4:	11 96       	adiw	r26, 0x01	; 1
    1dd6:	9c 93       	st	X, r25
    1dd8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dda:	fe 01       	movw	r30, r28
    1ddc:	e7 5a       	subi	r30, 0xA7	; 167
    1dde:	ff 4f       	sbci	r31, 0xFF	; 255
    1de0:	80 81       	ld	r24, Z
    1de2:	91 81       	ldd	r25, Z+1	; 0x01
    1de4:	00 97       	sbiw	r24, 0x00	; 0
    1de6:	d1 f6       	brne	.-76     	; 0x1d9c <main+0x1010>
    1de8:	27 c0       	rjmp	.+78     	; 0x1e38 <main+0x10ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dea:	8e 01       	movw	r16, r28
    1dec:	07 5a       	subi	r16, 0xA7	; 167
    1dee:	1f 4f       	sbci	r17, 0xFF	; 255
    1df0:	fe 01       	movw	r30, r28
    1df2:	e5 5a       	subi	r30, 0xA5	; 165
    1df4:	ff 4f       	sbci	r31, 0xFF	; 255
    1df6:	60 81       	ld	r22, Z
    1df8:	71 81       	ldd	r23, Z+1	; 0x01
    1dfa:	82 81       	ldd	r24, Z+2	; 0x02
    1dfc:	93 81       	ldd	r25, Z+3	; 0x03
    1dfe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e02:	dc 01       	movw	r26, r24
    1e04:	cb 01       	movw	r24, r22
    1e06:	f8 01       	movw	r30, r16
    1e08:	91 83       	std	Z+1, r25	; 0x01
    1e0a:	80 83       	st	Z, r24
    1e0c:	de 01       	movw	r26, r28
    1e0e:	ab 5a       	subi	r26, 0xAB	; 171
    1e10:	bf 4f       	sbci	r27, 0xFF	; 255
    1e12:	fe 01       	movw	r30, r28
    1e14:	e7 5a       	subi	r30, 0xA7	; 167
    1e16:	ff 4f       	sbci	r31, 0xFF	; 255
    1e18:	80 81       	ld	r24, Z
    1e1a:	91 81       	ldd	r25, Z+1	; 0x01
    1e1c:	8d 93       	st	X+, r24
    1e1e:	9c 93       	st	X, r25
    1e20:	fe 01       	movw	r30, r28
    1e22:	eb 5a       	subi	r30, 0xAB	; 171
    1e24:	ff 4f       	sbci	r31, 0xFF	; 255
    1e26:	80 81       	ld	r24, Z
    1e28:	91 81       	ldd	r25, Z+1	; 0x01
    1e2a:	01 97       	sbiw	r24, 0x01	; 1
    1e2c:	f1 f7       	brne	.-4      	; 0x1e2a <main+0x109e>
    1e2e:	fe 01       	movw	r30, r28
    1e30:	eb 5a       	subi	r30, 0xAB	; 171
    1e32:	ff 4f       	sbci	r31, 0xFF	; 255
    1e34:	91 83       	std	Z+1, r25	; 0x01
    1e36:	80 83       	st	Z, r24
				_delay_ms(200);
				PORTA &=~ 1<<PA6;
    1e38:	ab e3       	ldi	r26, 0x3B	; 59
    1e3a:	b0 e0       	ldi	r27, 0x00	; 0
    1e3c:	eb e3       	ldi	r30, 0x3B	; 59
    1e3e:	f0 e0       	ldi	r31, 0x00	; 0
    1e40:	80 81       	ld	r24, Z
    1e42:	80 78       	andi	r24, 0x80	; 128
    1e44:	8c 93       	st	X, r24
				PORTA &=~ 0x3F;
    1e46:	ab e3       	ldi	r26, 0x3B	; 59
    1e48:	b0 e0       	ldi	r27, 0x00	; 0
    1e4a:	eb e3       	ldi	r30, 0x3B	; 59
    1e4c:	f0 e0       	ldi	r31, 0x00	; 0
    1e4e:	80 81       	ld	r24, Z
    1e50:	80 7c       	andi	r24, 0xC0	; 192
    1e52:	8c 93       	st	X, r24
    1e54:	fe 01       	movw	r30, r28
    1e56:	ef 5a       	subi	r30, 0xAF	; 175
    1e58:	ff 4f       	sbci	r31, 0xFF	; 255
    1e5a:	80 e0       	ldi	r24, 0x00	; 0
    1e5c:	90 e0       	ldi	r25, 0x00	; 0
    1e5e:	a8 e4       	ldi	r26, 0x48	; 72
    1e60:	b3 e4       	ldi	r27, 0x43	; 67
    1e62:	80 83       	st	Z, r24
    1e64:	91 83       	std	Z+1, r25	; 0x01
    1e66:	a2 83       	std	Z+2, r26	; 0x02
    1e68:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e6a:	8e 01       	movw	r16, r28
    1e6c:	03 5b       	subi	r16, 0xB3	; 179
    1e6e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e70:	fe 01       	movw	r30, r28
    1e72:	ef 5a       	subi	r30, 0xAF	; 175
    1e74:	ff 4f       	sbci	r31, 0xFF	; 255
    1e76:	60 81       	ld	r22, Z
    1e78:	71 81       	ldd	r23, Z+1	; 0x01
    1e7a:	82 81       	ldd	r24, Z+2	; 0x02
    1e7c:	93 81       	ldd	r25, Z+3	; 0x03
    1e7e:	20 e0       	ldi	r18, 0x00	; 0
    1e80:	30 e0       	ldi	r19, 0x00	; 0
    1e82:	4a e7       	ldi	r20, 0x7A	; 122
    1e84:	53 e4       	ldi	r21, 0x43	; 67
    1e86:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e8a:	dc 01       	movw	r26, r24
    1e8c:	cb 01       	movw	r24, r22
    1e8e:	f8 01       	movw	r30, r16
    1e90:	80 83       	st	Z, r24
    1e92:	91 83       	std	Z+1, r25	; 0x01
    1e94:	a2 83       	std	Z+2, r26	; 0x02
    1e96:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e98:	fe 01       	movw	r30, r28
    1e9a:	e3 5b       	subi	r30, 0xB3	; 179
    1e9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e9e:	60 81       	ld	r22, Z
    1ea0:	71 81       	ldd	r23, Z+1	; 0x01
    1ea2:	82 81       	ldd	r24, Z+2	; 0x02
    1ea4:	93 81       	ldd	r25, Z+3	; 0x03
    1ea6:	20 e0       	ldi	r18, 0x00	; 0
    1ea8:	30 e0       	ldi	r19, 0x00	; 0
    1eaa:	40 e8       	ldi	r20, 0x80	; 128
    1eac:	5f e3       	ldi	r21, 0x3F	; 63
    1eae:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1eb2:	88 23       	and	r24, r24
    1eb4:	44 f4       	brge	.+16     	; 0x1ec6 <main+0x113a>
		__ticks = 1;
    1eb6:	fe 01       	movw	r30, r28
    1eb8:	e5 5b       	subi	r30, 0xB5	; 181
    1eba:	ff 4f       	sbci	r31, 0xFF	; 255
    1ebc:	81 e0       	ldi	r24, 0x01	; 1
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	91 83       	std	Z+1, r25	; 0x01
    1ec2:	80 83       	st	Z, r24
    1ec4:	64 c0       	rjmp	.+200    	; 0x1f8e <main+0x1202>
	else if (__tmp > 65535)
    1ec6:	fe 01       	movw	r30, r28
    1ec8:	e3 5b       	subi	r30, 0xB3	; 179
    1eca:	ff 4f       	sbci	r31, 0xFF	; 255
    1ecc:	60 81       	ld	r22, Z
    1ece:	71 81       	ldd	r23, Z+1	; 0x01
    1ed0:	82 81       	ldd	r24, Z+2	; 0x02
    1ed2:	93 81       	ldd	r25, Z+3	; 0x03
    1ed4:	20 e0       	ldi	r18, 0x00	; 0
    1ed6:	3f ef       	ldi	r19, 0xFF	; 255
    1ed8:	4f e7       	ldi	r20, 0x7F	; 127
    1eda:	57 e4       	ldi	r21, 0x47	; 71
    1edc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1ee0:	18 16       	cp	r1, r24
    1ee2:	0c f0       	brlt	.+2      	; 0x1ee6 <main+0x115a>
    1ee4:	43 c0       	rjmp	.+134    	; 0x1f6c <main+0x11e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ee6:	fe 01       	movw	r30, r28
    1ee8:	ef 5a       	subi	r30, 0xAF	; 175
    1eea:	ff 4f       	sbci	r31, 0xFF	; 255
    1eec:	60 81       	ld	r22, Z
    1eee:	71 81       	ldd	r23, Z+1	; 0x01
    1ef0:	82 81       	ldd	r24, Z+2	; 0x02
    1ef2:	93 81       	ldd	r25, Z+3	; 0x03
    1ef4:	20 e0       	ldi	r18, 0x00	; 0
    1ef6:	30 e0       	ldi	r19, 0x00	; 0
    1ef8:	40 e2       	ldi	r20, 0x20	; 32
    1efa:	51 e4       	ldi	r21, 0x41	; 65
    1efc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f00:	dc 01       	movw	r26, r24
    1f02:	cb 01       	movw	r24, r22
    1f04:	8e 01       	movw	r16, r28
    1f06:	05 5b       	subi	r16, 0xB5	; 181
    1f08:	1f 4f       	sbci	r17, 0xFF	; 255
    1f0a:	bc 01       	movw	r22, r24
    1f0c:	cd 01       	movw	r24, r26
    1f0e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f12:	dc 01       	movw	r26, r24
    1f14:	cb 01       	movw	r24, r22
    1f16:	f8 01       	movw	r30, r16
    1f18:	91 83       	std	Z+1, r25	; 0x01
    1f1a:	80 83       	st	Z, r24
    1f1c:	1f c0       	rjmp	.+62     	; 0x1f5c <main+0x11d0>
    1f1e:	fe 01       	movw	r30, r28
    1f20:	e7 5b       	subi	r30, 0xB7	; 183
    1f22:	ff 4f       	sbci	r31, 0xFF	; 255
    1f24:	89 e1       	ldi	r24, 0x19	; 25
    1f26:	90 e0       	ldi	r25, 0x00	; 0
    1f28:	91 83       	std	Z+1, r25	; 0x01
    1f2a:	80 83       	st	Z, r24
    1f2c:	fe 01       	movw	r30, r28
    1f2e:	e7 5b       	subi	r30, 0xB7	; 183
    1f30:	ff 4f       	sbci	r31, 0xFF	; 255
    1f32:	80 81       	ld	r24, Z
    1f34:	91 81       	ldd	r25, Z+1	; 0x01
    1f36:	01 97       	sbiw	r24, 0x01	; 1
    1f38:	f1 f7       	brne	.-4      	; 0x1f36 <main+0x11aa>
    1f3a:	fe 01       	movw	r30, r28
    1f3c:	e7 5b       	subi	r30, 0xB7	; 183
    1f3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f40:	91 83       	std	Z+1, r25	; 0x01
    1f42:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f44:	de 01       	movw	r26, r28
    1f46:	a5 5b       	subi	r26, 0xB5	; 181
    1f48:	bf 4f       	sbci	r27, 0xFF	; 255
    1f4a:	fe 01       	movw	r30, r28
    1f4c:	e5 5b       	subi	r30, 0xB5	; 181
    1f4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f50:	80 81       	ld	r24, Z
    1f52:	91 81       	ldd	r25, Z+1	; 0x01
    1f54:	01 97       	sbiw	r24, 0x01	; 1
    1f56:	11 96       	adiw	r26, 0x01	; 1
    1f58:	9c 93       	st	X, r25
    1f5a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f5c:	fe 01       	movw	r30, r28
    1f5e:	e5 5b       	subi	r30, 0xB5	; 181
    1f60:	ff 4f       	sbci	r31, 0xFF	; 255
    1f62:	80 81       	ld	r24, Z
    1f64:	91 81       	ldd	r25, Z+1	; 0x01
    1f66:	00 97       	sbiw	r24, 0x00	; 0
    1f68:	d1 f6       	brne	.-76     	; 0x1f1e <main+0x1192>
    1f6a:	27 c0       	rjmp	.+78     	; 0x1fba <main+0x122e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f6c:	8e 01       	movw	r16, r28
    1f6e:	05 5b       	subi	r16, 0xB5	; 181
    1f70:	1f 4f       	sbci	r17, 0xFF	; 255
    1f72:	fe 01       	movw	r30, r28
    1f74:	e3 5b       	subi	r30, 0xB3	; 179
    1f76:	ff 4f       	sbci	r31, 0xFF	; 255
    1f78:	60 81       	ld	r22, Z
    1f7a:	71 81       	ldd	r23, Z+1	; 0x01
    1f7c:	82 81       	ldd	r24, Z+2	; 0x02
    1f7e:	93 81       	ldd	r25, Z+3	; 0x03
    1f80:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f84:	dc 01       	movw	r26, r24
    1f86:	cb 01       	movw	r24, r22
    1f88:	f8 01       	movw	r30, r16
    1f8a:	91 83       	std	Z+1, r25	; 0x01
    1f8c:	80 83       	st	Z, r24
    1f8e:	de 01       	movw	r26, r28
    1f90:	a9 5b       	subi	r26, 0xB9	; 185
    1f92:	bf 4f       	sbci	r27, 0xFF	; 255
    1f94:	fe 01       	movw	r30, r28
    1f96:	e5 5b       	subi	r30, 0xB5	; 181
    1f98:	ff 4f       	sbci	r31, 0xFF	; 255
    1f9a:	80 81       	ld	r24, Z
    1f9c:	91 81       	ldd	r25, Z+1	; 0x01
    1f9e:	8d 93       	st	X+, r24
    1fa0:	9c 93       	st	X, r25
    1fa2:	fe 01       	movw	r30, r28
    1fa4:	e9 5b       	subi	r30, 0xB9	; 185
    1fa6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa8:	80 81       	ld	r24, Z
    1faa:	91 81       	ldd	r25, Z+1	; 0x01
    1fac:	01 97       	sbiw	r24, 0x01	; 1
    1fae:	f1 f7       	brne	.-4      	; 0x1fac <main+0x1220>
    1fb0:	fe 01       	movw	r30, r28
    1fb2:	e9 5b       	subi	r30, 0xB9	; 185
    1fb4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb6:	91 83       	std	Z+1, r25	; 0x01
    1fb8:	80 83       	st	Z, r24
			PORTC = (PORTC | 0x10) & ~((dp_selector==5) << PC4);	// light up the dp
		common_selector <<= 1;		// select the next 7-segment
		_delay_ms(6);

		if(((seconds + minutes + hours) == 0)  && alarm_mode){	// if the time of alarm reach zero
			for(int i = 0 ; i < 8 ; i++){	// flashing the 7-segments and the buzzer
    1fba:	de 01       	movw	r26, r28
    1fbc:	a9 54       	subi	r26, 0x49	; 73
    1fbe:	bf 4f       	sbci	r27, 0xFF	; 255
    1fc0:	fe 01       	movw	r30, r28
    1fc2:	e9 54       	subi	r30, 0x49	; 73
    1fc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc6:	80 81       	ld	r24, Z
    1fc8:	91 81       	ldd	r25, Z+1	; 0x01
    1fca:	01 96       	adiw	r24, 0x01	; 1
    1fcc:	11 96       	adiw	r26, 0x01	; 1
    1fce:	9c 93       	st	X, r25
    1fd0:	8e 93       	st	-X, r24
    1fd2:	fe 01       	movw	r30, r28
    1fd4:	e9 54       	subi	r30, 0x49	; 73
    1fd6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd8:	80 81       	ld	r24, Z
    1fda:	91 81       	ldd	r25, Z+1	; 0x01
    1fdc:	88 30       	cpi	r24, 0x08	; 8
    1fde:	91 05       	cpc	r25, r1
    1fe0:	0c f4       	brge	.+2      	; 0x1fe4 <main+0x1258>
    1fe2:	69 ce       	rjmp	.-814    	; 0x1cb6 <main+0xf2a>
				_delay_ms(200);
				PORTA &=~ 1<<PA6;
				PORTA &=~ 0x3F;
				_delay_ms(200);
			}
			alarm_mode = 0;		// return back to the normal mode
    1fe4:	10 92 6f 00 	sts	0x006F, r1
			seconds = 0; minutes = 0; hours = 0;	// reset the time to zero
    1fe8:	10 92 69 00 	sts	0x0069, r1
    1fec:	10 92 68 00 	sts	0x0068, r1
    1ff0:	10 92 6b 00 	sts	0x006B, r1
    1ff4:	10 92 6a 00 	sts	0x006A, r1
    1ff8:	10 92 6d 00 	sts	0x006D, r1
    1ffc:	10 92 6c 00 	sts	0x006C, r1
		}
		if (!(PIND & 1<<PD4)){	// if the user press set button
    2000:	e0 e3       	ldi	r30, 0x30	; 48
    2002:	f0 e0       	ldi	r31, 0x00	; 0
    2004:	80 81       	ld	r24, Z
    2006:	88 2f       	mov	r24, r24
    2008:	90 e0       	ldi	r25, 0x00	; 0
    200a:	80 71       	andi	r24, 0x10	; 16
    200c:	90 70       	andi	r25, 0x00	; 0
    200e:	00 97       	sbiw	r24, 0x00	; 0
    2010:	09 f0       	breq	.+2      	; 0x2014 <main+0x1288>
    2012:	ad c0       	rjmp	.+346    	; 0x216e <main+0x13e2>
    2014:	fe 01       	movw	r30, r28
    2016:	ed 5b       	subi	r30, 0xBD	; 189
    2018:	ff 4f       	sbci	r31, 0xFF	; 255
    201a:	80 e0       	ldi	r24, 0x00	; 0
    201c:	90 e0       	ldi	r25, 0x00	; 0
    201e:	a0 ef       	ldi	r26, 0xF0	; 240
    2020:	b1 e4       	ldi	r27, 0x41	; 65
    2022:	80 83       	st	Z, r24
    2024:	91 83       	std	Z+1, r25	; 0x01
    2026:	a2 83       	std	Z+2, r26	; 0x02
    2028:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    202a:	8e 01       	movw	r16, r28
    202c:	01 5c       	subi	r16, 0xC1	; 193
    202e:	1f 4f       	sbci	r17, 0xFF	; 255
    2030:	fe 01       	movw	r30, r28
    2032:	ed 5b       	subi	r30, 0xBD	; 189
    2034:	ff 4f       	sbci	r31, 0xFF	; 255
    2036:	60 81       	ld	r22, Z
    2038:	71 81       	ldd	r23, Z+1	; 0x01
    203a:	82 81       	ldd	r24, Z+2	; 0x02
    203c:	93 81       	ldd	r25, Z+3	; 0x03
    203e:	20 e0       	ldi	r18, 0x00	; 0
    2040:	30 e0       	ldi	r19, 0x00	; 0
    2042:	4a e7       	ldi	r20, 0x7A	; 122
    2044:	53 e4       	ldi	r21, 0x43	; 67
    2046:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    204a:	dc 01       	movw	r26, r24
    204c:	cb 01       	movw	r24, r22
    204e:	f8 01       	movw	r30, r16
    2050:	80 83       	st	Z, r24
    2052:	91 83       	std	Z+1, r25	; 0x01
    2054:	a2 83       	std	Z+2, r26	; 0x02
    2056:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2058:	fe 01       	movw	r30, r28
    205a:	ff 96       	adiw	r30, 0x3f	; 63
    205c:	60 81       	ld	r22, Z
    205e:	71 81       	ldd	r23, Z+1	; 0x01
    2060:	82 81       	ldd	r24, Z+2	; 0x02
    2062:	93 81       	ldd	r25, Z+3	; 0x03
    2064:	20 e0       	ldi	r18, 0x00	; 0
    2066:	30 e0       	ldi	r19, 0x00	; 0
    2068:	40 e8       	ldi	r20, 0x80	; 128
    206a:	5f e3       	ldi	r21, 0x3F	; 63
    206c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2070:	88 23       	and	r24, r24
    2072:	2c f4       	brge	.+10     	; 0x207e <main+0x12f2>
		__ticks = 1;
    2074:	81 e0       	ldi	r24, 0x01	; 1
    2076:	90 e0       	ldi	r25, 0x00	; 0
    2078:	9e af       	std	Y+62, r25	; 0x3e
    207a:	8d af       	std	Y+61, r24	; 0x3d
    207c:	46 c0       	rjmp	.+140    	; 0x210a <main+0x137e>
	else if (__tmp > 65535)
    207e:	fe 01       	movw	r30, r28
    2080:	ff 96       	adiw	r30, 0x3f	; 63
    2082:	60 81       	ld	r22, Z
    2084:	71 81       	ldd	r23, Z+1	; 0x01
    2086:	82 81       	ldd	r24, Z+2	; 0x02
    2088:	93 81       	ldd	r25, Z+3	; 0x03
    208a:	20 e0       	ldi	r18, 0x00	; 0
    208c:	3f ef       	ldi	r19, 0xFF	; 255
    208e:	4f e7       	ldi	r20, 0x7F	; 127
    2090:	57 e4       	ldi	r21, 0x47	; 71
    2092:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2096:	18 16       	cp	r1, r24
    2098:	64 f5       	brge	.+88     	; 0x20f2 <main+0x1366>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    209a:	fe 01       	movw	r30, r28
    209c:	ed 5b       	subi	r30, 0xBD	; 189
    209e:	ff 4f       	sbci	r31, 0xFF	; 255
    20a0:	60 81       	ld	r22, Z
    20a2:	71 81       	ldd	r23, Z+1	; 0x01
    20a4:	82 81       	ldd	r24, Z+2	; 0x02
    20a6:	93 81       	ldd	r25, Z+3	; 0x03
    20a8:	20 e0       	ldi	r18, 0x00	; 0
    20aa:	30 e0       	ldi	r19, 0x00	; 0
    20ac:	40 e2       	ldi	r20, 0x20	; 32
    20ae:	51 e4       	ldi	r21, 0x41	; 65
    20b0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    20b4:	dc 01       	movw	r26, r24
    20b6:	cb 01       	movw	r24, r22
    20b8:	bc 01       	movw	r22, r24
    20ba:	cd 01       	movw	r24, r26
    20bc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    20c0:	dc 01       	movw	r26, r24
    20c2:	cb 01       	movw	r24, r22
    20c4:	9e af       	std	Y+62, r25	; 0x3e
    20c6:	8d af       	std	Y+61, r24	; 0x3d
    20c8:	0f c0       	rjmp	.+30     	; 0x20e8 <main+0x135c>
    20ca:	89 e1       	ldi	r24, 0x19	; 25
    20cc:	90 e0       	ldi	r25, 0x00	; 0
    20ce:	9c af       	std	Y+60, r25	; 0x3c
    20d0:	8b af       	std	Y+59, r24	; 0x3b
    20d2:	8b ad       	ldd	r24, Y+59	; 0x3b
    20d4:	9c ad       	ldd	r25, Y+60	; 0x3c
    20d6:	01 97       	sbiw	r24, 0x01	; 1
    20d8:	f1 f7       	brne	.-4      	; 0x20d6 <main+0x134a>
    20da:	9c af       	std	Y+60, r25	; 0x3c
    20dc:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20de:	8d ad       	ldd	r24, Y+61	; 0x3d
    20e0:	9e ad       	ldd	r25, Y+62	; 0x3e
    20e2:	01 97       	sbiw	r24, 0x01	; 1
    20e4:	9e af       	std	Y+62, r25	; 0x3e
    20e6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20e8:	8d ad       	ldd	r24, Y+61	; 0x3d
    20ea:	9e ad       	ldd	r25, Y+62	; 0x3e
    20ec:	00 97       	sbiw	r24, 0x00	; 0
    20ee:	69 f7       	brne	.-38     	; 0x20ca <main+0x133e>
    20f0:	16 c0       	rjmp	.+44     	; 0x211e <main+0x1392>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20f2:	fe 01       	movw	r30, r28
    20f4:	ff 96       	adiw	r30, 0x3f	; 63
    20f6:	60 81       	ld	r22, Z
    20f8:	71 81       	ldd	r23, Z+1	; 0x01
    20fa:	82 81       	ldd	r24, Z+2	; 0x02
    20fc:	93 81       	ldd	r25, Z+3	; 0x03
    20fe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2102:	dc 01       	movw	r26, r24
    2104:	cb 01       	movw	r24, r22
    2106:	9e af       	std	Y+62, r25	; 0x3e
    2108:	8d af       	std	Y+61, r24	; 0x3d
    210a:	8d ad       	ldd	r24, Y+61	; 0x3d
    210c:	9e ad       	ldd	r25, Y+62	; 0x3e
    210e:	9a af       	std	Y+58, r25	; 0x3a
    2110:	89 af       	std	Y+57, r24	; 0x39
    2112:	89 ad       	ldd	r24, Y+57	; 0x39
    2114:	9a ad       	ldd	r25, Y+58	; 0x3a
    2116:	01 97       	sbiw	r24, 0x01	; 1
    2118:	f1 f7       	brne	.-4      	; 0x2116 <main+0x138a>
    211a:	9a af       	std	Y+58, r25	; 0x3a
    211c:	89 af       	std	Y+57, r24	; 0x39
			_delay_ms(30);		// delay for debouncing
			if (!(PIND & 1<<PD4) && !set_flag){
    211e:	e0 e3       	ldi	r30, 0x30	; 48
    2120:	f0 e0       	ldi	r31, 0x00	; 0
    2122:	80 81       	ld	r24, Z
    2124:	88 2f       	mov	r24, r24
    2126:	90 e0       	ldi	r25, 0x00	; 0
    2128:	80 71       	andi	r24, 0x10	; 16
    212a:	90 70       	andi	r25, 0x00	; 0
    212c:	00 97       	sbiw	r24, 0x00	; 0
    212e:	19 f5       	brne	.+70     	; 0x2176 <main+0x13ea>
    2130:	fe 01       	movw	r30, r28
    2132:	e3 54       	subi	r30, 0x43	; 67
    2134:	ff 4f       	sbci	r31, 0xFF	; 255
    2136:	80 81       	ld	r24, Z
    2138:	88 23       	and	r24, r24
    213a:	e9 f4       	brne	.+58     	; 0x2176 <main+0x13ea>
				set_flag = 1;
    213c:	fe 01       	movw	r30, r28
    213e:	e3 54       	subi	r30, 0x43	; 67
    2140:	ff 4f       	sbci	r31, 0xFF	; 255
    2142:	81 e0       	ldi	r24, 0x01	; 1
    2144:	80 83       	st	Z, r24
				seconds = 0; minutes = 0; hours = 0;	// reset the time to zero
    2146:	10 92 69 00 	sts	0x0069, r1
    214a:	10 92 68 00 	sts	0x0068, r1
    214e:	10 92 6b 00 	sts	0x006B, r1
    2152:	10 92 6a 00 	sts	0x006A, r1
    2156:	10 92 6d 00 	sts	0x006D, r1
    215a:	10 92 6c 00 	sts	0x006C, r1
				dp_selector = 0;		// select the 1st 7-segment for the dp
    215e:	fe 01       	movw	r30, r28
    2160:	e2 54       	subi	r30, 0x42	; 66
    2162:	ff 4f       	sbci	r31, 0xFF	; 255
    2164:	10 82       	st	Z, r1
				change_alarm_mode = 1;	// change the mode to changing the alarm time
    2166:	81 e0       	ldi	r24, 0x01	; 1
    2168:	80 93 6e 00 	sts	0x006E, r24
    216c:	04 c0       	rjmp	.+8      	; 0x2176 <main+0x13ea>
			}
		}
		else
			set_flag = 0;
    216e:	fe 01       	movw	r30, r28
    2170:	e3 54       	subi	r30, 0x43	; 67
    2172:	ff 4f       	sbci	r31, 0xFF	; 255
    2174:	10 82       	st	Z, r1

		if (!(PIND & 1<<PD5) && change_alarm_mode){	// if the user press + button
    2176:	e0 e3       	ldi	r30, 0x30	; 48
    2178:	f0 e0       	ldi	r31, 0x00	; 0
    217a:	80 81       	ld	r24, Z
    217c:	88 2f       	mov	r24, r24
    217e:	90 e0       	ldi	r25, 0x00	; 0
    2180:	80 72       	andi	r24, 0x20	; 32
    2182:	90 70       	andi	r25, 0x00	; 0
    2184:	00 97       	sbiw	r24, 0x00	; 0
    2186:	09 f0       	breq	.+2      	; 0x218a <main+0x13fe>
    2188:	1c c1       	rjmp	.+568    	; 0x23c2 <main+0x1636>
    218a:	80 91 6e 00 	lds	r24, 0x006E
    218e:	88 23       	and	r24, r24
    2190:	09 f4       	brne	.+2      	; 0x2194 <main+0x1408>
    2192:	17 c1       	rjmp	.+558    	; 0x23c2 <main+0x1636>
    2194:	80 e0       	ldi	r24, 0x00	; 0
    2196:	90 e0       	ldi	r25, 0x00	; 0
    2198:	a0 ef       	ldi	r26, 0xF0	; 240
    219a:	b1 e4       	ldi	r27, 0x41	; 65
    219c:	8d ab       	std	Y+53, r24	; 0x35
    219e:	9e ab       	std	Y+54, r25	; 0x36
    21a0:	af ab       	std	Y+55, r26	; 0x37
    21a2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21a4:	6d a9       	ldd	r22, Y+53	; 0x35
    21a6:	7e a9       	ldd	r23, Y+54	; 0x36
    21a8:	8f a9       	ldd	r24, Y+55	; 0x37
    21aa:	98 ad       	ldd	r25, Y+56	; 0x38
    21ac:	20 e0       	ldi	r18, 0x00	; 0
    21ae:	30 e0       	ldi	r19, 0x00	; 0
    21b0:	4a e7       	ldi	r20, 0x7A	; 122
    21b2:	53 e4       	ldi	r21, 0x43	; 67
    21b4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    21b8:	dc 01       	movw	r26, r24
    21ba:	cb 01       	movw	r24, r22
    21bc:	89 ab       	std	Y+49, r24	; 0x31
    21be:	9a ab       	std	Y+50, r25	; 0x32
    21c0:	ab ab       	std	Y+51, r26	; 0x33
    21c2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    21c4:	69 a9       	ldd	r22, Y+49	; 0x31
    21c6:	7a a9       	ldd	r23, Y+50	; 0x32
    21c8:	8b a9       	ldd	r24, Y+51	; 0x33
    21ca:	9c a9       	ldd	r25, Y+52	; 0x34
    21cc:	20 e0       	ldi	r18, 0x00	; 0
    21ce:	30 e0       	ldi	r19, 0x00	; 0
    21d0:	40 e8       	ldi	r20, 0x80	; 128
    21d2:	5f e3       	ldi	r21, 0x3F	; 63
    21d4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    21d8:	88 23       	and	r24, r24
    21da:	2c f4       	brge	.+10     	; 0x21e6 <main+0x145a>
		__ticks = 1;
    21dc:	81 e0       	ldi	r24, 0x01	; 1
    21de:	90 e0       	ldi	r25, 0x00	; 0
    21e0:	98 ab       	std	Y+48, r25	; 0x30
    21e2:	8f a7       	std	Y+47, r24	; 0x2f
    21e4:	3f c0       	rjmp	.+126    	; 0x2264 <main+0x14d8>
	else if (__tmp > 65535)
    21e6:	69 a9       	ldd	r22, Y+49	; 0x31
    21e8:	7a a9       	ldd	r23, Y+50	; 0x32
    21ea:	8b a9       	ldd	r24, Y+51	; 0x33
    21ec:	9c a9       	ldd	r25, Y+52	; 0x34
    21ee:	20 e0       	ldi	r18, 0x00	; 0
    21f0:	3f ef       	ldi	r19, 0xFF	; 255
    21f2:	4f e7       	ldi	r20, 0x7F	; 127
    21f4:	57 e4       	ldi	r21, 0x47	; 71
    21f6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    21fa:	18 16       	cp	r1, r24
    21fc:	4c f5       	brge	.+82     	; 0x2250 <main+0x14c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21fe:	6d a9       	ldd	r22, Y+53	; 0x35
    2200:	7e a9       	ldd	r23, Y+54	; 0x36
    2202:	8f a9       	ldd	r24, Y+55	; 0x37
    2204:	98 ad       	ldd	r25, Y+56	; 0x38
    2206:	20 e0       	ldi	r18, 0x00	; 0
    2208:	30 e0       	ldi	r19, 0x00	; 0
    220a:	40 e2       	ldi	r20, 0x20	; 32
    220c:	51 e4       	ldi	r21, 0x41	; 65
    220e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2212:	dc 01       	movw	r26, r24
    2214:	cb 01       	movw	r24, r22
    2216:	bc 01       	movw	r22, r24
    2218:	cd 01       	movw	r24, r26
    221a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    221e:	dc 01       	movw	r26, r24
    2220:	cb 01       	movw	r24, r22
    2222:	98 ab       	std	Y+48, r25	; 0x30
    2224:	8f a7       	std	Y+47, r24	; 0x2f
    2226:	0f c0       	rjmp	.+30     	; 0x2246 <main+0x14ba>
    2228:	89 e1       	ldi	r24, 0x19	; 25
    222a:	90 e0       	ldi	r25, 0x00	; 0
    222c:	9e a7       	std	Y+46, r25	; 0x2e
    222e:	8d a7       	std	Y+45, r24	; 0x2d
    2230:	8d a5       	ldd	r24, Y+45	; 0x2d
    2232:	9e a5       	ldd	r25, Y+46	; 0x2e
    2234:	01 97       	sbiw	r24, 0x01	; 1
    2236:	f1 f7       	brne	.-4      	; 0x2234 <main+0x14a8>
    2238:	9e a7       	std	Y+46, r25	; 0x2e
    223a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    223c:	8f a5       	ldd	r24, Y+47	; 0x2f
    223e:	98 a9       	ldd	r25, Y+48	; 0x30
    2240:	01 97       	sbiw	r24, 0x01	; 1
    2242:	98 ab       	std	Y+48, r25	; 0x30
    2244:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2246:	8f a5       	ldd	r24, Y+47	; 0x2f
    2248:	98 a9       	ldd	r25, Y+48	; 0x30
    224a:	00 97       	sbiw	r24, 0x00	; 0
    224c:	69 f7       	brne	.-38     	; 0x2228 <main+0x149c>
    224e:	14 c0       	rjmp	.+40     	; 0x2278 <main+0x14ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2250:	69 a9       	ldd	r22, Y+49	; 0x31
    2252:	7a a9       	ldd	r23, Y+50	; 0x32
    2254:	8b a9       	ldd	r24, Y+51	; 0x33
    2256:	9c a9       	ldd	r25, Y+52	; 0x34
    2258:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    225c:	dc 01       	movw	r26, r24
    225e:	cb 01       	movw	r24, r22
    2260:	98 ab       	std	Y+48, r25	; 0x30
    2262:	8f a7       	std	Y+47, r24	; 0x2f
    2264:	8f a5       	ldd	r24, Y+47	; 0x2f
    2266:	98 a9       	ldd	r25, Y+48	; 0x30
    2268:	9c a7       	std	Y+44, r25	; 0x2c
    226a:	8b a7       	std	Y+43, r24	; 0x2b
    226c:	8b a5       	ldd	r24, Y+43	; 0x2b
    226e:	9c a5       	ldd	r25, Y+44	; 0x2c
    2270:	01 97       	sbiw	r24, 0x01	; 1
    2272:	f1 f7       	brne	.-4      	; 0x2270 <main+0x14e4>
    2274:	9c a7       	std	Y+44, r25	; 0x2c
    2276:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(30);		// delay for debouncing
			if (!(PIND & 1<<PD5) && change_alarm_mode && !plus_flag){
    2278:	e0 e3       	ldi	r30, 0x30	; 48
    227a:	f0 e0       	ldi	r31, 0x00	; 0
    227c:	80 81       	ld	r24, Z
    227e:	88 2f       	mov	r24, r24
    2280:	90 e0       	ldi	r25, 0x00	; 0
    2282:	80 72       	andi	r24, 0x20	; 32
    2284:	90 70       	andi	r25, 0x00	; 0
    2286:	00 97       	sbiw	r24, 0x00	; 0
    2288:	09 f0       	breq	.+2      	; 0x228c <main+0x1500>
    228a:	9f c0       	rjmp	.+318    	; 0x23ca <main+0x163e>
    228c:	80 91 6e 00 	lds	r24, 0x006E
    2290:	88 23       	and	r24, r24
    2292:	09 f4       	brne	.+2      	; 0x2296 <main+0x150a>
    2294:	9a c0       	rjmp	.+308    	; 0x23ca <main+0x163e>
    2296:	fe 01       	movw	r30, r28
    2298:	e4 54       	subi	r30, 0x44	; 68
    229a:	ff 4f       	sbci	r31, 0xFF	; 255
    229c:	80 81       	ld	r24, Z
    229e:	88 23       	and	r24, r24
    22a0:	09 f0       	breq	.+2      	; 0x22a4 <main+0x1518>
    22a2:	93 c0       	rjmp	.+294    	; 0x23ca <main+0x163e>
				plus_flag = 1;
    22a4:	fe 01       	movw	r30, r28
    22a6:	e4 54       	subi	r30, 0x44	; 68
    22a8:	ff 4f       	sbci	r31, 0xFF	; 255
    22aa:	81 e0       	ldi	r24, 0x01	; 1
    22ac:	80 83       	st	Z, r24
				// changing the 7-segments digits
				switch(dp_selector){
    22ae:	fe 01       	movw	r30, r28
    22b0:	e2 54       	subi	r30, 0x42	; 66
    22b2:	ff 4f       	sbci	r31, 0xFF	; 255
    22b4:	80 81       	ld	r24, Z
    22b6:	28 2f       	mov	r18, r24
    22b8:	30 e0       	ldi	r19, 0x00	; 0
    22ba:	ce 53       	subi	r28, 0x3E	; 62
    22bc:	df 4f       	sbci	r29, 0xFF	; 255
    22be:	39 83       	std	Y+1, r19	; 0x01
    22c0:	28 83       	st	Y, r18
    22c2:	c2 5c       	subi	r28, 0xC2	; 194
    22c4:	d0 40       	sbci	r29, 0x00	; 0
    22c6:	ce 53       	subi	r28, 0x3E	; 62
    22c8:	df 4f       	sbci	r29, 0xFF	; 255
    22ca:	88 81       	ld	r24, Y
    22cc:	99 81       	ldd	r25, Y+1	; 0x01
    22ce:	c2 5c       	subi	r28, 0xC2	; 194
    22d0:	d0 40       	sbci	r29, 0x00	; 0
    22d2:	82 30       	cpi	r24, 0x02	; 2
    22d4:	91 05       	cpc	r25, r1
    22d6:	09 f4       	brne	.+2      	; 0x22da <main+0x154e>
    22d8:	4c c0       	rjmp	.+152    	; 0x2372 <main+0x15e6>
    22da:	ce 53       	subi	r28, 0x3E	; 62
    22dc:	df 4f       	sbci	r29, 0xFF	; 255
    22de:	e8 81       	ld	r30, Y
    22e0:	f9 81       	ldd	r31, Y+1	; 0x01
    22e2:	c2 5c       	subi	r28, 0xC2	; 194
    22e4:	d0 40       	sbci	r29, 0x00	; 0
    22e6:	e3 30       	cpi	r30, 0x03	; 3
    22e8:	f1 05       	cpc	r31, r1
    22ea:	9c f4       	brge	.+38     	; 0x2312 <main+0x1586>
    22ec:	ce 53       	subi	r28, 0x3E	; 62
    22ee:	df 4f       	sbci	r29, 0xFF	; 255
    22f0:	28 81       	ld	r18, Y
    22f2:	39 81       	ldd	r19, Y+1	; 0x01
    22f4:	c2 5c       	subi	r28, 0xC2	; 194
    22f6:	d0 40       	sbci	r29, 0x00	; 0
    22f8:	21 15       	cp	r18, r1
    22fa:	31 05       	cpc	r19, r1
    22fc:	31 f1       	breq	.+76     	; 0x234a <main+0x15be>
    22fe:	ce 53       	subi	r28, 0x3E	; 62
    2300:	df 4f       	sbci	r29, 0xFF	; 255
    2302:	88 81       	ld	r24, Y
    2304:	99 81       	ldd	r25, Y+1	; 0x01
    2306:	c2 5c       	subi	r28, 0xC2	; 194
    2308:	d0 40       	sbci	r29, 0x00	; 0
    230a:	81 30       	cpi	r24, 0x01	; 1
    230c:	91 05       	cpc	r25, r1
    230e:	39 f1       	breq	.+78     	; 0x235e <main+0x15d2>
    2310:	5c c0       	rjmp	.+184    	; 0x23ca <main+0x163e>
    2312:	ce 53       	subi	r28, 0x3E	; 62
    2314:	df 4f       	sbci	r29, 0xFF	; 255
    2316:	e8 81       	ld	r30, Y
    2318:	f9 81       	ldd	r31, Y+1	; 0x01
    231a:	c2 5c       	subi	r28, 0xC2	; 194
    231c:	d0 40       	sbci	r29, 0x00	; 0
    231e:	e4 30       	cpi	r30, 0x04	; 4
    2320:	f1 05       	cpc	r31, r1
    2322:	d9 f1       	breq	.+118    	; 0x239a <main+0x160e>
    2324:	ce 53       	subi	r28, 0x3E	; 62
    2326:	df 4f       	sbci	r29, 0xFF	; 255
    2328:	28 81       	ld	r18, Y
    232a:	39 81       	ldd	r19, Y+1	; 0x01
    232c:	c2 5c       	subi	r28, 0xC2	; 194
    232e:	d0 40       	sbci	r29, 0x00	; 0
    2330:	24 30       	cpi	r18, 0x04	; 4
    2332:	31 05       	cpc	r19, r1
    2334:	44 f1       	brlt	.+80     	; 0x2386 <main+0x15fa>
    2336:	ce 53       	subi	r28, 0x3E	; 62
    2338:	df 4f       	sbci	r29, 0xFF	; 255
    233a:	88 81       	ld	r24, Y
    233c:	99 81       	ldd	r25, Y+1	; 0x01
    233e:	c2 5c       	subi	r28, 0xC2	; 194
    2340:	d0 40       	sbci	r29, 0x00	; 0
    2342:	85 30       	cpi	r24, 0x05	; 5
    2344:	91 05       	cpc	r25, r1
    2346:	99 f1       	breq	.+102    	; 0x23ae <main+0x1622>
    2348:	40 c0       	rjmp	.+128    	; 0x23ca <main+0x163e>
				case 0:
					seconds += 1;
    234a:	80 91 68 00 	lds	r24, 0x0068
    234e:	90 91 69 00 	lds	r25, 0x0069
    2352:	01 96       	adiw	r24, 0x01	; 1
    2354:	90 93 69 00 	sts	0x0069, r25
    2358:	80 93 68 00 	sts	0x0068, r24
    235c:	36 c0       	rjmp	.+108    	; 0x23ca <main+0x163e>
					break;
				case 1:
					seconds += 10;
    235e:	80 91 68 00 	lds	r24, 0x0068
    2362:	90 91 69 00 	lds	r25, 0x0069
    2366:	0a 96       	adiw	r24, 0x0a	; 10
    2368:	90 93 69 00 	sts	0x0069, r25
    236c:	80 93 68 00 	sts	0x0068, r24
    2370:	2c c0       	rjmp	.+88     	; 0x23ca <main+0x163e>
					break;
				case 2:
					minutes += 1;
    2372:	80 91 6a 00 	lds	r24, 0x006A
    2376:	90 91 6b 00 	lds	r25, 0x006B
    237a:	01 96       	adiw	r24, 0x01	; 1
    237c:	90 93 6b 00 	sts	0x006B, r25
    2380:	80 93 6a 00 	sts	0x006A, r24
    2384:	22 c0       	rjmp	.+68     	; 0x23ca <main+0x163e>
					break;
				case 3:
					minutes += 10;
    2386:	80 91 6a 00 	lds	r24, 0x006A
    238a:	90 91 6b 00 	lds	r25, 0x006B
    238e:	0a 96       	adiw	r24, 0x0a	; 10
    2390:	90 93 6b 00 	sts	0x006B, r25
    2394:	80 93 6a 00 	sts	0x006A, r24
    2398:	18 c0       	rjmp	.+48     	; 0x23ca <main+0x163e>
					break;
				case 4:
					hours += 1;
    239a:	80 91 6c 00 	lds	r24, 0x006C
    239e:	90 91 6d 00 	lds	r25, 0x006D
    23a2:	01 96       	adiw	r24, 0x01	; 1
    23a4:	90 93 6d 00 	sts	0x006D, r25
    23a8:	80 93 6c 00 	sts	0x006C, r24
    23ac:	0e c0       	rjmp	.+28     	; 0x23ca <main+0x163e>
					break;
				case 5:
					hours += 10;
    23ae:	80 91 6c 00 	lds	r24, 0x006C
    23b2:	90 91 6d 00 	lds	r25, 0x006D
    23b6:	0a 96       	adiw	r24, 0x0a	; 10
    23b8:	90 93 6d 00 	sts	0x006D, r25
    23bc:	80 93 6c 00 	sts	0x006C, r24
    23c0:	04 c0       	rjmp	.+8      	; 0x23ca <main+0x163e>
				}

			}
		}
		else
			plus_flag = 0;
    23c2:	fe 01       	movw	r30, r28
    23c4:	e4 54       	subi	r30, 0x44	; 68
    23c6:	ff 4f       	sbci	r31, 0xFF	; 255
    23c8:	10 82       	st	Z, r1
		if (!(PIND & 1<<PD6) && change_alarm_mode){		// if the user press - button
    23ca:	e0 e3       	ldi	r30, 0x30	; 48
    23cc:	f0 e0       	ldi	r31, 0x00	; 0
    23ce:	80 81       	ld	r24, Z
    23d0:	88 2f       	mov	r24, r24
    23d2:	90 e0       	ldi	r25, 0x00	; 0
    23d4:	80 74       	andi	r24, 0x40	; 64
    23d6:	90 70       	andi	r25, 0x00	; 0
    23d8:	00 97       	sbiw	r24, 0x00	; 0
    23da:	09 f0       	breq	.+2      	; 0x23de <main+0x1652>
    23dc:	39 c1       	rjmp	.+626    	; 0x2650 <main+0x18c4>
    23de:	80 91 6e 00 	lds	r24, 0x006E
    23e2:	88 23       	and	r24, r24
    23e4:	09 f4       	brne	.+2      	; 0x23e8 <main+0x165c>
    23e6:	34 c1       	rjmp	.+616    	; 0x2650 <main+0x18c4>
    23e8:	80 e0       	ldi	r24, 0x00	; 0
    23ea:	90 e0       	ldi	r25, 0x00	; 0
    23ec:	a0 ef       	ldi	r26, 0xF0	; 240
    23ee:	b1 e4       	ldi	r27, 0x41	; 65
    23f0:	8f a3       	std	Y+39, r24	; 0x27
    23f2:	98 a7       	std	Y+40, r25	; 0x28
    23f4:	a9 a7       	std	Y+41, r26	; 0x29
    23f6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23f8:	6f a1       	ldd	r22, Y+39	; 0x27
    23fa:	78 a5       	ldd	r23, Y+40	; 0x28
    23fc:	89 a5       	ldd	r24, Y+41	; 0x29
    23fe:	9a a5       	ldd	r25, Y+42	; 0x2a
    2400:	20 e0       	ldi	r18, 0x00	; 0
    2402:	30 e0       	ldi	r19, 0x00	; 0
    2404:	4a e7       	ldi	r20, 0x7A	; 122
    2406:	53 e4       	ldi	r21, 0x43	; 67
    2408:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    240c:	dc 01       	movw	r26, r24
    240e:	cb 01       	movw	r24, r22
    2410:	8b a3       	std	Y+35, r24	; 0x23
    2412:	9c a3       	std	Y+36, r25	; 0x24
    2414:	ad a3       	std	Y+37, r26	; 0x25
    2416:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2418:	6b a1       	ldd	r22, Y+35	; 0x23
    241a:	7c a1       	ldd	r23, Y+36	; 0x24
    241c:	8d a1       	ldd	r24, Y+37	; 0x25
    241e:	9e a1       	ldd	r25, Y+38	; 0x26
    2420:	20 e0       	ldi	r18, 0x00	; 0
    2422:	30 e0       	ldi	r19, 0x00	; 0
    2424:	40 e8       	ldi	r20, 0x80	; 128
    2426:	5f e3       	ldi	r21, 0x3F	; 63
    2428:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    242c:	88 23       	and	r24, r24
    242e:	2c f4       	brge	.+10     	; 0x243a <main+0x16ae>
		__ticks = 1;
    2430:	81 e0       	ldi	r24, 0x01	; 1
    2432:	90 e0       	ldi	r25, 0x00	; 0
    2434:	9a a3       	std	Y+34, r25	; 0x22
    2436:	89 a3       	std	Y+33, r24	; 0x21
    2438:	3f c0       	rjmp	.+126    	; 0x24b8 <main+0x172c>
	else if (__tmp > 65535)
    243a:	6b a1       	ldd	r22, Y+35	; 0x23
    243c:	7c a1       	ldd	r23, Y+36	; 0x24
    243e:	8d a1       	ldd	r24, Y+37	; 0x25
    2440:	9e a1       	ldd	r25, Y+38	; 0x26
    2442:	20 e0       	ldi	r18, 0x00	; 0
    2444:	3f ef       	ldi	r19, 0xFF	; 255
    2446:	4f e7       	ldi	r20, 0x7F	; 127
    2448:	57 e4       	ldi	r21, 0x47	; 71
    244a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    244e:	18 16       	cp	r1, r24
    2450:	4c f5       	brge	.+82     	; 0x24a4 <main+0x1718>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2452:	6f a1       	ldd	r22, Y+39	; 0x27
    2454:	78 a5       	ldd	r23, Y+40	; 0x28
    2456:	89 a5       	ldd	r24, Y+41	; 0x29
    2458:	9a a5       	ldd	r25, Y+42	; 0x2a
    245a:	20 e0       	ldi	r18, 0x00	; 0
    245c:	30 e0       	ldi	r19, 0x00	; 0
    245e:	40 e2       	ldi	r20, 0x20	; 32
    2460:	51 e4       	ldi	r21, 0x41	; 65
    2462:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2466:	dc 01       	movw	r26, r24
    2468:	cb 01       	movw	r24, r22
    246a:	bc 01       	movw	r22, r24
    246c:	cd 01       	movw	r24, r26
    246e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2472:	dc 01       	movw	r26, r24
    2474:	cb 01       	movw	r24, r22
    2476:	9a a3       	std	Y+34, r25	; 0x22
    2478:	89 a3       	std	Y+33, r24	; 0x21
    247a:	0f c0       	rjmp	.+30     	; 0x249a <main+0x170e>
    247c:	89 e1       	ldi	r24, 0x19	; 25
    247e:	90 e0       	ldi	r25, 0x00	; 0
    2480:	98 a3       	std	Y+32, r25	; 0x20
    2482:	8f 8f       	std	Y+31, r24	; 0x1f
    2484:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2486:	98 a1       	ldd	r25, Y+32	; 0x20
    2488:	01 97       	sbiw	r24, 0x01	; 1
    248a:	f1 f7       	brne	.-4      	; 0x2488 <main+0x16fc>
    248c:	98 a3       	std	Y+32, r25	; 0x20
    248e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2490:	89 a1       	ldd	r24, Y+33	; 0x21
    2492:	9a a1       	ldd	r25, Y+34	; 0x22
    2494:	01 97       	sbiw	r24, 0x01	; 1
    2496:	9a a3       	std	Y+34, r25	; 0x22
    2498:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    249a:	89 a1       	ldd	r24, Y+33	; 0x21
    249c:	9a a1       	ldd	r25, Y+34	; 0x22
    249e:	00 97       	sbiw	r24, 0x00	; 0
    24a0:	69 f7       	brne	.-38     	; 0x247c <main+0x16f0>
    24a2:	14 c0       	rjmp	.+40     	; 0x24cc <main+0x1740>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24a4:	6b a1       	ldd	r22, Y+35	; 0x23
    24a6:	7c a1       	ldd	r23, Y+36	; 0x24
    24a8:	8d a1       	ldd	r24, Y+37	; 0x25
    24aa:	9e a1       	ldd	r25, Y+38	; 0x26
    24ac:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    24b0:	dc 01       	movw	r26, r24
    24b2:	cb 01       	movw	r24, r22
    24b4:	9a a3       	std	Y+34, r25	; 0x22
    24b6:	89 a3       	std	Y+33, r24	; 0x21
    24b8:	89 a1       	ldd	r24, Y+33	; 0x21
    24ba:	9a a1       	ldd	r25, Y+34	; 0x22
    24bc:	9e 8f       	std	Y+30, r25	; 0x1e
    24be:	8d 8f       	std	Y+29, r24	; 0x1d
    24c0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    24c2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    24c4:	01 97       	sbiw	r24, 0x01	; 1
    24c6:	f1 f7       	brne	.-4      	; 0x24c4 <main+0x1738>
    24c8:	9e 8f       	std	Y+30, r25	; 0x1e
    24ca:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(30);		// delay for debouncing
			if (!(PIND & 1<<PD6) && change_alarm_mode && !minus_flag){
    24cc:	e0 e3       	ldi	r30, 0x30	; 48
    24ce:	f0 e0       	ldi	r31, 0x00	; 0
    24d0:	80 81       	ld	r24, Z
    24d2:	88 2f       	mov	r24, r24
    24d4:	90 e0       	ldi	r25, 0x00	; 0
    24d6:	80 74       	andi	r24, 0x40	; 64
    24d8:	90 70       	andi	r25, 0x00	; 0
    24da:	00 97       	sbiw	r24, 0x00	; 0
    24dc:	09 f0       	breq	.+2      	; 0x24e0 <main+0x1754>
    24de:	bc c0       	rjmp	.+376    	; 0x2658 <main+0x18cc>
    24e0:	80 91 6e 00 	lds	r24, 0x006E
    24e4:	88 23       	and	r24, r24
    24e6:	09 f4       	brne	.+2      	; 0x24ea <main+0x175e>
    24e8:	b7 c0       	rjmp	.+366    	; 0x2658 <main+0x18cc>
    24ea:	fe 01       	movw	r30, r28
    24ec:	e5 54       	subi	r30, 0x45	; 69
    24ee:	ff 4f       	sbci	r31, 0xFF	; 255
    24f0:	80 81       	ld	r24, Z
    24f2:	88 23       	and	r24, r24
    24f4:	09 f0       	breq	.+2      	; 0x24f8 <main+0x176c>
    24f6:	b0 c0       	rjmp	.+352    	; 0x2658 <main+0x18cc>
				minus_flag = 1;
    24f8:	fe 01       	movw	r30, r28
    24fa:	e5 54       	subi	r30, 0x45	; 69
    24fc:	ff 4f       	sbci	r31, 0xFF	; 255
    24fe:	81 e0       	ldi	r24, 0x01	; 1
    2500:	80 83       	st	Z, r24
				// changing the 7-segments digits
				switch(dp_selector){
    2502:	fe 01       	movw	r30, r28
    2504:	e2 54       	subi	r30, 0x42	; 66
    2506:	ff 4f       	sbci	r31, 0xFF	; 255
    2508:	80 81       	ld	r24, Z
    250a:	e8 2f       	mov	r30, r24
    250c:	f0 e0       	ldi	r31, 0x00	; 0
    250e:	c0 54       	subi	r28, 0x40	; 64
    2510:	df 4f       	sbci	r29, 0xFF	; 255
    2512:	f9 83       	std	Y+1, r31	; 0x01
    2514:	e8 83       	st	Y, r30
    2516:	c0 5c       	subi	r28, 0xC0	; 192
    2518:	d0 40       	sbci	r29, 0x00	; 0
    251a:	c0 54       	subi	r28, 0x40	; 64
    251c:	df 4f       	sbci	r29, 0xFF	; 255
    251e:	28 81       	ld	r18, Y
    2520:	39 81       	ldd	r19, Y+1	; 0x01
    2522:	c0 5c       	subi	r28, 0xC0	; 192
    2524:	d0 40       	sbci	r29, 0x00	; 0
    2526:	22 30       	cpi	r18, 0x02	; 2
    2528:	31 05       	cpc	r19, r1
    252a:	09 f4       	brne	.+2      	; 0x252e <main+0x17a2>
    252c:	4b c0       	rjmp	.+150    	; 0x25c4 <main+0x1838>
    252e:	c0 54       	subi	r28, 0x40	; 64
    2530:	df 4f       	sbci	r29, 0xFF	; 255
    2532:	88 81       	ld	r24, Y
    2534:	99 81       	ldd	r25, Y+1	; 0x01
    2536:	c0 5c       	subi	r28, 0xC0	; 192
    2538:	d0 40       	sbci	r29, 0x00	; 0
    253a:	83 30       	cpi	r24, 0x03	; 3
    253c:	91 05       	cpc	r25, r1
    253e:	94 f4       	brge	.+36     	; 0x2564 <main+0x17d8>
    2540:	c0 54       	subi	r28, 0x40	; 64
    2542:	df 4f       	sbci	r29, 0xFF	; 255
    2544:	e8 81       	ld	r30, Y
    2546:	f9 81       	ldd	r31, Y+1	; 0x01
    2548:	c0 5c       	subi	r28, 0xC0	; 192
    254a:	d0 40       	sbci	r29, 0x00	; 0
    254c:	30 97       	sbiw	r30, 0x00	; 0
    254e:	31 f1       	breq	.+76     	; 0x259c <main+0x1810>
    2550:	c0 54       	subi	r28, 0x40	; 64
    2552:	df 4f       	sbci	r29, 0xFF	; 255
    2554:	28 81       	ld	r18, Y
    2556:	39 81       	ldd	r19, Y+1	; 0x01
    2558:	c0 5c       	subi	r28, 0xC0	; 192
    255a:	d0 40       	sbci	r29, 0x00	; 0
    255c:	21 30       	cpi	r18, 0x01	; 1
    255e:	31 05       	cpc	r19, r1
    2560:	39 f1       	breq	.+78     	; 0x25b0 <main+0x1824>
    2562:	57 c0       	rjmp	.+174    	; 0x2612 <main+0x1886>
    2564:	c0 54       	subi	r28, 0x40	; 64
    2566:	df 4f       	sbci	r29, 0xFF	; 255
    2568:	88 81       	ld	r24, Y
    256a:	99 81       	ldd	r25, Y+1	; 0x01
    256c:	c0 5c       	subi	r28, 0xC0	; 192
    256e:	d0 40       	sbci	r29, 0x00	; 0
    2570:	84 30       	cpi	r24, 0x04	; 4
    2572:	91 05       	cpc	r25, r1
    2574:	d9 f1       	breq	.+118    	; 0x25ec <main+0x1860>
    2576:	c0 54       	subi	r28, 0x40	; 64
    2578:	df 4f       	sbci	r29, 0xFF	; 255
    257a:	e8 81       	ld	r30, Y
    257c:	f9 81       	ldd	r31, Y+1	; 0x01
    257e:	c0 5c       	subi	r28, 0xC0	; 192
    2580:	d0 40       	sbci	r29, 0x00	; 0
    2582:	e4 30       	cpi	r30, 0x04	; 4
    2584:	f1 05       	cpc	r31, r1
    2586:	44 f1       	brlt	.+80     	; 0x25d8 <main+0x184c>
    2588:	c0 54       	subi	r28, 0x40	; 64
    258a:	df 4f       	sbci	r29, 0xFF	; 255
    258c:	28 81       	ld	r18, Y
    258e:	39 81       	ldd	r19, Y+1	; 0x01
    2590:	c0 5c       	subi	r28, 0xC0	; 192
    2592:	d0 40       	sbci	r29, 0x00	; 0
    2594:	25 30       	cpi	r18, 0x05	; 5
    2596:	31 05       	cpc	r19, r1
    2598:	99 f1       	breq	.+102    	; 0x2600 <main+0x1874>
    259a:	3b c0       	rjmp	.+118    	; 0x2612 <main+0x1886>
				case 0:
					seconds -= 1;
    259c:	80 91 68 00 	lds	r24, 0x0068
    25a0:	90 91 69 00 	lds	r25, 0x0069
    25a4:	01 97       	sbiw	r24, 0x01	; 1
    25a6:	90 93 69 00 	sts	0x0069, r25
    25aa:	80 93 68 00 	sts	0x0068, r24
    25ae:	31 c0       	rjmp	.+98     	; 0x2612 <main+0x1886>
					break;
				case 1:
					seconds -= 10;
    25b0:	80 91 68 00 	lds	r24, 0x0068
    25b4:	90 91 69 00 	lds	r25, 0x0069
    25b8:	0a 97       	sbiw	r24, 0x0a	; 10
    25ba:	90 93 69 00 	sts	0x0069, r25
    25be:	80 93 68 00 	sts	0x0068, r24
    25c2:	27 c0       	rjmp	.+78     	; 0x2612 <main+0x1886>
					break;
				case 2:
					minutes -= 1;
    25c4:	80 91 6a 00 	lds	r24, 0x006A
    25c8:	90 91 6b 00 	lds	r25, 0x006B
    25cc:	01 97       	sbiw	r24, 0x01	; 1
    25ce:	90 93 6b 00 	sts	0x006B, r25
    25d2:	80 93 6a 00 	sts	0x006A, r24
    25d6:	1d c0       	rjmp	.+58     	; 0x2612 <main+0x1886>
					break;
				case 3:
					minutes -= 10;
    25d8:	80 91 6a 00 	lds	r24, 0x006A
    25dc:	90 91 6b 00 	lds	r25, 0x006B
    25e0:	0a 97       	sbiw	r24, 0x0a	; 10
    25e2:	90 93 6b 00 	sts	0x006B, r25
    25e6:	80 93 6a 00 	sts	0x006A, r24
    25ea:	13 c0       	rjmp	.+38     	; 0x2612 <main+0x1886>
					break;
				case 4:
					hours -= 1;
    25ec:	80 91 6c 00 	lds	r24, 0x006C
    25f0:	90 91 6d 00 	lds	r25, 0x006D
    25f4:	01 97       	sbiw	r24, 0x01	; 1
    25f6:	90 93 6d 00 	sts	0x006D, r25
    25fa:	80 93 6c 00 	sts	0x006C, r24
    25fe:	09 c0       	rjmp	.+18     	; 0x2612 <main+0x1886>
					break;
				case 5:
					hours -= 10;
    2600:	80 91 6c 00 	lds	r24, 0x006C
    2604:	90 91 6d 00 	lds	r25, 0x006D
    2608:	0a 97       	sbiw	r24, 0x0a	; 10
    260a:	90 93 6d 00 	sts	0x006D, r25
    260e:	80 93 6c 00 	sts	0x006C, r24
					break;
				}
				if(seconds < 0)
    2612:	80 91 68 00 	lds	r24, 0x0068
    2616:	90 91 69 00 	lds	r25, 0x0069
    261a:	99 23       	and	r25, r25
    261c:	24 f4       	brge	.+8      	; 0x2626 <main+0x189a>
					seconds = 0;
    261e:	10 92 69 00 	sts	0x0069, r1
    2622:	10 92 68 00 	sts	0x0068, r1
				if(minutes < 0)
    2626:	80 91 6a 00 	lds	r24, 0x006A
    262a:	90 91 6b 00 	lds	r25, 0x006B
    262e:	99 23       	and	r25, r25
    2630:	24 f4       	brge	.+8      	; 0x263a <main+0x18ae>
					minutes = 0;
    2632:	10 92 6b 00 	sts	0x006B, r1
    2636:	10 92 6a 00 	sts	0x006A, r1
				if(hours < 0)
    263a:	80 91 6c 00 	lds	r24, 0x006C
    263e:	90 91 6d 00 	lds	r25, 0x006D
    2642:	99 23       	and	r25, r25
    2644:	4c f4       	brge	.+18     	; 0x2658 <main+0x18cc>
					hours = 0;
    2646:	10 92 6d 00 	sts	0x006D, r1
    264a:	10 92 6c 00 	sts	0x006C, r1
    264e:	04 c0       	rjmp	.+8      	; 0x2658 <main+0x18cc>
			}
		}
		else
			minus_flag = 0;
    2650:	fe 01       	movw	r30, r28
    2652:	e5 54       	subi	r30, 0x45	; 69
    2654:	ff 4f       	sbci	r31, 0xFF	; 255
    2656:	10 82       	st	Z, r1

		if (!(PIND & 1<<PD7) && change_alarm_mode){	// if the user press go button
    2658:	e0 e3       	ldi	r30, 0x30	; 48
    265a:	f0 e0       	ldi	r31, 0x00	; 0
    265c:	80 81       	ld	r24, Z
    265e:	88 23       	and	r24, r24
    2660:	0c f4       	brge	.+2      	; 0x2664 <main+0x18d8>
    2662:	9a c0       	rjmp	.+308    	; 0x2798 <main+0x1a0c>
    2664:	80 91 6e 00 	lds	r24, 0x006E
    2668:	88 23       	and	r24, r24
    266a:	09 f4       	brne	.+2      	; 0x266e <main+0x18e2>
    266c:	95 c0       	rjmp	.+298    	; 0x2798 <main+0x1a0c>
    266e:	80 e0       	ldi	r24, 0x00	; 0
    2670:	90 e0       	ldi	r25, 0x00	; 0
    2672:	a0 ef       	ldi	r26, 0xF0	; 240
    2674:	b1 e4       	ldi	r27, 0x41	; 65
    2676:	89 8f       	std	Y+25, r24	; 0x19
    2678:	9a 8f       	std	Y+26, r25	; 0x1a
    267a:	ab 8f       	std	Y+27, r26	; 0x1b
    267c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    267e:	69 8d       	ldd	r22, Y+25	; 0x19
    2680:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2682:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2684:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2686:	20 e0       	ldi	r18, 0x00	; 0
    2688:	30 e0       	ldi	r19, 0x00	; 0
    268a:	4a e7       	ldi	r20, 0x7A	; 122
    268c:	53 e4       	ldi	r21, 0x43	; 67
    268e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2692:	dc 01       	movw	r26, r24
    2694:	cb 01       	movw	r24, r22
    2696:	8d 8b       	std	Y+21, r24	; 0x15
    2698:	9e 8b       	std	Y+22, r25	; 0x16
    269a:	af 8b       	std	Y+23, r26	; 0x17
    269c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    269e:	6d 89       	ldd	r22, Y+21	; 0x15
    26a0:	7e 89       	ldd	r23, Y+22	; 0x16
    26a2:	8f 89       	ldd	r24, Y+23	; 0x17
    26a4:	98 8d       	ldd	r25, Y+24	; 0x18
    26a6:	20 e0       	ldi	r18, 0x00	; 0
    26a8:	30 e0       	ldi	r19, 0x00	; 0
    26aa:	40 e8       	ldi	r20, 0x80	; 128
    26ac:	5f e3       	ldi	r21, 0x3F	; 63
    26ae:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    26b2:	88 23       	and	r24, r24
    26b4:	2c f4       	brge	.+10     	; 0x26c0 <main+0x1934>
		__ticks = 1;
    26b6:	81 e0       	ldi	r24, 0x01	; 1
    26b8:	90 e0       	ldi	r25, 0x00	; 0
    26ba:	9c 8b       	std	Y+20, r25	; 0x14
    26bc:	8b 8b       	std	Y+19, r24	; 0x13
    26be:	3f c0       	rjmp	.+126    	; 0x273e <main+0x19b2>
	else if (__tmp > 65535)
    26c0:	6d 89       	ldd	r22, Y+21	; 0x15
    26c2:	7e 89       	ldd	r23, Y+22	; 0x16
    26c4:	8f 89       	ldd	r24, Y+23	; 0x17
    26c6:	98 8d       	ldd	r25, Y+24	; 0x18
    26c8:	20 e0       	ldi	r18, 0x00	; 0
    26ca:	3f ef       	ldi	r19, 0xFF	; 255
    26cc:	4f e7       	ldi	r20, 0x7F	; 127
    26ce:	57 e4       	ldi	r21, 0x47	; 71
    26d0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    26d4:	18 16       	cp	r1, r24
    26d6:	4c f5       	brge	.+82     	; 0x272a <main+0x199e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26d8:	69 8d       	ldd	r22, Y+25	; 0x19
    26da:	7a 8d       	ldd	r23, Y+26	; 0x1a
    26dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    26de:	9c 8d       	ldd	r25, Y+28	; 0x1c
    26e0:	20 e0       	ldi	r18, 0x00	; 0
    26e2:	30 e0       	ldi	r19, 0x00	; 0
    26e4:	40 e2       	ldi	r20, 0x20	; 32
    26e6:	51 e4       	ldi	r21, 0x41	; 65
    26e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    26ec:	dc 01       	movw	r26, r24
    26ee:	cb 01       	movw	r24, r22
    26f0:	bc 01       	movw	r22, r24
    26f2:	cd 01       	movw	r24, r26
    26f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26f8:	dc 01       	movw	r26, r24
    26fa:	cb 01       	movw	r24, r22
    26fc:	9c 8b       	std	Y+20, r25	; 0x14
    26fe:	8b 8b       	std	Y+19, r24	; 0x13
    2700:	0f c0       	rjmp	.+30     	; 0x2720 <main+0x1994>
    2702:	89 e1       	ldi	r24, 0x19	; 25
    2704:	90 e0       	ldi	r25, 0x00	; 0
    2706:	9a 8b       	std	Y+18, r25	; 0x12
    2708:	89 8b       	std	Y+17, r24	; 0x11
    270a:	89 89       	ldd	r24, Y+17	; 0x11
    270c:	9a 89       	ldd	r25, Y+18	; 0x12
    270e:	01 97       	sbiw	r24, 0x01	; 1
    2710:	f1 f7       	brne	.-4      	; 0x270e <main+0x1982>
    2712:	9a 8b       	std	Y+18, r25	; 0x12
    2714:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2716:	8b 89       	ldd	r24, Y+19	; 0x13
    2718:	9c 89       	ldd	r25, Y+20	; 0x14
    271a:	01 97       	sbiw	r24, 0x01	; 1
    271c:	9c 8b       	std	Y+20, r25	; 0x14
    271e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2720:	8b 89       	ldd	r24, Y+19	; 0x13
    2722:	9c 89       	ldd	r25, Y+20	; 0x14
    2724:	00 97       	sbiw	r24, 0x00	; 0
    2726:	69 f7       	brne	.-38     	; 0x2702 <main+0x1976>
    2728:	14 c0       	rjmp	.+40     	; 0x2752 <main+0x19c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    272a:	6d 89       	ldd	r22, Y+21	; 0x15
    272c:	7e 89       	ldd	r23, Y+22	; 0x16
    272e:	8f 89       	ldd	r24, Y+23	; 0x17
    2730:	98 8d       	ldd	r25, Y+24	; 0x18
    2732:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2736:	dc 01       	movw	r26, r24
    2738:	cb 01       	movw	r24, r22
    273a:	9c 8b       	std	Y+20, r25	; 0x14
    273c:	8b 8b       	std	Y+19, r24	; 0x13
    273e:	8b 89       	ldd	r24, Y+19	; 0x13
    2740:	9c 89       	ldd	r25, Y+20	; 0x14
    2742:	98 8b       	std	Y+16, r25	; 0x10
    2744:	8f 87       	std	Y+15, r24	; 0x0f
    2746:	8f 85       	ldd	r24, Y+15	; 0x0f
    2748:	98 89       	ldd	r25, Y+16	; 0x10
    274a:	01 97       	sbiw	r24, 0x01	; 1
    274c:	f1 f7       	brne	.-4      	; 0x274a <main+0x19be>
    274e:	98 8b       	std	Y+16, r25	; 0x10
    2750:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(30);		// delay for debouncing
			if (!(PIND & 1<<PD7) && change_alarm_mode && !go_flag){
    2752:	e0 e3       	ldi	r30, 0x30	; 48
    2754:	f0 e0       	ldi	r31, 0x00	; 0
    2756:	80 81       	ld	r24, Z
    2758:	88 23       	and	r24, r24
    275a:	14 f1       	brlt	.+68     	; 0x27a0 <main+0x1a14>
    275c:	80 91 6e 00 	lds	r24, 0x006E
    2760:	88 23       	and	r24, r24
    2762:	f1 f0       	breq	.+60     	; 0x27a0 <main+0x1a14>
    2764:	fe 01       	movw	r30, r28
    2766:	e6 54       	subi	r30, 0x46	; 70
    2768:	ff 4f       	sbci	r31, 0xFF	; 255
    276a:	80 81       	ld	r24, Z
    276c:	88 23       	and	r24, r24
    276e:	c1 f4       	brne	.+48     	; 0x27a0 <main+0x1a14>
				dp_selector = 7; // turn off all dp
    2770:	fe 01       	movw	r30, r28
    2772:	e2 54       	subi	r30, 0x42	; 66
    2774:	ff 4f       	sbci	r31, 0xFF	; 255
    2776:	87 e0       	ldi	r24, 0x07	; 7
    2778:	80 83       	st	Z, r24
				go_flag = 1;
    277a:	fe 01       	movw	r30, r28
    277c:	e6 54       	subi	r30, 0x46	; 70
    277e:	ff 4f       	sbci	r31, 0xFF	; 255
    2780:	81 e0       	ldi	r24, 0x01	; 1
    2782:	80 83       	st	Z, r24
				change_alarm_mode = 0;	// turn off alarm changing time mode
    2784:	10 92 6e 00 	sts	0x006E, r1
				alarm_mode = 1;			// start the alarm
    2788:	81 e0       	ldi	r24, 0x01	; 1
    278a:	80 93 6f 00 	sts	0x006F, r24
				TCNT1 = 0 ;				// Start timer from zero.
    278e:	ec e4       	ldi	r30, 0x4C	; 76
    2790:	f0 e0       	ldi	r31, 0x00	; 0
    2792:	11 82       	std	Z+1, r1	; 0x01
    2794:	10 82       	st	Z, r1
    2796:	04 c0       	rjmp	.+8      	; 0x27a0 <main+0x1a14>

			}
		}
		else
			go_flag = 0;
    2798:	fe 01       	movw	r30, r28
    279a:	e6 54       	subi	r30, 0x46	; 70
    279c:	ff 4f       	sbci	r31, 0xFF	; 255
    279e:	10 82       	st	Z, r1
		if (!(PIND & 1<<PD0) && change_alarm_mode){		// if the user press <-- button
    27a0:	e0 e3       	ldi	r30, 0x30	; 48
    27a2:	f0 e0       	ldi	r31, 0x00	; 0
    27a4:	80 81       	ld	r24, Z
    27a6:	88 2f       	mov	r24, r24
    27a8:	90 e0       	ldi	r25, 0x00	; 0
    27aa:	81 70       	andi	r24, 0x01	; 1
    27ac:	90 70       	andi	r25, 0x00	; 0
    27ae:	00 97       	sbiw	r24, 0x00	; 0
    27b0:	09 f0       	breq	.+2      	; 0x27b4 <main+0x1a28>
    27b2:	ac c0       	rjmp	.+344    	; 0x290c <main+0x1b80>
    27b4:	80 91 6e 00 	lds	r24, 0x006E
    27b8:	88 23       	and	r24, r24
    27ba:	09 f4       	brne	.+2      	; 0x27be <main+0x1a32>
    27bc:	a7 c0       	rjmp	.+334    	; 0x290c <main+0x1b80>
    27be:	80 e0       	ldi	r24, 0x00	; 0
    27c0:	90 e0       	ldi	r25, 0x00	; 0
    27c2:	a0 ef       	ldi	r26, 0xF0	; 240
    27c4:	b1 e4       	ldi	r27, 0x41	; 65
    27c6:	8b 87       	std	Y+11, r24	; 0x0b
    27c8:	9c 87       	std	Y+12, r25	; 0x0c
    27ca:	ad 87       	std	Y+13, r26	; 0x0d
    27cc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27ce:	6b 85       	ldd	r22, Y+11	; 0x0b
    27d0:	7c 85       	ldd	r23, Y+12	; 0x0c
    27d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    27d4:	9e 85       	ldd	r25, Y+14	; 0x0e
    27d6:	20 e0       	ldi	r18, 0x00	; 0
    27d8:	30 e0       	ldi	r19, 0x00	; 0
    27da:	4a e7       	ldi	r20, 0x7A	; 122
    27dc:	53 e4       	ldi	r21, 0x43	; 67
    27de:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    27e2:	dc 01       	movw	r26, r24
    27e4:	cb 01       	movw	r24, r22
    27e6:	8f 83       	std	Y+7, r24	; 0x07
    27e8:	98 87       	std	Y+8, r25	; 0x08
    27ea:	a9 87       	std	Y+9, r26	; 0x09
    27ec:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    27ee:	6f 81       	ldd	r22, Y+7	; 0x07
    27f0:	78 85       	ldd	r23, Y+8	; 0x08
    27f2:	89 85       	ldd	r24, Y+9	; 0x09
    27f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    27f6:	20 e0       	ldi	r18, 0x00	; 0
    27f8:	30 e0       	ldi	r19, 0x00	; 0
    27fa:	40 e8       	ldi	r20, 0x80	; 128
    27fc:	5f e3       	ldi	r21, 0x3F	; 63
    27fe:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2802:	88 23       	and	r24, r24
    2804:	2c f4       	brge	.+10     	; 0x2810 <main+0x1a84>
		__ticks = 1;
    2806:	81 e0       	ldi	r24, 0x01	; 1
    2808:	90 e0       	ldi	r25, 0x00	; 0
    280a:	9e 83       	std	Y+6, r25	; 0x06
    280c:	8d 83       	std	Y+5, r24	; 0x05
    280e:	3f c0       	rjmp	.+126    	; 0x288e <main+0x1b02>
	else if (__tmp > 65535)
    2810:	6f 81       	ldd	r22, Y+7	; 0x07
    2812:	78 85       	ldd	r23, Y+8	; 0x08
    2814:	89 85       	ldd	r24, Y+9	; 0x09
    2816:	9a 85       	ldd	r25, Y+10	; 0x0a
    2818:	20 e0       	ldi	r18, 0x00	; 0
    281a:	3f ef       	ldi	r19, 0xFF	; 255
    281c:	4f e7       	ldi	r20, 0x7F	; 127
    281e:	57 e4       	ldi	r21, 0x47	; 71
    2820:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2824:	18 16       	cp	r1, r24
    2826:	4c f5       	brge	.+82     	; 0x287a <main+0x1aee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2828:	6b 85       	ldd	r22, Y+11	; 0x0b
    282a:	7c 85       	ldd	r23, Y+12	; 0x0c
    282c:	8d 85       	ldd	r24, Y+13	; 0x0d
    282e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2830:	20 e0       	ldi	r18, 0x00	; 0
    2832:	30 e0       	ldi	r19, 0x00	; 0
    2834:	40 e2       	ldi	r20, 0x20	; 32
    2836:	51 e4       	ldi	r21, 0x41	; 65
    2838:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    283c:	dc 01       	movw	r26, r24
    283e:	cb 01       	movw	r24, r22
    2840:	bc 01       	movw	r22, r24
    2842:	cd 01       	movw	r24, r26
    2844:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2848:	dc 01       	movw	r26, r24
    284a:	cb 01       	movw	r24, r22
    284c:	9e 83       	std	Y+6, r25	; 0x06
    284e:	8d 83       	std	Y+5, r24	; 0x05
    2850:	0f c0       	rjmp	.+30     	; 0x2870 <main+0x1ae4>
    2852:	89 e1       	ldi	r24, 0x19	; 25
    2854:	90 e0       	ldi	r25, 0x00	; 0
    2856:	9c 83       	std	Y+4, r25	; 0x04
    2858:	8b 83       	std	Y+3, r24	; 0x03
    285a:	8b 81       	ldd	r24, Y+3	; 0x03
    285c:	9c 81       	ldd	r25, Y+4	; 0x04
    285e:	01 97       	sbiw	r24, 0x01	; 1
    2860:	f1 f7       	brne	.-4      	; 0x285e <main+0x1ad2>
    2862:	9c 83       	std	Y+4, r25	; 0x04
    2864:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2866:	8d 81       	ldd	r24, Y+5	; 0x05
    2868:	9e 81       	ldd	r25, Y+6	; 0x06
    286a:	01 97       	sbiw	r24, 0x01	; 1
    286c:	9e 83       	std	Y+6, r25	; 0x06
    286e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2870:	8d 81       	ldd	r24, Y+5	; 0x05
    2872:	9e 81       	ldd	r25, Y+6	; 0x06
    2874:	00 97       	sbiw	r24, 0x00	; 0
    2876:	69 f7       	brne	.-38     	; 0x2852 <main+0x1ac6>
    2878:	14 c0       	rjmp	.+40     	; 0x28a2 <main+0x1b16>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    287a:	6f 81       	ldd	r22, Y+7	; 0x07
    287c:	78 85       	ldd	r23, Y+8	; 0x08
    287e:	89 85       	ldd	r24, Y+9	; 0x09
    2880:	9a 85       	ldd	r25, Y+10	; 0x0a
    2882:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2886:	dc 01       	movw	r26, r24
    2888:	cb 01       	movw	r24, r22
    288a:	9e 83       	std	Y+6, r25	; 0x06
    288c:	8d 83       	std	Y+5, r24	; 0x05
    288e:	8d 81       	ldd	r24, Y+5	; 0x05
    2890:	9e 81       	ldd	r25, Y+6	; 0x06
    2892:	9a 83       	std	Y+2, r25	; 0x02
    2894:	89 83       	std	Y+1, r24	; 0x01
    2896:	89 81       	ldd	r24, Y+1	; 0x01
    2898:	9a 81       	ldd	r25, Y+2	; 0x02
    289a:	01 97       	sbiw	r24, 0x01	; 1
    289c:	f1 f7       	brne	.-4      	; 0x289a <main+0x1b0e>
    289e:	9a 83       	std	Y+2, r25	; 0x02
    28a0:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(30);		// delay for debouncing
			if (!(PIND & 1<<PD0) && change_alarm_mode && !arrow_flag){
    28a2:	e0 e3       	ldi	r30, 0x30	; 48
    28a4:	f0 e0       	ldi	r31, 0x00	; 0
    28a6:	80 81       	ld	r24, Z
    28a8:	88 2f       	mov	r24, r24
    28aa:	90 e0       	ldi	r25, 0x00	; 0
    28ac:	81 70       	andi	r24, 0x01	; 1
    28ae:	90 70       	andi	r25, 0x00	; 0
    28b0:	00 97       	sbiw	r24, 0x00	; 0
    28b2:	11 f0       	breq	.+4      	; 0x28b8 <main+0x1b2c>
    28b4:	0c 94 69 07 	jmp	0xed2	; 0xed2 <main+0x146>
    28b8:	80 91 6e 00 	lds	r24, 0x006E
    28bc:	88 23       	and	r24, r24
    28be:	11 f4       	brne	.+4      	; 0x28c4 <main+0x1b38>
    28c0:	0c 94 69 07 	jmp	0xed2	; 0xed2 <main+0x146>
    28c4:	fe 01       	movw	r30, r28
    28c6:	e7 54       	subi	r30, 0x47	; 71
    28c8:	ff 4f       	sbci	r31, 0xFF	; 255
    28ca:	80 81       	ld	r24, Z
    28cc:	88 23       	and	r24, r24
    28ce:	11 f0       	breq	.+4      	; 0x28d4 <main+0x1b48>
    28d0:	0c 94 69 07 	jmp	0xed2	; 0xed2 <main+0x146>
				arrow_flag = 1;
    28d4:	fe 01       	movw	r30, r28
    28d6:	e7 54       	subi	r30, 0x47	; 71
    28d8:	ff 4f       	sbci	r31, 0xFF	; 255
    28da:	81 e0       	ldi	r24, 0x01	; 1
    28dc:	80 83       	st	Z, r24
				dp_selector++;	// shifting left the dp to select the digit which will be changed
    28de:	de 01       	movw	r26, r28
    28e0:	a2 54       	subi	r26, 0x42	; 66
    28e2:	bf 4f       	sbci	r27, 0xFF	; 255
    28e4:	fe 01       	movw	r30, r28
    28e6:	e2 54       	subi	r30, 0x42	; 66
    28e8:	ff 4f       	sbci	r31, 0xFF	; 255
    28ea:	80 81       	ld	r24, Z
    28ec:	8f 5f       	subi	r24, 0xFF	; 255
    28ee:	8c 93       	st	X, r24
				if (dp_selector == 6)
    28f0:	fe 01       	movw	r30, r28
    28f2:	e2 54       	subi	r30, 0x42	; 66
    28f4:	ff 4f       	sbci	r31, 0xFF	; 255
    28f6:	80 81       	ld	r24, Z
    28f8:	86 30       	cpi	r24, 0x06	; 6
    28fa:	11 f0       	breq	.+4      	; 0x2900 <main+0x1b74>
    28fc:	0c 94 69 07 	jmp	0xed2	; 0xed2 <main+0x146>
					dp_selector = 0;
    2900:	fe 01       	movw	r30, r28
    2902:	e2 54       	subi	r30, 0x42	; 66
    2904:	ff 4f       	sbci	r31, 0xFF	; 255
    2906:	10 82       	st	Z, r1
    2908:	0c 94 69 07 	jmp	0xed2	; 0xed2 <main+0x146>
			}
		}
		else
			arrow_flag = 0;
    290c:	fe 01       	movw	r30, r28
    290e:	e7 54       	subi	r30, 0x47	; 71
    2910:	ff 4f       	sbci	r31, 0xFF	; 255
    2912:	10 82       	st	Z, r1
    2914:	0c 94 69 07 	jmp	0xed2	; 0xed2 <main+0x146>

00002918 <__divmodhi4>:
    2918:	97 fb       	bst	r25, 7
    291a:	09 2e       	mov	r0, r25
    291c:	07 26       	eor	r0, r23
    291e:	0a d0       	rcall	.+20     	; 0x2934 <__divmodhi4_neg1>
    2920:	77 fd       	sbrc	r23, 7
    2922:	04 d0       	rcall	.+8      	; 0x292c <__divmodhi4_neg2>
    2924:	0c d0       	rcall	.+24     	; 0x293e <__udivmodhi4>
    2926:	06 d0       	rcall	.+12     	; 0x2934 <__divmodhi4_neg1>
    2928:	00 20       	and	r0, r0
    292a:	1a f4       	brpl	.+6      	; 0x2932 <__divmodhi4_exit>

0000292c <__divmodhi4_neg2>:
    292c:	70 95       	com	r23
    292e:	61 95       	neg	r22
    2930:	7f 4f       	sbci	r23, 0xFF	; 255

00002932 <__divmodhi4_exit>:
    2932:	08 95       	ret

00002934 <__divmodhi4_neg1>:
    2934:	f6 f7       	brtc	.-4      	; 0x2932 <__divmodhi4_exit>
    2936:	90 95       	com	r25
    2938:	81 95       	neg	r24
    293a:	9f 4f       	sbci	r25, 0xFF	; 255
    293c:	08 95       	ret

0000293e <__udivmodhi4>:
    293e:	aa 1b       	sub	r26, r26
    2940:	bb 1b       	sub	r27, r27
    2942:	51 e1       	ldi	r21, 0x11	; 17
    2944:	07 c0       	rjmp	.+14     	; 0x2954 <__udivmodhi4_ep>

00002946 <__udivmodhi4_loop>:
    2946:	aa 1f       	adc	r26, r26
    2948:	bb 1f       	adc	r27, r27
    294a:	a6 17       	cp	r26, r22
    294c:	b7 07       	cpc	r27, r23
    294e:	10 f0       	brcs	.+4      	; 0x2954 <__udivmodhi4_ep>
    2950:	a6 1b       	sub	r26, r22
    2952:	b7 0b       	sbc	r27, r23

00002954 <__udivmodhi4_ep>:
    2954:	88 1f       	adc	r24, r24
    2956:	99 1f       	adc	r25, r25
    2958:	5a 95       	dec	r21
    295a:	a9 f7       	brne	.-22     	; 0x2946 <__udivmodhi4_loop>
    295c:	80 95       	com	r24
    295e:	90 95       	com	r25
    2960:	bc 01       	movw	r22, r24
    2962:	cd 01       	movw	r24, r26
    2964:	08 95       	ret

00002966 <__prologue_saves__>:
    2966:	2f 92       	push	r2
    2968:	3f 92       	push	r3
    296a:	4f 92       	push	r4
    296c:	5f 92       	push	r5
    296e:	6f 92       	push	r6
    2970:	7f 92       	push	r7
    2972:	8f 92       	push	r8
    2974:	9f 92       	push	r9
    2976:	af 92       	push	r10
    2978:	bf 92       	push	r11
    297a:	cf 92       	push	r12
    297c:	df 92       	push	r13
    297e:	ef 92       	push	r14
    2980:	ff 92       	push	r15
    2982:	0f 93       	push	r16
    2984:	1f 93       	push	r17
    2986:	cf 93       	push	r28
    2988:	df 93       	push	r29
    298a:	cd b7       	in	r28, 0x3d	; 61
    298c:	de b7       	in	r29, 0x3e	; 62
    298e:	ca 1b       	sub	r28, r26
    2990:	db 0b       	sbc	r29, r27
    2992:	0f b6       	in	r0, 0x3f	; 63
    2994:	f8 94       	cli
    2996:	de bf       	out	0x3e, r29	; 62
    2998:	0f be       	out	0x3f, r0	; 63
    299a:	cd bf       	out	0x3d, r28	; 61
    299c:	09 94       	ijmp

0000299e <__epilogue_restores__>:
    299e:	2a 88       	ldd	r2, Y+18	; 0x12
    29a0:	39 88       	ldd	r3, Y+17	; 0x11
    29a2:	48 88       	ldd	r4, Y+16	; 0x10
    29a4:	5f 84       	ldd	r5, Y+15	; 0x0f
    29a6:	6e 84       	ldd	r6, Y+14	; 0x0e
    29a8:	7d 84       	ldd	r7, Y+13	; 0x0d
    29aa:	8c 84       	ldd	r8, Y+12	; 0x0c
    29ac:	9b 84       	ldd	r9, Y+11	; 0x0b
    29ae:	aa 84       	ldd	r10, Y+10	; 0x0a
    29b0:	b9 84       	ldd	r11, Y+9	; 0x09
    29b2:	c8 84       	ldd	r12, Y+8	; 0x08
    29b4:	df 80       	ldd	r13, Y+7	; 0x07
    29b6:	ee 80       	ldd	r14, Y+6	; 0x06
    29b8:	fd 80       	ldd	r15, Y+5	; 0x05
    29ba:	0c 81       	ldd	r16, Y+4	; 0x04
    29bc:	1b 81       	ldd	r17, Y+3	; 0x03
    29be:	aa 81       	ldd	r26, Y+2	; 0x02
    29c0:	b9 81       	ldd	r27, Y+1	; 0x01
    29c2:	ce 0f       	add	r28, r30
    29c4:	d1 1d       	adc	r29, r1
    29c6:	0f b6       	in	r0, 0x3f	; 63
    29c8:	f8 94       	cli
    29ca:	de bf       	out	0x3e, r29	; 62
    29cc:	0f be       	out	0x3f, r0	; 63
    29ce:	cd bf       	out	0x3d, r28	; 61
    29d0:	ed 01       	movw	r28, r26
    29d2:	08 95       	ret

000029d4 <_exit>:
    29d4:	f8 94       	cli

000029d6 <__stop_program>:
    29d6:	ff cf       	rjmp	.-2      	; 0x29d6 <__stop_program>
